{"version":3,"file":"static/js/6155.08e50a59.chunk.js","mappings":"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","sources":["pages/LoadGeneratorDetail.tsx","services/api.ts"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport { \n  Card, \n  Row, \n  Col, \n  Statistic, \n  Button, \n  Space, \n  Tag, \n  Table, \n  Modal, \n  Form, \n  Input, \n  InputNumber,\n  Switch,\n  message,\n  Popconfirm,\n  Tabs\n} from 'antd';\nimport { \n  ArrowLeftOutlined,\n  ReloadOutlined,\n  PlusOutlined,\n  EditOutlined,\n  DeleteOutlined,\n  CheckCircleOutlined,\n  CloseCircleOutlined,\n  InfoCircleOutlined,\n  SettingOutlined,\n  CodeOutlined\n} from '@ant-design/icons';\nimport { loadGeneratorService } from '../services/api';\nimport type { LoadGenerator, LoadGeneratorConfig } from '../types/loadGenerator';\n\nconst LoadGeneratorDetail: React.FC = () => {\n  const { id } = useParams<{ id: string }>();\n  const navigate = useNavigate();\n  const [loadGenerator, setLoadGenerator] = useState<LoadGenerator | null>(null);\n  const [configs, setConfigs] = useState<LoadGeneratorConfig[]>([]);\n  const [loading, setLoading] = useState(false);\n  const [configModalVisible, setConfigModalVisible] = useState(false);\n  const [editingConfig, setEditingConfig] = useState<LoadGeneratorConfig | null>(null);\n  const [form] = Form.useForm();\n\n  useEffect(() => {\n    if (id) {\n      fetchLoadGenerator();\n      fetchConfigs();\n    }\n  }, [id]);\n\n  const fetchLoadGenerator = async () => {\n    if (!id) return;\n    setLoading(true);\n    try {\n      const data = await loadGeneratorService.getLoadGenerator(parseInt(id));\n      setLoadGenerator(data);\n    } catch (error) {\n      message.error('Failed to fetch load generator details');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const fetchConfigs = async () => {\n    if (!id) return;\n    try {\n      const data = await loadGeneratorService.getConfigs(parseInt(id));\n      setConfigs(data);\n    } catch (error) {\n      message.error('Failed to fetch configuration list');\n    }\n  };\n\n  const handleTestConnection = async () => {\n    if (!id) return;\n    try {\n      const result = await loadGeneratorService.testConnection(parseInt(id));\n      if (result.success) {\n        message.success('Connection test successful');\n        fetchLoadGenerator();\n      } else {\n        message.error(result.message);\n      }\n    } catch (error) {\n      message.error('Connection test failed');\n    }\n  };\n\n  const handleAddConfig = () => {\n    setEditingConfig(null);\n    form.resetFields();\n    setConfigModalVisible(true);\n  };\n\n  const handleEditConfig = (config: LoadGeneratorConfig) => {\n    setEditingConfig(config);\n    form.setFieldsValue(config);\n    setConfigModalVisible(true);\n  };\n\n  const handleDeleteConfig = async (configId: number) => {\n    try {\n      await loadGeneratorService.deleteConfig(configId);\n      message.success('Delete successful');\n      fetchConfigs();\n    } catch (error) {\n      message.error('Delete failed');\n    }\n  };\n\n  const handleConfigSubmit = async (values: any) => {\n    if (!id) return;\n    try {\n      if (editingConfig) {\n        await loadGeneratorService.updateConfig(editingConfig.id, values);\n        message.success('Update successful');\n      } else {\n        await loadGeneratorService.createConfig(parseInt(id), values);\n        message.success('Create successful');\n      }\n      setConfigModalVisible(false);\n      fetchConfigs();\n    } catch (error) {\n      message.error(editingConfig ? 'Update failed' : 'Create failed');\n    }\n  };\n\n  const getStatusTag = (status: string) => {\n    const statusMap = {\n      online: { color: '#52c41a', text: 'ONLINE' },\n      offline: { color: '#ff4d4f', text: 'OFFLINE' },\n      maintenance: { color: '#faad14', text: 'MAINTENANCE' }\n    };\n    const config = statusMap[status as keyof typeof statusMap] || { color: '#666', text: status.toUpperCase() };\n    return (\n      <span style={{\n        backgroundColor: config.color,\n        color: '#ffffff',\n        padding: '4px 12px',\n        borderRadius: '6px',\n        fontSize: '12px',\n        fontWeight: 600,\n        textTransform: 'uppercase',\n        letterSpacing: '0.5px'\n      }}>\n        {config.text}\n      </span>\n    );\n  };\n\n  const configColumns = [\n    {\n      title: 'CONFIG NAME',\n      dataIndex: 'config_name',\n      key: 'config_name',\n    },\n    {\n      title: 'MASTER CONFIG',\n      key: 'master',\n      render: (_: any, record: LoadGeneratorConfig) => (\n        <div>\n          <div>CPU: {record.master_cpu_cores} cores</div>\n          <div>Memory: {record.master_memory_gb} GB</div>\n        </div>\n      ),\n    },\n    {\n      title: 'WORKER CONFIG',\n      key: 'worker',\n      render: (_: any, record: LoadGeneratorConfig) => (\n        <div>\n          <div>Count: {record.worker_count} workers</div>\n          <div>CPU: {record.worker_cpu_cores} cores/worker</div>\n          <div>Memory: {record.worker_memory_gb} GB/worker</div>\n        </div>\n      ),\n    },\n    {\n      title: 'STATUS',\n      dataIndex: 'is_valid',\n      key: 'is_valid',\n      render: (isValid: boolean) => (\n        <span style={{\n          backgroundColor: isValid ? '#52c41a' : '#ff4d4f',\n          color: '#ffffff',\n          padding: '2px 8px',\n          borderRadius: '4px',\n          fontSize: '12px',\n          fontWeight: 500\n        }}>\n          {isValid ? 'VALID' : 'INVALID'}\n        </span>\n      ),\n    },\n    {\n      title: 'ACTIONS',\n      key: 'action',\n      render: (_: any, record: LoadGeneratorConfig) => (\n        <Space size=\"small\">\n          <Button \n            type=\"link\" \n            icon={<EditOutlined />}\n            onClick={() => handleEditConfig(record)}\n            style={{ color: 'var(--primary)' }}\n          >\n            EDIT\n          </Button>\n          <Popconfirm\n            title=\"Delete this configuration?\"\n            onConfirm={() => handleDeleteConfig(record.id)}\n            okText=\"Yes\"\n            cancelText=\"No\"\n            okButtonProps={{\n              style: {\n                background: '#6366f1',\n                borderColor: '#6366f1',\n                color: '#ffffff',\n                fontWeight: 600\n              }\n            }}\n            cancelButtonProps={{\n              style: {\n                background: '#2d2d2d',\n                borderColor: '#6366f1',\n                color: '#ffffff',\n                fontWeight: 500\n              }\n            }}\n            overlayStyle={{\n              background: '#1a1a1a',\n              border: '2px solid #6366f1',\n              borderRadius: '8px',\n              boxShadow: '0 8px 24px rgba(0, 0, 0, 0.6)',\n              color: '#ffffff'\n            }}\n            overlayClassName=\"custom-popconfirm\"\n            icon={\n              <svg\n                width=\"18\"\n                height=\"18\"\n                viewBox=\"0 0 24 24\"\n                xmlns=\"http://www.w3.org/2000/svg\"\n                style={{ \n                  display: 'inline-block', \n                  verticalAlign: 'baseline',\n                  marginBottom: '2px'\n                }}\n              >\n                <circle cx=\"12\" cy=\"12\" r=\"10\" fill=\"#faad14\" />\n                <rect x=\"11\" y=\"6\" width=\"2\" height=\"8\" rx=\"1\" fill=\"#1a1a1a\" />\n                <circle cx=\"12\" cy=\"17\" r=\"1.5\" fill=\"#1a1a1a\" />\n              </svg>\n            }\n          >\n            <Button type=\"link\" danger icon={<DeleteOutlined />}>\n              DELETE\n            </Button>\n          </Popconfirm>\n        </Space>\n      ),\n    },\n  ];\n\n  if (!loadGenerator) {\n    return <div style={{ color: 'var(--text-primary)' }}>Loading...</div>;\n  }\n\n  const tabItems = [\n    {\n      key: 'overview',\n      label: 'OVERVIEW',\n      children: (\n        <Row gutter={16}>\n          <Col span={8}>\n            <Card \n              title={\n                <div style={{ \n                  display: 'flex', \n                  alignItems: 'center', \n                  gap: '8px',\n                  color: 'var(--text-primary)',\n                  fontSize: '16px',\n                  fontWeight: 600\n                }}>\n                  <InfoCircleOutlined style={{ color: 'var(--primary)' }} />\n                  BASIC INFORMATION\n                </div>\n              }\n              className=\"detail-card\"\n              style={{ minHeight: '300px' }}\n            >\n              <div style={{ marginBottom: 16, color: 'var(--text-primary)' }}>\n                <strong>Name:</strong> {loadGenerator.name}\n              </div>\n              <div style={{ marginBottom: 16, color: 'var(--text-primary)' }}>\n                <strong>Host Address:</strong> {loadGenerator.host}:{loadGenerator.port}\n              </div>\n              <div style={{ marginBottom: 16, color: 'var(--text-primary)' }}>\n                <strong>Username:</strong> {loadGenerator.username}\n              </div>\n              <div style={{ marginBottom: 16, color: 'var(--text-primary)' }}>\n                <strong>Status:</strong> {getStatusTag(loadGenerator.status)}\n              </div>\n              {loadGenerator.description && (\n                <div style={{ color: 'var(--text-primary)' }}>\n                  <strong>Description:</strong> {loadGenerator.description}\n                </div>\n              )}\n            </Card>\n          </Col>\n          <Col span={8}>\n            <Card \n              title={\n                <div style={{ \n                  display: 'flex', \n                  alignItems: 'center', \n                  gap: '8px',\n                  color: 'var(--text-primary)',\n                  fontSize: '16px',\n                  fontWeight: 600\n                }}>\n                  <SettingOutlined style={{ color: 'var(--primary)' }} />\n                  HARDWARE CONFIG\n                </div>\n              }\n              className=\"detail-card\"\n              style={{ minHeight: '300px' }}\n            >\n              <div style={{ marginBottom: 16, color: 'var(--text-primary)' }}>\n                <strong>CPU Cores:</strong> {loadGenerator.cpu_cores || 'N/A'} cores\n              </div>\n              <div style={{ marginBottom: 16, color: 'var(--text-primary)' }}>\n                <strong>Memory:</strong> {loadGenerator.memory_gb || 'N/A'} GB\n              </div>\n              {loadGenerator.network_bandwidth && (\n                <div style={{ marginBottom: 16, color: 'var(--text-primary)' }}>\n                  <strong>Network Bandwidth:</strong> {loadGenerator.network_bandwidth}\n                </div>\n              )}\n              {loadGenerator.disk_space && (\n                <div style={{ color: 'var(--text-primary)' }}>\n                  <strong>Disk Space:</strong> {loadGenerator.disk_space}\n                </div>\n              )}\n            </Card>\n          </Col>\n          <Col span={8}>\n            <Card \n              title={\n                <div style={{ \n                  display: 'flex', \n                  alignItems: 'center', \n                  gap: '8px',\n                  color: 'var(--text-primary)',\n                  fontSize: '16px',\n                  fontWeight: 600\n                }}>\n                  <CodeOutlined style={{ color: 'var(--primary)' }} />\n                  SOFTWARE INFO\n                </div>\n              }\n              className=\"detail-card\"\n              style={{ minHeight: '300px' }}\n            >\n              {loadGenerator.os_info && loadGenerator.os_info.trim() && (\n                <div style={{ marginBottom: 16, color: 'var(--text-primary)' }}>\n                  <strong>Operating System:</strong> {loadGenerator.os_info}\n                </div>\n              )}\n              {loadGenerator.python_version && (\n                <div style={{ marginBottom: 16, color: 'var(--text-primary)' }}>\n                  <strong>Python Version:</strong> {loadGenerator.python_version}\n                </div>\n              )}\n              {loadGenerator.locust_version && (\n                <div style={{ marginBottom: 16, color: 'var(--text-primary)' }}>\n                  <strong>Locust Version:</strong> {loadGenerator.locust_version}\n                </div>\n              )}\n              {loadGenerator.last_heartbeat && (\n                <div style={{ color: 'var(--text-primary)' }}>\n                  <strong>Last Heartbeat:</strong> {new Date(loadGenerator.last_heartbeat).toLocaleString()}\n                </div>\n              )}\n              {!loadGenerator.os_info && !loadGenerator.python_version && !loadGenerator.locust_version && !loadGenerator.last_heartbeat && (\n                <div style={{ color: 'var(--text-muted)', fontStyle: 'italic' }}>\n                  No software information available\n                </div>\n              )}\n            </Card>\n          </Col>\n        </Row>\n      ),\n    },\n    {\n      key: 'resources',\n      label: 'RESOURCE USAGE',\n      children: (\n        <Row gutter={16}>\n          <Col span={8}>\n            <Card className=\"detail-card\">\n              <Statistic\n                title={<span style={{ color: 'var(--text-primary)' }}>CPU Usage</span>}\n                value={loadGenerator.cpu_usage || 0}\n                suffix=\"%\"\n                valueStyle={{ \n                  color: (loadGenerator.cpu_usage || 0) > 80 ? '#ff4d4f' : '#52c41a',\n                  fontSize: '24px',\n                  fontWeight: 600\n                }}\n              />\n            </Card>\n          </Col>\n          <Col span={8}>\n            <Card className=\"detail-card\">\n              <Statistic\n                title={<span style={{ color: 'var(--text-primary)' }}>Memory Usage</span>}\n                value={loadGenerator.memory_usage || 0}\n                suffix=\"%\"\n                valueStyle={{ \n                  color: (loadGenerator.memory_usage || 0) > 80 ? '#ff4d4f' : '#52c41a',\n                  fontSize: '24px',\n                  fontWeight: 600\n                }}\n              />\n            </Card>\n          </Col>\n          <Col span={8}>\n            <Card className=\"detail-card\">\n              <Statistic\n                title={<span style={{ color: 'var(--text-primary)' }}>Network Usage</span>}\n                value={loadGenerator.network_usage || 0}\n                suffix=\"%\"\n                valueStyle={{ \n                  color: (loadGenerator.network_usage || 0) > 80 ? '#ff4d4f' : '#52c41a',\n                  fontSize: '24px',\n                  fontWeight: 600\n                }}\n              />\n            </Card>\n          </Col>\n        </Row>\n      ),\n    },\n    {\n      key: 'configs',\n      label: 'CONFIGURATION MANAGEMENT',\n      children: (\n        <div>\n          <div style={{ marginBottom: '16px' }}>\n            <Button \n              type=\"primary\" \n              icon={<PlusOutlined />}\n              onClick={handleAddConfig}\n              className=\"detail-button-primary\"\n              style={{ marginRight: '8px' }}\n            >\n              ADD CONFIG\n            </Button>\n            <Button \n              icon={<ReloadOutlined />}\n              onClick={fetchConfigs}\n              className=\"detail-button-secondary\"\n            >\n              REFRESH\n            </Button>\n          </div>\n          <Table\n            columns={configColumns}\n            dataSource={configs}\n            rowKey=\"id\"\n            pagination={false}\n            className=\"detail-table\"\n          />\n        </div>\n      ),\n    },\n  ];\n\n  return (\n    <div className=\"detail-page-container\">\n      <div className=\"detail-page-header\">\n        <Space style={{ marginBottom: '16px' }}>\n          <Button \n            icon={<ArrowLeftOutlined />}\n            onClick={() => navigate('/load-generators')}\n            className=\"detail-button-secondary\"\n          >\n            BACK\n          </Button>\n          <h1 className=\"detail-page-title\">\n            {loadGenerator.name}\n          </h1>\n          {getStatusTag(loadGenerator.status)}\n        </Space>\n        <div>\n          <Button \n            type=\"primary\"\n            icon={<ReloadOutlined />}\n            onClick={handleTestConnection}\n            className=\"detail-button-primary\"\n          >\n            TEST CONNECTION\n          </Button>\n        </div>\n      </div>\n\n      <div className=\"detail-page-content\">\n        <Tabs \n          items={tabItems} \n          className=\"detail-tabs\"\n        />\n      </div>\n\n      {/* Configuration Modal */}\n      <Modal\n        title={editingConfig ? 'Edit Configuration' : 'Add Configuration'}\n        open={configModalVisible}\n        onCancel={() => setConfigModalVisible(false)}\n        onOk={() => form.submit()}\n        width={800}\n        className=\"detail-modal\"\n      >\n        <Form\n          form={form}\n          layout=\"vertical\"\n          onFinish={handleConfigSubmit}\n          className=\"detail-form\"\n        >\n          <Form.Item\n            name=\"config_name\"\n            label=\"Configuration Name\"\n            rules={[{ required: true, message: 'Please enter configuration name' }]}\n          >\n            <Input placeholder=\"Enter configuration name\" />\n          </Form.Item>\n\n          <div className=\"form-section\">\n            <h3 style={{ color: 'var(--text-primary)' }}>Master Configuration</h3>\n            <Row gutter={16}>\n              <Col span={8}>\n                <Form.Item\n                  name=\"master_enabled\"\n                  label=\"Enable Master\"\n                  valuePropName=\"checked\"\n                >\n                  <Switch />\n                </Form.Item>\n              </Col>\n              <Col span={8}>\n                <Form.Item\n                  name=\"master_cpu_cores\"\n                  label=\"CPU Cores\"\n                  rules={[{ required: true, message: 'Please enter CPU cores' }]}\n                >\n                  <InputNumber min={1} style={{ width: '100%' }} />\n                </Form.Item>\n              </Col>\n              <Col span={8}>\n                <Form.Item\n                  name=\"master_memory_gb\"\n                  label=\"Memory (GB)\"\n                  rules={[{ required: true, message: 'Please enter memory size' }]}\n                >\n                  <InputNumber min={1} step={0.1} style={{ width: '100%' }} />\n                </Form.Item>\n              </Col>\n            </Row>\n          </div>\n\n          <div className=\"form-section\">\n            <h3 style={{ color: 'var(--text-primary)' }}>Worker Configuration</h3>\n            <Row gutter={16}>\n              <Col span={8}>\n                <Form.Item\n                  name=\"worker_count\"\n                  label=\"Worker Count\"\n                  rules={[{ required: true, message: 'Please enter worker count' }]}\n                >\n                  <InputNumber min={1} style={{ width: '100%' }} />\n                </Form.Item>\n              </Col>\n              <Col span={8}>\n                <Form.Item\n                  name=\"worker_cpu_cores\"\n                  label=\"CPU Cores per Worker\"\n                  rules={[{ required: true, message: 'Please enter CPU cores' }]}\n                >\n                  <InputNumber min={1} style={{ width: '100%' }} />\n                </Form.Item>\n              </Col>\n              <Col span={8}>\n                <Form.Item\n                  name=\"worker_memory_gb\"\n                  label=\"Memory (GB) per Worker\"\n                  rules={[{ required: true, message: 'Please enter memory size' }]}\n                >\n                  <InputNumber min={1} step={0.1} style={{ width: '100%' }} />\n                </Form.Item>\n              </Col>\n            </Row>\n          </div>\n\n          <div className=\"form-section\">\n            <h3 style={{ color: 'var(--text-primary)' }}>System Reserved</h3>\n            <Row gutter={16}>\n              <Col span={8}>\n                <Form.Item\n                  name=\"system_cpu_cores\"\n                  label=\"System Reserved CPU Cores\"\n                  rules={[{ required: true, message: 'Please enter system reserved CPU cores' }]}\n                >\n                  <InputNumber min={1} style={{ width: '100%' }} />\n                </Form.Item>\n              </Col>\n              <Col span={8}>\n                <Form.Item\n                  name=\"system_memory_gb\"\n                  label=\"System Reserved Memory (GB)\"\n                  rules={[{ required: true, message: 'Please enter system reserved memory' }]}\n                >\n                  <InputNumber min={1} step={0.1} style={{ width: '100%' }} />\n                </Form.Item>\n              </Col>\n              <Col span={8}>\n                <Form.Item\n                  name=\"system_network_mbps\"\n                  label=\"System Reserved Network Bandwidth (Mbps)\"\n                  rules={[{ required: true, message: 'Please enter system reserved network bandwidth' }]}\n                >\n                  <InputNumber min={1} style={{ width: '100%' }} />\n                </Form.Item>\n              </Col>\n            </Row>\n          </div>\n\n          <Form.Item\n            name=\"description\"\n            label=\"Configuration Description\"\n          >\n            <Input.TextArea rows={3} placeholder=\"Enter configuration description\" />\n          </Form.Item>\n        </Form>\n      </Modal>\n    </div>\n  );\n};\n\n// 使用 React.memo 优化组件性能，避免不必要的重渲染\nexport default React.memo(LoadGeneratorDetail);\n","import axios, { AxiosResponse } from 'axios';\nimport { LoadGenerator, LoadGeneratorConfig, ConnectionTestResult, ConfigValidationResult } from '../types/loadGenerator';\nimport { \n  TestTask, TestTaskWithScenarios, TestTaskCreate, TestTaskUpdate,\n  TestStrategy, TestStrategyCreate, TestStrategyUpdate,\n  TestScenario, TestScenarioCreate, TestScenarioUpdate,\n  TestExecution, TestExecutionCreate, TestExecutionUpdate, TestExecutionWithDetails,\n  TestExecutionStartRequest, TestExecutionStopRequest,\n  TestScript \n} from '../types/testTask';\n\n// 创建axios实例\nconst api = axios.create({\n  baseURL: '/api/v1',\n  timeout: 10000,\n  headers: {\n    'Content-Type': 'application/json',\n  },\n});\n\n// 请求拦截器\napi.interceptors.request.use(\n  (config) => {\n    // 可以在这里添加认证token\n    const token = localStorage.getItem('token');\n    if (token) {\n      config.headers.Authorization = `Bearer ${token}`;\n    }\n    return config;\n  },\n  (error) => {\n    return Promise.reject(error);\n  }\n);\n\n// 响应拦截器\napi.interceptors.response.use(\n  (response) => {\n    return response.data;\n  },\n  (error) => {\n    if (error.response) {\n      const { status, data } = error.response;\n      if (status === 401) {\n        // 处理未授权\n        localStorage.removeItem('token');\n        window.location.href = '/login';\n      }\n      throw new Error(data.message || '请求失败');\n    }\n    throw new Error('网络错误');\n  }\n);\n\n// 压测机相关API\nexport const loadGeneratorService = {\n  // 获取压测机列表\n  getLoadGenerators: (params?: any): Promise<LoadGenerator[]> =>\n    api.get('/load-generators/', { params }),\n\n  // 获取单个压测机\n  getLoadGenerator: (id: number): Promise<LoadGenerator> => \n    api.get(`/load-generators/${id}/`),\n\n  // 创建压测机\n  createLoadGenerator: (data: any): Promise<LoadGenerator> => \n    api.post('/load-generators/', data),\n\n  // 更新压测机\n  updateLoadGenerator: (id: number, data: any): Promise<LoadGenerator> => \n    api.put(`/load-generators/${id}/`, data),\n\n  // 删除压测机\n  deleteLoadGenerator: (id: number): Promise<void> => \n    api.delete(`/load-generators/${id}/`),\n\n  // 测试连接\n  testConnection: (id: number): Promise<ConnectionTestResult> => \n    api.post(`/load-generators/${id}/test-connection/`),\n\n  // 获取压测机配置列表\n  getConfigs: (id: number): Promise<LoadGeneratorConfig[]> => \n    api.get(`/load-generators/${id}/configs/`),\n\n  // 创建压测机配置\n  createConfig: (id: number, data: any): Promise<LoadGeneratorConfig> => \n    api.post(`/load-generators/${id}/configs/`, data),\n\n  // 更新压测机配置\n  updateConfig: (id: number, data: any): Promise<LoadGeneratorConfig> => \n    api.put(`/load-generators/configs/${id}/`, data),\n\n  // 删除压测机配置\n  deleteConfig: (id: number): Promise<void> => \n    api.delete(`/load-generators/configs/${id}/`),\n\n  // 验证压测机配置\n  validateConfig: (id: number): Promise<ConfigValidationResult> => \n    api.post(`/load-generators/configs/${id}/validate/`),\n};\n\n// 测试任务相关API\nexport const testTaskService = {\n  // 获取测试任务列表\n  getTestTasks: (params?: any): Promise<TestTask[]> =>\n    api.get('/test-tasks/', { params }),\n\n  // 获取单个测试任务（包含场景）\n  getTestTask: (id: number): Promise<TestTaskWithScenarios> =>\n    api.get(`/test-tasks/${id}/`),\n\n  // 创建测试任务\n  createTestTask: (data: TestTaskCreate): Promise<TestTask> =>\n    api.post('/test-tasks/', data),\n\n  // 更新测试任务\n  updateTestTask: (id: number, data: TestTaskUpdate): Promise<TestTask> =>\n    api.put(`/test-tasks/${id}/`, data),\n\n  // 删除测试任务\n  deleteTestTask: (id: number): Promise<void> =>\n    api.delete(`/test-tasks/${id}/`),\n\n  // 获取测试执行记录\n  getExecutions: (taskId: number): Promise<TestExecution[]> =>\n    api.get(`/test-tasks/${taskId}/executions/`),\n};\n\n// 测试策略相关API\nexport const testStrategyService = {\n  // 获取测试策略列表\n  getTestStrategies: (params?: any): Promise<TestStrategy[]> =>\n    api.get('/test-strategies/', { params }),\n\n  // 获取单个测试策略\n  getTestStrategy: (id: number): Promise<TestStrategy> =>\n    api.get(`/test-strategies/${id}/`),\n\n  // 创建测试策略\n  createTestStrategy: (data: TestStrategyCreate): Promise<TestStrategy> =>\n    api.post('/test-strategies/', data),\n\n  // 更新测试策略\n  updateTestStrategy: (id: number, data: TestStrategyUpdate): Promise<TestStrategy> =>\n    api.put(`/test-strategies/${id}/`, data),\n\n  // 删除测试策略\n  deleteTestStrategy: (id: number): Promise<void> =>\n    api.delete(`/test-strategies/${id}/`),\n};\n\n// 测试场景相关API\nexport const testScenarioService = {\n  // 根据任务ID获取测试场景列表\n  getTestScenariosByTask: (taskId: number): Promise<TestScenario[]> =>\n    api.get(`/test-scenarios/task/${taskId}/`),\n\n  // 获取单个测试场景\n  getTestScenario: (id: number): Promise<TestScenario> =>\n    api.get(`/test-scenarios/${id}/`),\n\n  // 创建测试场景\n  createTestScenario: (data: TestScenarioCreate): Promise<TestScenario> =>\n    api.post('/test-scenarios/', data),\n\n  // 更新测试场景\n  updateTestScenario: (id: number, data: TestScenarioUpdate): Promise<TestScenario> =>\n    api.put(`/test-scenarios/${id}/`, data),\n\n  // 删除测试场景\n  deleteTestScenario: (id: number): Promise<void> =>\n    api.delete(`/test-scenarios/${id}/`),\n\n  // 获取场景关联的文件\n  getScenarioFiles: (scenarioId: number): Promise<any[]> =>\n    api.get(`/scenario-files/scenario/${scenarioId}/files/`),\n\n  // 上传场景文件\n  uploadScenarioFile: (scenarioId: number, formData: FormData): Promise<any> =>\n    api.post(`/scenario-files/scenario/${scenarioId}/files/`, formData, {\n      headers: {\n        'Content-Type': 'multipart/form-data',\n      },\n    }),\n};\n\n// 测试执行相关API\nexport const testExecutionService = {\n  // 获取测试执行列表\n  getTestExecutions: (params?: any): Promise<TestExecution[]> =>\n    api.get('/test-executions/', { params }),\n\n  // 获取单个测试执行详情\n  getTestExecution: (id: number): Promise<TestExecutionWithDetails> =>\n    api.get(`/test-executions/${id}/`),\n\n  // 创建测试执行\n  createTestExecution: (data: TestExecutionCreate): Promise<TestExecution> =>\n    api.post('/test-executions/', data),\n\n  // 更新测试执行\n  updateTestExecution: (id: number, data: TestExecutionUpdate): Promise<TestExecution> =>\n    api.put(`/test-executions/${id}/`, data),\n\n  // 启动测试执行\n  startTestExecution: (id: number): Promise<any> =>\n    api.post(`/test-executions/${id}/start/`),\n\n  // 停止测试执行\n  stopTestExecution: (id: number, data: TestExecutionStopRequest): Promise<any> =>\n    api.post(`/test-executions/${id}/stop/`, data),\n\n  // 删除测试执行\n  deleteTestExecution: (id: number): Promise<void> =>\n    api.delete(`/test-executions/${id}/`),\n};\n\n// 测试脚本相关API\nexport const testScriptService = {\n  // 获取测试脚本列表\n  getTestScripts: (params?: any): Promise<TestScript[]> =>\n    api.get('/test-scripts/', { params }),\n\n  // 获取单个测试脚本\n  getTestScript: (id: number): Promise<TestScript> =>\n    api.get(`/test-scripts/${id}/`),\n\n  // 创建测试脚本\n  createTestScript: (data: any): Promise<TestScript> =>\n    api.post('/test-scripts/', data),\n\n  // 更新测试脚本\n  updateTestScript: (id: number, data: any): Promise<TestScript> =>\n    api.put(`/test-scripts/${id}/`, data),\n\n  // 删除测试脚本\n  deleteTestScript: (id: number): Promise<void> =>\n    api.delete(`/test-scripts/${id}/`),\n\n  // AI生成脚本\n  generateScript: (data: any): Promise<TestScript> =>\n    api.post('/test-scripts/generate/', data),\n\n  // AI优化脚本\n  optimizeScript: (id: number, data: any): Promise<TestScript> =>\n    api.post(`/test-scripts/${id}/optimize/`, data),\n};\n\n// 心跳检测相关API\nexport const heartbeatService = {\n  // 获取心跳检测状态\n  getHeartbeatStatus: (): Promise<any> =>\n    api.get('/heartbeat/status'),\n\n  // 手动触发心跳检测\n  checkAllHeartbeats: (): Promise<any> =>\n    api.post('/heartbeat/check-all'),\n\n  // 异步触发心跳检测\n  checkAllHeartbeatsAsync: (): Promise<any> =>\n    api.post('/heartbeat/check-all-async'),\n\n  // 获取任务状态\n  getTaskStatus: (taskId: string): Promise<any> =>\n    api.get(`/heartbeat/task/${taskId}`),\n};\n\n\n// 监控相关API\nexport const monitoringService = {\n  // 获取实时监控数据\n  getRealtimeMetrics: (loadGeneratorId: number) => \n    api.get(`/monitoring/realtime/${loadGeneratorId}`),\n\n  // 获取历史监控数据\n  getHistoricalMetrics: (loadGeneratorId: number, params: any) => \n    api.get(`/monitoring/historical/${loadGeneratorId}`, { params }),\n\n  // 获取测试报告\n  getTestReport: (executionId: number) => \n    api.get(`/monitoring/reports/${executionId}`),\n};\n\nexport default api;\n"],"names":["LoadGeneratorDetail","id","useParams","navigate","useNavigate","loadGenerator","setLoadGenerator","useState","configs","setConfigs","loading","setLoading","configModalVisible","setConfigModalVisible","editingConfig","setEditingConfig","form","Form","useForm","useEffect","fetchLoadGenerator","fetchConfigs","async","data","loadGeneratorService","getLoadGenerator","parseInt","error","message","getConfigs","getStatusTag","status","config","online","color","text","offline","maintenance","toUpperCase","_jsx","style","backgroundColor","padding","borderRadius","fontSize","fontWeight","textTransform","letterSpacing","children","configColumns","title","dataIndex","key","render","_","record","_jsxs","master_cpu_cores","master_memory_gb","worker_count","worker_cpu_cores","worker_memory_gb","isValid","Space","size","Button","type","icon","EditOutlined","onClick","handleEditConfig","setFieldsValue","Popconfirm","onConfirm","deleteConfig","configId","success","handleDeleteConfig","okText","cancelText","okButtonProps","background","borderColor","cancelButtonProps","overlayStyle","border","boxShadow","overlayClassName","width","height","viewBox","xmlns","display","verticalAlign","marginBottom","cx","cy","r","fill","x","y","rx","danger","DeleteOutlined","tabItems","label","Row","gutter","Col","span","Card","alignItems","gap","InfoCircleOutlined","className","minHeight","name","host","port","username","description","SettingOutlined","cpu_cores","memory_gb","network_bandwidth","disk_space","CodeOutlined","os_info","trim","python_version","locust_version","last_heartbeat","Date","toLocaleString","fontStyle","Statistic","value","cpu_usage","suffix","valueStyle","memory_usage","network_usage","PlusOutlined","handleAddConfig","resetFields","marginRight","ReloadOutlined","Table","columns","dataSource","rowKey","pagination","ArrowLeftOutlined","result","testConnection","Tabs","items","Modal","open","onCancel","onOk","submit","layout","onFinish","updateConfig","values","createConfig","Item","rules","required","Input","placeholder","valuePropName","Switch","InputNumber","min","step","TextArea","rows","React","api","axios","create","baseURL","timeout","headers","interceptors","request","use","token","localStorage","getItem","Authorization","concat","Promise","reject","response","removeItem","window","location","href","Error","getLoadGenerators","params","get","createLoadGenerator","post","updateLoadGenerator","put","deleteLoadGenerator","delete","validateConfig","testTaskService","getTestTasks","getTestTask","createTestTask","updateTestTask","deleteTestTask","getExecutions","taskId","testStrategyService","getTestStrategies","getTestStrategy","createTestStrategy","updateTestStrategy","deleteTestStrategy","testScenarioService","getTestScenariosByTask","getTestScenario","createTestScenario","updateTestScenario","deleteTestScenario","getScenarioFiles","scenarioId","uploadScenarioFile","formData","testExecutionService","getTestExecutions","getTestExecution","createTestExecution","updateTestExecution","startTestExecution","stopTestExecution","deleteTestExecution","heartbeatService","getHeartbeatStatus","checkAllHeartbeats","checkAllHeartbeatsAsync","getTaskStatus"],"sourceRoot":""}