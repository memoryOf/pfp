{"version":3,"file":"static/js/2856.d6927bcf.chunk.js","mappings":"4KAYA,MAAMA,E,SAAMC,EAAMC,OAAO,CACvBC,QAAS,UACTC,QAAS,IACTC,QAAS,CACP,eAAgB,sBAKpBL,EAAIM,aAAaC,QAAQC,IACtBC,IAEC,MAAMC,EAAQC,aAAaC,QAAQ,SAInC,OAHIF,IACFD,EAAOJ,QAAQQ,cAAa,UAAAC,OAAaJ,IAEpCD,GAERM,GACQC,QAAQC,OAAOF,IAK1Bf,EAAIM,aAAaY,SAASV,IACvBU,GACQA,EAASC,KAEjBJ,IACC,GAAIA,EAAMG,SAAU,CAClB,MAAM,OAAEE,EAAM,KAAED,GAASJ,EAAMG,SAM/B,MALe,MAAXE,IAEFT,aAAaU,WAAW,SACxBC,OAAOC,SAASC,KAAO,UAEnB,IAAIC,MAAMN,EAAKO,SAAW,2BAClC,CACA,MAAM,IAAID,MAAM,8BAKb,MAAME,EAAuB,CAElCC,kBAAoBC,GAClB7B,EAAI8B,IAAI,oBAAqB,CAAED,WAGjCE,iBAAmBC,GACjBhC,EAAI8B,IAAI,oBAADhB,OAAqBkB,EAAE,MAGhCC,oBAAsBd,GACpBnB,EAAIkC,KAAK,oBAAqBf,GAGhCgB,oBAAqBA,CAACH,EAAYb,IAChCnB,EAAIoC,IAAI,oBAADtB,OAAqBkB,EAAE,KAAKb,GAGrCkB,oBAAsBL,GACpBhC,EAAIsC,OAAO,oBAADxB,OAAqBkB,EAAE,MAGnCO,eAAiBP,GACfhC,EAAIkC,KAAK,oBAADpB,OAAqBkB,EAAE,sBAGjCQ,WAAaR,GACXhC,EAAI8B,IAAI,oBAADhB,OAAqBkB,EAAE,cAGhCS,aAAcA,CAACT,EAAYb,IACzBnB,EAAIkC,KAAK,oBAADpB,OAAqBkB,EAAE,aAAab,GAG9CuB,aAAcA,CAACV,EAAYb,IACzBnB,EAAIoC,IAAI,4BAADtB,OAA6BkB,EAAE,KAAKb,GAG7CwB,aAAeX,GACbhC,EAAIsC,OAAO,4BAADxB,OAA6BkB,EAAE,MAG3CY,eAAiBZ,GACfhC,EAAIkC,KAAK,4BAADpB,OAA6BkB,EAAE,gBAI9Ba,EAAkB,CAE7BC,aAAejB,GACb7B,EAAI8B,IAAI,eAAgB,CAAED,WAG5BkB,YAAcf,GACZhC,EAAI8B,IAAI,eAADhB,OAAgBkB,EAAE,MAG3BgB,eAAiB7B,GACfnB,EAAIkC,KAAK,eAAgBf,GAG3B8B,eAAgBA,CAACjB,EAAYb,IAC3BnB,EAAIoC,IAAI,eAADtB,OAAgBkB,EAAE,KAAKb,GAGhC+B,eAAiBlB,GACfhC,EAAIsC,OAAO,eAADxB,OAAgBkB,EAAE,MAG9BmB,cAAgBC,GACdpD,EAAI8B,IAAI,eAADhB,OAAgBsC,EAAM,kBAIpBC,EAAsB,CAEjCC,kBAAoBzB,GAClB7B,EAAI8B,IAAI,oBAAqB,CAAED,WAGjC0B,gBAAkBvB,GAChBhC,EAAI8B,IAAI,oBAADhB,OAAqBkB,EAAE,MAGhCwB,mBAAqBrC,GACnBnB,EAAIkC,KAAK,oBAAqBf,GAGhCsC,mBAAoBA,CAACzB,EAAYb,IAC/BnB,EAAIoC,IAAI,oBAADtB,OAAqBkB,EAAE,KAAKb,GAGrCuC,mBAAqB1B,GACnBhC,EAAIsC,OAAO,oBAADxB,OAAqBkB,EAAE,OAIxB2B,EAAsB,CAEjCC,uBAAyBR,GACvBpD,EAAI8B,IAAI,wBAADhB,OAAyBsC,EAAM,MAGxCS,gBAAkB7B,GAChBhC,EAAI8B,IAAI,mBAADhB,OAAoBkB,EAAE,MAG/B8B,mBAAqB3C,GACnBnB,EAAIkC,KAAK,mBAAoBf,GAG/B4C,mBAAoBA,CAAC/B,EAAYb,IAC/BnB,EAAIoC,IAAI,mBAADtB,OAAoBkB,EAAE,KAAKb,GAGpC6C,mBAAqBhC,GACnBhC,EAAIsC,OAAO,mBAADxB,OAAoBkB,EAAE,MAGlCiC,iBAAmBC,GACjBlE,EAAI8B,IAAI,4BAADhB,OAA6BoD,EAAU,YAGhDC,mBAAoBA,CAACD,EAAoBE,IACvCpE,EAAIkC,KAAK,4BAADpB,OAA6BoD,EAAU,WAAWE,EAAU,CAClE/D,QAAS,CACP,eAAgB,0BAMXgE,EAAuB,CAElCC,kBAAoBzC,GAClB7B,EAAI8B,IAAI,oBAAqB,CAAED,WAGjC0C,iBAAmBvC,GACjBhC,EAAI8B,IAAI,oBAADhB,OAAqBkB,EAAE,MAGhCwC,oBAAsBrD,GACpBnB,EAAIkC,KAAK,oBAAqBf,GAGhCsD,oBAAqBA,CAACzC,EAAYb,IAChCnB,EAAIoC,IAAI,oBAADtB,OAAqBkB,EAAE,KAAKb,GAGrCuD,mBAAqB1C,GACnBhC,EAAIkC,KAAK,oBAADpB,OAAqBkB,EAAE,YAGjC2C,kBAAmBA,CAAC3C,EAAYb,IAC9BnB,EAAIkC,KAAK,oBAADpB,OAAqBkB,EAAE,UAAUb,GAG3CyD,oBAAsB5C,GACpBhC,EAAIsC,OAAO,oBAADxB,OAAqBkB,EAAE,OAmCxB6C,EAAmB,CAE9BC,mBAAoBA,IAClB9E,EAAI8B,IAAI,qBAGViD,mBAAoBA,IAClB/E,EAAIkC,KAAK,wBAGX8C,wBAAyBA,IACvBhF,EAAIkC,KAAK,8BAGX+C,cAAgB7B,GACdpD,EAAI8B,IAAI,mBAADhB,OAAoBsC,I,ycClQ/B,MAAM,KAAE8B,GAASC,EAAAA,EAgdjB,EA5bkDC,IAO3C,IAP4C,MACjDC,EAAQ,GAAE,SACVC,EAAQ,OACRC,EAAM,SACNC,EAAW,gBAAe,SAC1BC,GAAW,EAAK,OAChBC,EAAS,SACVN,EACC,MAAOO,EAAaC,IAAkBC,EAAAA,EAAAA,UAASR,IACxCS,EAAcC,IAAmBF,EAAAA,EAAAA,WAAS,IAC1CG,EAAkBC,IAAuBJ,EAAAA,EAAAA,UAAwC,OACjFK,EAASC,IAAcN,EAAAA,EAAAA,WAAS,GACjCO,GAAYC,EAAAA,EAAAA,QAAmD,OAGrEC,EAAAA,EAAAA,WAAU,KAERC,EAAAA,GAAiBC,SAAS,CAAExE,GAAI,WAGhCuE,EAAAA,GAAiBE,yBAAyB,SAAU,CAClDC,UAAW,CACTC,KAAM,CACJ,CAAC,cAAe,oBAChB,CAAC,gBAAiB,iBAClB,CAAC,iBAAkB,kBACnB,CAAC,eAAgB,kBACjB,CAAC,QAAS,WACV,CAAC,WAAY,WACb,CAAC,UAAW,WACZ,CAAC,SAAU,WACX,CAAC,WAAY,WACb,CAAC,UAAW,WACZ,CAAC,YAAa,WACd,CAAC,cAAe,WAChB,CAAC,UAAW,WACZ,CAAC,QAAS,WACV,CAAC,YAAa,WACd,CAAC,WAAY,WACb,CAAC,YAAa,WACd,CAAC,QAAS,WACV,CAAC,OAAQ,WACT,CAAC,QAAS,WACV,CAAC,OAAQ,WACT,CAAC,OAAQ,WACT,CAAC,SAAU,YACX,CAAC,UAAW,YACZ,CAAC,SAAU,YACX,CAAC,OAAQ,WACT,CAAC,kBAAmB,kBACpB,CAAC,IAAK,SAAU,WAChB,CAAC,kBAAmB,kBACpB,CAAC,IAAK,SAAU,kBAChB,CAAC,0BAA2B,gBAC5B,CAAC,oBAAqB,cACtB,CAAC,MAAO,UACR,CAAC,cAAe,aAChB,CAAC,QAAS,aACV,CAAC,MAAO,SACR,CAAC,2BAA4B,eAE/BC,OAAQ,CACN,CAAC,UAAW,UACZ,CAAC,MAAO,iBACR,CAAC,IAAK,SAAU,SAElBC,cAAe,CACb,CAAC,UAAW,UACZ,CAAC,MAAO,iBACR,CAAC,IAAK,SAAU,YAMtBN,EAAAA,GAAcO,YAAY,WAAY,CACpCC,KAAM,UACNC,SAAS,EACTC,MAAO,CACL,CAAEvG,MAAO,UAAWwG,WAAY,SAAUC,UAAW,QACrD,CAAEzG,MAAO,mBAAoBwG,WAAY,SAAUC,UAAW,QAC9D,CAAEzG,MAAO,gBAAiBwG,WAAY,SAAUC,UAAW,QAC3D,CAAEzG,MAAO,iBAAkBwG,WAAY,SAAUC,UAAW,QAC5D,CAAEzG,MAAO,SAAUwG,WAAY,UAC/B,CAAExG,MAAO,SAAUwG,WAAY,UAC/B,CAAExG,MAAO,eAAgBwG,WAAY,UACrC,CAAExG,MAAO,aAAcwG,WAAY,UACnC,CAAExG,MAAO,UAAWwG,WAAY,SAAUC,UAAW,UACrD,CAAEzG,MAAO,WAAYwG,WAAY,SAAUC,UAAW,QACtD,CAAEzG,MAAO,aAAcwG,WAAY,UACnC,CAAExG,MAAO,YAAawG,WAAY,UAClC,CAAExG,MAAO,WAAYwG,WAAY,UACjC,CAAExG,MAAO,WAAYwG,WAAY,UACjC,CAAExG,MAAO,OAAQwG,WAAY,UAC7B,CAAExG,MAAO,WAAYwG,WAAY,UACjC,CAAExG,MAAO,YAAawG,WAAY,WAEpCE,OAAQ,CACN,oBAAqB,UACrB,oBAAqB,UACrB,8BAA+B,UAC/B,oCAAqC,UACrC,6BAA8B,UAC9B,qCAAsC,UACtC,0BAA2B,UAC3B,0BAA2B,UAC3B,8BAA+B,UAC/B,iCAAkC,UAClC,6BAA8B,UAC9B,+BAAgC,UAChC,qCAAsC,UACtC,gCAAiC,YACjC,4BAA6B,UAC7B,6BAA8B,UAC9B,sCAAuC,YACvC,kCAAmC,YACnC,8BAA+B,UAC/B,0BAA2B,UAC3B,sBAAuB,UACvB,iCAAkC,UAClC,6BAA8B,UAC9B,iCAAkC,UAClC,0CAA2C,UAC3C,yCAA0C,aAK9Cb,EAAAA,GAAcc,SAAS,aACtB,IAGH,MAuJMC,EAAc,CAClBC,aAfwBC,IACxB,MAAMC,EAAS,IAAIC,WASnB,OARAD,EAAOE,OAAUC,IAAO,IAADC,EACrB,MAAMC,EAAkB,QAAXD,EAAGD,EAAEG,cAAM,IAAAF,OAAA,EAARA,EAAUG,OAC1BpC,EAAekC,GACf3B,GAAW,GACH,OAARb,QAAQ,IAARA,GAAAA,EAAWwC,GACXpG,EAAAA,GAAQuG,QAAQ,gBAADnH,OAAO0G,EAAKU,KAAI,+BAEjCT,EAAOU,WAAWX,IACX,GAMPY,OAAQ,MACRC,gBAAgB,EAChBC,UAAU,GAGZ,OACEC,EAAAA,EAAAA,KAACC,EAAAA,EAAI,CACHC,OACEC,EAAAA,EAAAA,MAACC,EAAAA,EAAK,CAAAC,SAAA,EACJL,EAAAA,EAAAA,KAACM,EAAAA,EAAgB,KACjBN,EAAAA,EAAAA,KAACrD,EAAI,CAAC4D,QAAM,EAAAF,SAAC,mCACZ1C,IAAWqC,EAAAA,EAAAA,KAACrD,EAAI,CAAC6D,KAAK,UAASH,SAAC,4BAGrCI,MAAO,CACLC,WAAY,UACZC,OAAQ,qBAEVC,UAAW,CAAEC,QAAS,QAASR,UAE/BF,EAAAA,EAAAA,MAACW,EAAAA,EAAG,CAACC,OAAQ,CAAC,GAAI,IAAIV,SAAA,EAEpBL,EAAAA,EAAAA,KAACgB,EAAAA,EAAG,CAACC,KAAM,GAAGZ,UACZF,EAAAA,EAAAA,MAACC,EAAAA,EAAK,CAACc,MAAI,EAAAb,SAAA,EACTL,EAAAA,EAAAA,KAACmB,EAAAA,GAAMC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAKrC,GAAW,IAAAsB,UACrBL,EAAAA,EAAAA,KAACqB,EAAAA,GAAM,CACLC,MAAMtB,EAAAA,EAAAA,KAACuB,EAAAA,EAAc,IACrBd,MAAO,CACLC,WAAY,oDACZC,OAAQ,OACRa,MAAO,QACPnB,SACH,iCAKHL,EAAAA,EAAAA,KAACqB,EAAAA,GAAM,CACLC,MAAMtB,EAAAA,EAAAA,KAACyB,EAAAA,EAAmB,IAC1BC,QA3FWC,UACrB,GAAKvE,EAAYwE,OAAjB,CAKApE,GAAgB,GAChB,IACE,MAAMiC,OAxEmBkC,WAE3B,MAAME,EAAmE,GAEzE,IAEE,MAAMC,EAAQC,EAAKC,MAAM,MAEzB,IAAK,IAAIC,EAAI,EAAGA,EAAIH,EAAMI,OAAQD,IAAK,CACrC,MAAME,EAAOL,EAAMG,GACbG,EAAaH,EAAI,EAGnBE,EAAKP,SAAWO,EAAKE,WAAW,OAASF,EAAKE,WAAW,OACxDF,EAAKG,SAAS,MAASH,EAAKP,OAAOW,SAAS,KAKjD,MAAMC,GAAcL,EAAKM,MAAM,QAAU,IAAIP,OACvCQ,GAAeP,EAAKM,MAAM,QAAU,IAAIP,OACxCS,GAAgBR,EAAKM,MAAM,QAAU,IAAIP,OACzCU,GAAiBT,EAAKM,MAAM,QAAU,IAAIP,OAC1CW,GAAcV,EAAKM,MAAM,QAAU,IAAIP,OACvCY,GAAeX,EAAKM,MAAM,QAAU,IAAIP,OAE1CM,IAAeE,GAAeC,IAAiBC,GAAiBC,IAAeC,GACjFjB,EAAOkB,KAAK,CACVZ,KAAMC,EACNY,OAAQ,EACR7J,QAAS,mCAKb,MAAM8J,GAAgBd,EAAKM,MAAM,OAAS,IAAIP,OACxCgB,GAAgBf,EAAKM,MAAM,OAAS,IAAIP,OAE1Ce,EAAe,IAAM,GAAKC,EAAe,IAAM,GACjDrB,EAAOkB,KAAK,CACVZ,KAAMC,EACNY,OAAQ,EACR7J,QAAS,oDAGf,CAEA,MAAO,CACLgK,QAA2B,IAAlBtB,EAAOK,OAChBL,SAEJ,CAAE,MAAOrJ,GACP,MAAO,CACL2K,SAAS,EACTtB,OAAQ,CAAC,CACPM,KAAM,EACNa,OAAQ,EACR7J,QAAS,yCAGf,GAYuBiK,CAAqBhG,GAC1CM,EAAoB+B,GAEhBA,EAAO0D,QACThK,EAAAA,GAAQuG,QAAQ,wCAEhBvG,EAAAA,GAAQX,MAAM,gBAADD,OAAOkH,EAAOoC,OAAOK,OAAM,mCAE5C,CAAE,MAAO1J,GACPW,EAAAA,GAAQX,MAAM,uCAChB,CAAC,QACCgF,GAAgB,EAClB,CAhBA,MAFErE,EAAAA,GAAQkK,QAAQ,qDA0FRC,QAAS/F,EACTkD,MAAO,CACLC,WAAY,oDACZC,OAAQ,OACRa,MAAO,QACPnB,SACH,8BAIDL,EAAAA,EAAAA,KAACqB,EAAAA,GAAM,CACLC,MAAMtB,EAAAA,EAAAA,KAACuD,EAAAA,EAAY,IACnB7B,QAhFO8B,KACZpG,EAAYwE,QAKX,OAAN5E,QAAM,IAANA,GAAAA,EAASI,EAAaH,GACtBW,GAAW,GACXzE,EAAAA,GAAQuG,QAAQ,yCANdvG,EAAAA,GAAQkK,QAAQ,qDA+ERI,UAAW9F,EACX8C,MAAO,CACLC,WAAY/C,EACR,oDACA,OACJgD,OAAQ,OACRa,MAAO,QACPnB,SACH,kCAOJ5C,IACCuC,EAAAA,EAAAA,KAACgB,EAAAA,EAAG,CAACC,KAAM,GAAGZ,UACZF,EAAAA,EAAAA,MAACF,EAAAA,EAAI,CACHyD,KAAK,QACLjD,MAAO,CACLC,WAAYjD,EAAiB0F,QAAU,UAAY,UACnDxC,OAAO,aAADpI,OAAekF,EAAiB0F,QAAU,UAAY,YAC5D9C,SAAA,EAEFF,EAAAA,EAAAA,MAACC,EAAAA,EAAK,CAAAC,SAAA,CACH5C,EAAiB0F,SAChBnD,EAAAA,EAAAA,KAACyB,EAAAA,EAAmB,CAAChB,MAAO,CAAEe,MAAO,cAErCxB,EAAAA,EAAAA,KAAC2D,EAAAA,EAAyB,CAAClD,MAAO,CAAEe,MAAO,cAE7CxB,EAAAA,EAAAA,KAACrD,EAAI,CACH8D,MAAO,CACLe,MAAO/D,EAAiB0F,QAAU,UAAY,WAC9C9C,SAED5C,EAAiB0F,QACd,uCAAQ,gBAAA5K,OACFkF,EAAiBoE,OAAOK,OAAM,6BAK1CzE,EAAiB0F,UACjBnD,EAAAA,EAAAA,KAAA,OAAKS,MAAO,CAAEmD,UAAW,OAAQvD,SAC9B5C,EAAiBoE,OAAOgC,IAAI,CAACrL,EAAOsL,KACnC3D,EAAAA,EAAAA,MAAA,OAAiBM,MAAO,CAAEsD,SAAU,OAAQvC,MAAO,WAAYnB,SAAA,CAAC,UAC3D7H,EAAM2J,KAAK,YAAK3J,EAAMW,UADjB2K,YAWtB9D,EAAAA,EAAAA,KAACgB,EAAAA,EAAG,CAACC,KAAM,GAAGZ,UACZL,EAAAA,EAAAA,KAAA,OACES,MAAO,CACLE,OAAQ,oBACRqD,aAAc,MACdC,SAAU,UACV5D,UAEFL,EAAAA,EAAAA,KAACkE,EAAAA,GAAM,CACL/G,OAAQA,EACRgH,SAAS,SACTrH,MAAOM,EACPL,SAlRgBqH,IAC1B,MAAM7E,EAAU6E,GAAY,GAC5B/G,EAAekC,GACf3B,EAAW2B,IAAYzC,GACf,OAARC,QAAQ,IAARA,GAAAA,EAAWwC,IA+QD8E,QA3QkBC,IAC5BzG,EAAU0G,QAAUD,EAGpBA,EAAOE,cAAc,CACnBT,SAAU,GACVU,WAAY,qEACZC,YAAa,KACbC,kBAAkB,EAClBC,sBAAsB,EACtBC,iBAAiB,EACjBC,QAAS,CAAEC,SAAS,GACpBC,SAAU,KACVC,QAAS,EACTC,cAAc,EACdC,mBAAmB,EACnBC,eAAgB,QAChBC,YAAa,OACbC,oBAAqB,OACrBC,oBAAoB,EACpBC,qBAAsB,aACtBC,wBAAyB,CAAEV,SAAS,KAItC/G,EAAAA,GAAcc,SAAS,YAmPb4G,QAAS,CACPxI,WACA6G,SAAU,GACVU,WAAY,qEACZC,YAAa,KACbC,kBAAkB,EAClBC,sBAAsB,EACtBC,iBAAiB,EACjBC,QAAS,CAAEC,SAAS,GACpBC,SAAU,KACVC,QAAS,EACTC,cAAc,EACdC,mBAAmB,EACnBC,eAAgB,QAChBC,YAAa,OACbC,oBAAqB,OACrBC,oBAAoB,EACpBC,qBAAsB,aACtBC,wBAAyB,CAAEV,SAAS,GACpCY,MAAO,kBAOf3F,EAAAA,EAAAA,KAACgB,EAAAA,EAAG,CAACC,KAAM,GAAGZ,UACZF,EAAAA,EAAAA,MAACxD,EAAI,CAAC6D,KAAK,YAAYC,MAAO,CAAEsD,SAAU,QAAS1D,SAAA,CAAC,6BAC3CpD,EAAS,0BAASG,EAAY8E,OAAO,oBAAQ9E,EAAY4E,MAAM,MAAME,mBC/YlF,MAAE0D,EAAOjJ,KAAK,GAAIC,EAAAA,GAClB,KAAEiJ,GAASC,EAAAA,GACX,MAAEC,GAAUC,EAAAA,EAEZC,EAA2BA,KAC/B,MAAM,GAAExM,IAAOyM,EAAAA,EAAAA,KACTC,GAAWC,EAAAA,EAAAA,OACVC,EAAUC,IAAehJ,EAAAA,EAAAA,UAAuC,OAChEiJ,EAAYC,IAAiBlJ,EAAAA,EAAAA,UAA0B,KACvDmJ,EAAYC,IAAiBpJ,EAAAA,EAAAA,UAAyB,KACtDqJ,EAAgBC,IAAqBtJ,EAAAA,EAAAA,UAA0B,KAC/DuJ,EAAsBC,IAA2BxJ,EAAAA,EAAAA,UAAgC,KACjFgG,EAASyD,IAAczJ,EAAAA,EAAAA,WAAS,IAGhC0J,EAAsBC,IAA2B3J,EAAAA,EAAAA,WAAS,IAC1D4J,EAAuBC,IAA4B7J,EAAAA,EAAAA,WAAS,IAC5D8J,EAAoBC,IAAyB/J,EAAAA,EAAAA,WAAS,IACtDgK,EAAaC,KAAkBjK,EAAAA,EAAAA,UAAS,IACxCkK,IAAgBC,EAAAA,EAAKC,WACrBC,IAAiBF,EAAAA,EAAKC,WAGtBE,GAAkBC,KAAuBvK,EAAAA,EAAAA,UAA8B,OACvEwK,GAAuBC,KAA4BzK,EAAAA,EAAAA,UAA+B,OAClF0K,GAA0BC,KAA+B3K,EAAAA,EAAAA,UAAkC,OAC3F4K,GAAgBC,KAAqB7K,EAAAA,EAAAA,UAAqC,OAC1E8K,GAAeC,KAAoB/K,EAAAA,EAAAA,UAA2D,KAC9FgL,GAAgBC,KAAqBjL,EAAAA,EAAAA,UAAwB,OAC7DkL,GAAmBC,KAAwBnL,EAAAA,EAAAA,UAAsB,IAAIoL,MACrEC,GAAeC,KAAoBtL,EAAAA,EAAAA,UAAS,KAC5CuL,GAAoBC,KAAyBxL,EAAAA,EAAAA,WAAS,IACtDyL,GAAiBC,KAAsB1L,EAAAA,EAAAA,UAAc,OACrD2L,GAAWC,KAAgB5L,EAAAA,EAAAA,UAAgB,KAC3C6L,GAAmBC,KAAwB9L,EAAAA,EAAAA,UAAwB,OACnE+L,GAAqBC,KAA0BhM,EAAAA,EAAAA,UAAS,KAGxDiM,GAAeC,KAAoBlM,EAAAA,EAAAA,UAAS,KAC5CmM,GAAuBC,KAA4BpM,EAAAA,EAAAA,UAAS,kBAC5DqM,GAAeC,KAAoBtM,EAAAA,EAAAA,UAAiC,CAAC,IACrEuM,GAA6BC,KAAkCxM,EAAAA,EAAAA,WAAS,IAE/ES,EAAAA,EAAAA,WAAU,KACJtE,IACFsQ,KACAC,KACAC,KACAC,OAED,CAACzQ,IAGJ,MAAM0Q,IAAmBC,EAAAA,EAAAA,aAAYzI,UACnC,IAEE,MAAMhJ,QAAiB0R,MAAM,gCAAD9R,OAAiC0G,EAAKxF,GAAE,cACpE,GAAId,EAAS2R,GAAI,CACf,MAAM/K,QAAgB5G,EAAS4R,OAC/Bf,GAAiBjK,GACjBmK,GAAyBzK,EAAKuL,WAC9BrR,EAAAA,GAAQuG,QAAQ,gBAADnH,OAAO0G,EAAKuL,UAAS,6BACtC,MACErR,EAAAA,GAAQX,MAAM,uCAElB,CAAE,MAAOA,GACPiS,QAAQjS,MAAM,wCAAWA,GACzBW,EAAAA,GAAQX,MAAM,uCAChB,GACC,KAGHuF,EAAAA,EAAAA,WAAU,KACR,GAAIgL,IAAmBY,GAAcZ,GAAgBtP,KAAOkQ,GAAcZ,GAAgBtP,IAAIyI,OAAS,EAAG,CAEpG2H,IAA6BC,IAA+B,GAChE,MAAMY,EAAQf,GAAcZ,GAAgBtP,IACtCkR,EAAaD,EAAME,KAAK3L,GAC5BA,EAAKuL,UAAUjI,SAAS,QAAUtD,EAAK4L,WAGrCF,EACFR,GAAiBQ,GACRD,EAAM,IACfP,GAAiBO,EAAM,GAE3B,MAAW3B,IAAmBY,GAAcZ,GAAgBtP,KAAoD,IAA7CkQ,GAAcZ,GAAgBtP,IAAIyI,QAEnGsH,GAAiB,IACjBE,GAAyB,kBACfX,KAENc,IAA6BC,IAA+B,GAChEN,GAAiB,IACjBE,GAAyB,mBAE1B,CAACX,GAAiBY,GAAeQ,GAAkBN,KAGtD,MAAMiB,GAA4BA,KAWhCtB,GAVqB,4NAWrBE,GAAyB,iBACzBI,IAA+B,IAG3BC,GAAgBpI,UACpB,GAAKlI,EAAL,CACAsN,GAAW,GACX,IACE,MAAMnO,QAAa0B,EAAAA,GAAgBE,YAAYuQ,SAAStR,IAIxD,GAHA6M,EAAY1N,GAGRA,EAAKqQ,WAAarQ,EAAKqQ,UAAU/G,OAAS,EAAG,CAC/C,MAAM8I,EAAmC,CAAC,EAC1C,IAAK,MAAMC,KAAYrS,EAAKqQ,UAC1B,IACE,MAAMyB,QAActP,EAAAA,GAAoBM,iBAAiBuP,EAASxR,IAClEuR,EAASC,EAASxR,IAAMiR,CAC1B,CAAE,MAAOlS,GACPiS,QAAQjS,MAAM,sCAADD,OAAuC0S,EAASxR,GAAE,KAAKjB,GACpEwS,EAASC,EAASxR,IAAM,EAC1B,CAKF,GAHAmQ,GAAiBoB,IAGZjC,GAAiB,CACpB,MAAMmC,EAAgBtS,EAAKqQ,UAAU,GACrCD,GAAmBkC,EACrB,CACF,MAEElC,GAAmB,MACnBQ,GAAiB,IACjBE,GAAyB,iBACzBE,GAAiB,CAAC,EAEtB,CAAE,MAAOpR,GACPiS,QAAQjS,MAAM,0BAA2BA,GACzCW,EAAAA,GAAQX,MAAM,oCAChB,CAAC,QACCuO,GAAW,EACb,CArCe,GAwCXiD,GAAkBrI,UACtB,GAAKlI,EACL,IACE,MAAMb,QAAa0B,EAAAA,GAAgBM,cAAcmQ,SAAStR,IAC1D+M,EAAc5N,EAChB,CAAE,MAAOJ,GACPW,EAAAA,GAAQX,MAAM,oCAChB,GAGIyR,GAAkBtI,UACtB,IACE,MAAM/I,QAAakC,EAAAA,GAAoBC,oBACvC2L,EAAc9N,EAChB,CAAE,MAAOJ,GACPW,EAAAA,GAAQX,MAAM,gCAChB,GAGI0R,GAAsBvI,UAC1B,IACE,MAAM/I,QAAaQ,EAAAA,GAAqBC,oBACxCuN,EAAkBhO,EACpB,CAAE,MAAOJ,GACPW,EAAAA,GAAQX,MAAM,sCAChB,GAGI2S,GAA2BxJ,UAC/B,IACE,MAAMyJ,QAAgBhS,EAAAA,GAAqBa,WAAWoR,GACtDvE,EAAwBsE,EAC1B,CAAE,MAAO5S,GACPW,EAAAA,GAAQX,MAAM,wCAChB,GAII8S,GAAuBA,KAC3B,MAAMC,EAAc,CAClB9R,GAAI+R,KAAKC,MACT9L,KAAK,YAADpH,OAAc0Q,GAAU/G,OAAS,GACrCwJ,eAAgB,GAChBC,cAAe,GACfC,OAAQ,MACRC,OAAQ,EACR/T,QAAS,CAAC,EACVgU,KAAM,GACNjU,QAAS,GACTkU,OAAO,GAGT7C,GAAa,IAAID,GAAWsC,IAC5BvC,GAAmBuC,GACnBzC,IAAsB,GACtBvB,GAAe,GACfM,GAAoB,MACpBE,GAAyB,MACzBI,GAAkB,MAClBE,GAAiB,IACjBE,GAAkB,MAClBK,GAAiB,KAGboD,GAAuBrK,UAC3BqH,GAAmBiC,GACnBnC,IAAsB,GACtBvB,GAAe,GAGf,MAAMmD,EAAQf,GAAcsB,EAASxR,IACrC,GAAIiR,GAASA,EAAMxI,OAAS,EAAG,CAE7B,MAAMyI,EAAaD,EAAME,KAAK3L,GAC5BA,EAAKuL,UAAUjI,SAAS,QAAUtD,EAAK4L,WAGrCF,QACIR,GAAiBQ,SAGjBR,GAAiBO,EAAM,GAEjC,MAEElB,GAAiB,IACjBE,GAAyB,kBAevBuC,GAAqBtK,UACzB,GAAKoH,IAAoB1C,EAEzB,IAEE,MAAM6F,EAAe,CACnBC,QAAS9F,EAAS5M,GAClBiS,eAAgB3C,GAAgBpJ,KAChCgM,cAAe5C,GAAgB4C,eAAiB,qBAChDC,OAAQ7C,GAAgB6C,QAAU,MAClCC,OAAQ9C,GAAgB8C,QAAU,EAClCO,MAAOrD,GAAgBqD,OAAS,EAChCtU,QAASiR,GAAgBjR,SAAW,CAAC,EACrCgU,KAAM/C,GAAgB+C,MAAQ,GAC9BjU,QAASkR,GAAgBlR,SAAW,IAIhCwU,QAAsBjR,EAAAA,GAAoBG,mBAAmB2Q,GAEnE/S,EAAAA,GAAQuG,QAAQ,+BAGhBwJ,GAAaD,GAAUpF,IAAIyI,GACzBA,EAAE7S,KAAOsP,GAAgBtP,IAAE2H,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAClBiL,GAAa,IAAEN,OAAO,IAC3BO,IAIN,MAAMC,GAAenL,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAQiL,GAAa,IAAEN,OAAO,IACnD/C,GAAmBuD,SAGbxC,KAGNf,GAAmBuD,EAErB,CAAE,MAAO/T,GACPiS,QAAQjS,MAAM,2BAA4BA,GAC1CW,EAAAA,GAAQX,MAAM,0BAChB,GAGIgU,GAAuB7K,UAC3B,IAAK,IAAD8K,EAEF,MAAMC,EAAgBzD,GAAU2B,KAAK0B,GAAKA,EAAE7S,KAAOkC,GAC7CgR,EAAqB,OAARtG,QAAQ,IAARA,GAAmB,QAAXoG,EAARpG,EAAU4C,iBAAS,IAAAwD,OAAX,EAARA,EAAqB7B,KAAK0B,GAAKA,EAAE7S,KAAOkC,GAEvD+Q,GAAiBA,EAAcX,OAEjC7C,GAAaD,GAAU2D,OAAON,GAAKA,EAAE7S,KAAOkC,KAGzB,OAAfoN,SAAe,IAAfA,QAAe,EAAfA,GAAiBtP,MAAOkC,GAC1BqN,GAAmB,OAEZ2D,UAEHvR,EAAAA,GAAoBK,mBAAmBE,GAC7CxC,EAAAA,GAAQuG,QAAQ,uCAGVqK,KAEV,CAAE,MAAOvR,GACPiS,QAAQjS,MAAM,6BAA8BA,GAC5CW,EAAAA,GAAQX,MAAM,4BAChB,GAGIqU,GAAwBlR,IAC5B8M,GAAqBqE,IACnB,MAAMC,EAAS,IAAIrE,IAAIoE,GAMvB,OALIC,EAAOC,IAAIrR,GACboR,EAAOhT,OAAO4B,GAEdoR,EAAOE,IAAItR,GAENoR,KAILG,GAA2BjC,IAC/B7B,GAAqB6B,EAASxR,GAAG0T,YACjC7D,GAAuB2B,EAAStL,MAAQsL,EAASS,gBAAkB,KAG/D0B,GAAyBzL,UAC7B,GAAI0H,IAAuBA,GAAoBzH,OAC7C,IAAK,IAADyL,EAEF,MAAMV,EAAqB,OAARtG,QAAQ,IAARA,GAAmB,QAAXgH,EAARhH,EAAU4C,iBAAS,IAAAoE,OAAX,EAARA,EAAqBzC,KAAK0B,GAAKA,EAAE7S,GAAG0T,aAAexR,GAChE+Q,EAAgBzD,GAAU2B,KAAK0B,GAAKA,EAAE7S,GAAG0T,aAAexR,GAE1DgR,SAEIvR,EAAAA,GAAoBI,mBAAmBmR,EAAWlT,GAAI,CAC1DiS,eAAgBrC,GAAoBzH,eAGhCmI,MACG2C,IAETxD,GAAaD,GAAUpF,IAAIyI,GACzBA,EAAE7S,GAAG0T,aAAexR,GAAUyF,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACrBkL,GAAC,IAAE3M,KAAM0J,GAAoBzH,SAClC0K,KAIa,OAAfvD,SAAe,IAAfA,QAAe,EAAfA,GAAiBtP,GAAG0T,cAAexR,GACrCqN,IAAkB5H,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAC,CAAC,EACf2H,IAAe,IAClBpJ,KAAM0J,GAAoBzH,WAKhCwH,GAAqB,MACrBE,GAAuB,IACvBnQ,EAAAA,GAAQuG,QAAQ,qCAElB,CAAE,MAAOlH,GACPiS,QAAQjS,MAAM,kCAAmCA,GACjDW,EAAAA,GAAQX,MAAM,iCAChB,GAUE8U,GAAmB3L,MAAOpC,EAAiBtC,KAC/C,GAAK8L,IAAoB1C,EAKzB,IAEE,MAAMpH,EAAO,IAAIsO,KAAK,CAAChO,GAAUtC,EAAU,CAAEuD,KAAM,gBAGnD,GAAKuI,GAAgBgD,MAmBd,CAKL,SAHME,KAGFlD,KAAoBA,GAAgBgD,MAAO,CAC7C,MAAMlQ,EAAW,IAAI2R,SACrB3R,EAAS4R,OAAO,OAAQxO,GACxBpD,EAAS4R,OAAO,cAAc,6BAADlV,OAA+BwQ,GAAgB2C,iBAE5E,MAAMgC,QAAqBtS,EAAAA,GAAoBQ,mBAAmBmN,GAAgBtP,GAAIoC,GAGtF+N,GAAiBkD,IAAI1L,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAChB0L,GAAI,IACP,CAAC/D,GAAgBtP,IAAK,IAAKqT,EAAK/D,GAAgBtP,KAAO,GAAKiU,MAI9DlE,GAAiBjK,GACjBmK,GAAyBzM,EAC3B,CAEA9D,EAAAA,GAAQuG,QAAQ,yDAClB,KA3C4B,CAE1B,MAAM7D,EAAW,IAAI2R,SACrB3R,EAAS4R,OAAO,OAAQxO,GACxBpD,EAAS4R,OAAO,cAAc,6BAADlV,OAA+BwQ,GAAgB2C,iBAG5E,MAAMgC,QAAqBtS,EAAAA,GAAoBQ,mBAAmBmN,GAAgBtP,GAAIoC,SAGhFkO,KAGNH,GAAiBkD,IAAI1L,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAChB0L,GAAI,IACP,CAAC/D,GAAgBtP,IAAK,IAAKqT,EAAK/D,GAAgBtP,KAAO,GAAKiU,MAG9DvU,EAAAA,GAAQuG,QAAQ,uCAClB,CA2BA8J,GAAiBjK,GACjBmK,GAAyBzM,EAE3B,CAAE,MAAOzE,GACPiS,QAAQjS,MAAM,wCAAWA,GACzBW,EAAAA,GAAQX,MAAM,uCAChB,MA7DEW,EAAAA,GAAQkK,QAAQ,qDAgHdsK,GAAwBhM,UAC5B,GAAKiG,IAAqBE,IAA0BE,IAA6BE,GAKjF,IACE,MAAM0F,EAAqC,CACzCzB,QAASpB,SAAStR,GAClBoU,YAAajG,GAAiBnO,GAC9BqU,kBAAmBhG,GAAsBrO,GACzCsU,yBAA0B7F,GAAezO,GACzCuU,eAAe,aAADzV,QAAe,IAAIiT,MAAOyC,yBAGpCnS,EAAAA,GAAqBG,oBAAoB2R,GAC/CzU,EAAAA,GAAQuG,QAAQ,uCAChBoJ,IAAsB,GACtBvB,GAAe,GACfyC,IACF,CAAE,MAAOxR,GACPW,EAAAA,GAAQX,MAAM,kCAChB,MApBEW,EAAAA,GAAQX,MAAM,4CAqEZ0V,GAAmB,CACvB,CACEhO,MAAO,iBACPiO,UAAW,iBACXC,IAAK,kBAEP,CACElO,MAAO,SACPiO,UAAW,SACXC,IAAK,SACLC,OAASxV,GA/BSA,KACpB,MAOMX,EAPY,CAChBoW,QAAS,CAAE9M,MAAO,UAAW+I,KAAM,WACnCgE,QAAS,CAAE/M,MAAO,aAAc+I,KAAM,WACtCiE,UAAW,CAAEhN,MAAO,UAAW+I,KAAM,aACrCkE,OAAQ,CAAEjN,MAAO,QAAS+I,KAAM,UAChCmE,UAAW,CAAElN,MAAO,UAAW+I,KAAM,cAEd1R,IAAqC,CAAE2I,MAAO,UAAW+I,KAAM1R,GACxF,OAAOmH,EAAAA,EAAAA,KAAC2O,EAAAA,EAAG,CAACnN,MAAOtJ,EAAOsJ,MAAMnB,SAAEnI,EAAOqS,QAsBXqE,CAAa/V,IAE3C,CACEqH,MAAO,iBACPiO,UAAW,iBACXC,IAAK,kBAEP,CACElO,MAAO,WACPiO,UAAW,iBACXC,IAAK,kBAEP,CACElO,MAAO,yBACPiO,UAAW,oBACXC,IAAK,oBACLC,OAASQ,GAAiBA,EAAKC,QAAQ,IAEzC,CACE5O,MAAO,MACPiO,UAAW,sBACXC,IAAK,sBACLC,OAASU,GAAgBA,EAAID,QAAQ,IAEvC,CACE5O,MAAO,aACPiO,UAAW,aACXC,IAAK,aACLC,OAASW,GAAY,GAAAzW,QAAgB,IAAPyW,GAAYF,QAAQ,GAAE,MAEtD,CACE5O,MAAO,aACPiO,UAAW,aACXC,IAAK,aACLC,OAASY,GAAiBA,EAAO,IAAIzD,KAAKyD,GAAMhB,iBAAmB,KAErE,CACE/N,MAAO,eACPiO,UAAW,eACXC,IAAK,eACLC,OAASY,GAAiBA,EAAO,IAAIzD,KAAKyD,GAAMhB,iBAAmB,KAErE,CACE/N,MAAO,UACPkO,IAAK,SACLC,OAAQA,CAACa,EAAQC,KACfhP,EAAAA,EAAAA,MAACC,EAAAA,EAAK,CAAAC,SAAA,CACe,YAAlB8O,EAAOtW,SACNmH,EAAAA,EAAAA,KAACqB,EAAAA,GAAM,CACLqC,KAAK,QACLlD,KAAK,UACLc,MAAMtB,EAAAA,EAAAA,KAACoP,EAAAA,EAAkB,IACzB1N,QAASA,KACP5F,EAAAA,GAAqBK,mBAAmBgT,EAAO1V,IAAI4V,KAAK,KACtDlW,EAAAA,GAAQuG,QAAQ,qBAChBsK,OACCsF,MAAM,KACPnW,EAAAA,GAAQX,MAAM,gCAEhB6H,SACH,UAIgB,YAAlB8O,EAAOtW,SACNmH,EAAAA,EAAAA,KAACqB,EAAAA,GAAM,CACLqC,KAAK,QACL6L,QAAM,EACNjO,MAAMtB,EAAAA,EAAAA,KAACwP,EAAAA,EAAmB,IAC1B9N,QAASA,KACP5F,EAAAA,GAAqBM,kBAAkB+S,EAAO1V,GAAI,CAAEgW,OAAQ,gBAAiBJ,KAAK,KAChFlW,EAAAA,GAAQuG,QAAQ,qBAChBsK,OACCsF,MAAM,KACPnW,EAAAA,GAAQX,MAAM,+BAEhB6H,SACH,UAIHL,EAAAA,EAAAA,KAACqB,EAAAA,GAAM,CACLqC,KAAK,QACLpC,MAAMtB,EAAAA,EAAAA,KAAC0P,EAAAA,EAAc,IACrBhO,QAASA,IAAMyE,EAAS,oBAAD5N,OAAqB4W,EAAO1V,KAAM4G,SAC1D,sBAQT,IAAKgG,EACH,OAAOrG,EAAAA,EAAAA,KAAA,OAAAK,SAAK,eAGd,MAAMsP,GAAkBpJ,EAAW,GACfoJ,KAChBA,GAAgBC,eAAiBD,GAAgBE,eAAkBF,GAAgBC,gBAyZvF,OACEzP,EAAAA,EAAAA,MAAA,OAAKM,MAAO,CACVI,QAAS,OACTH,WAAY,oDACZoP,UAAW,SACXzP,SAAA,EAEAL,EAAAA,EAAAA,KAAA,OAAKS,MAAO,CACVsP,aAAc,OACdlP,QAAS,OACTH,WAAY,4BACZsD,aAAc,MACdrD,OAAQ,sCACRqP,eAAgB,aAChBC,UAAW,iCACX5P,UACAF,EAAAA,EAAAA,MAAA,OAAKM,MAAO,CACVyP,QAAS,OACTC,WAAY,SACZC,IAAK,OACLL,aAAc,OACdM,SAAU,QACVhQ,SAAA,EACAL,EAAAA,EAAAA,KAACqB,EAAAA,GAAM,CACLC,MAAMtB,EAAAA,EAAAA,KAACsQ,EAAAA,EAAiB,IACxB5O,QAASA,IAAMyE,EAAS,oBACxB1F,MAAO,CACLC,WAAY,4BACZC,OAAQ,qCACRa,MAAO,OACPrE,OAAQ,OACR6G,aAAc,MACduM,WAAY,GACZlQ,SACH,UAIDF,EAAAA,EAAAA,MAAA,OAAKM,MAAO,CACVyP,QAAS,OACTC,WAAY,SACZC,IAAK,OACLI,KAAM,EACNC,SAAU,GACVpQ,SAAA,EACAF,EAAAA,EAAAA,MAAA,OAAKM,MAAO,CAAEyP,QAAS,OAAQC,WAAY,SAAUC,IAAK,OAAQ/P,SAAA,EAChEL,EAAAA,EAAAA,KAAA,QAAMS,MAAO,CACXe,MAAO,UACPuC,SAAU,OACV2M,WAAY,KACZrQ,SAAC,WAGHL,EAAAA,EAAAA,KAAC4F,EAAK,CAAC+K,MAAO,EAAGlQ,MAAO,CAAEmQ,OAAQ,EAAGpP,MAAO,OAAQkP,WAAY,IAAK3M,SAAU,QAAS1D,SACrFgG,EAAS1G,WAIdQ,EAAAA,EAAAA,MAAA,OAAKM,MAAO,CAAEyP,QAAS,OAAQC,WAAY,SAAUC,IAAK,OAAQ/P,SAAA,EAChEL,EAAAA,EAAAA,KAAA,QAAMS,MAAO,CACXe,MAAO,UACPuC,SAAU,OACV2M,WAAY,KACZrQ,SAAC,cAGHL,EAAAA,EAAAA,KAACrD,EAAI,CAAC8D,MAAO,CAAEe,MAAO,OAAQuC,SAAU,OAAQ2M,WAAY,KAAMrQ,SAC/D,IAAImL,KAAKnF,EAASwK,YAAY5C,sBAIlC5H,EAASyK,cACR3Q,EAAAA,EAAAA,MAAA,OAAKM,MAAO,CACVyP,QAAS,OACTC,WAAY,SACZC,IAAK,MACLI,KAAM,EACNC,SAAU,GACVpQ,SAAA,EACAL,EAAAA,EAAAA,KAAA,QAAMS,MAAO,CACXe,MAAO,UACPuC,SAAU,OACV2M,WAAY,IACZH,WAAY,GACZlQ,SAAC,WAGHL,EAAAA,EAAAA,KAACrD,EAAI,CAAC8D,MAAO,CACXe,MAAO,OACPuC,SAAU,OACVgN,WAAY,MACZ9M,SAAU,SACV+M,aAAc,WACdC,WAAY,UACZ5Q,SACCgG,EAASyK,0BAStB3Q,EAAAA,EAAAA,MAACF,EAAAA,EAAI,CACHQ,MAAO,CACLsP,aAAc,OACdrP,WAAY,4BACZC,OAAQ,sCACRqD,aAAc,MACdgM,eAAgB,aAChBC,UAAW,iCAEbiB,UAAW,CACTxQ,WAAY,cACZyQ,aAAc,sCACdtQ,QAAS,uBAEXD,UAAW,CACTF,WAAY,cACZG,QAAS,KACTR,SAAA,EAEFL,EAAAA,EAAAA,KAAC4F,EAAK,CAAC+K,MAAO,EAAGlQ,MAAO,CAAEe,MAAO,OAAQoP,OAAQ,EAAGF,WAAY,IAAK3M,SAAU,QAAS1D,SAAC,4CAGzFF,EAAAA,EAAAA,MAACW,EAAAA,EAAG,CAACC,OAAQ,EAAGN,MAAO,CAAEqP,UAAW,SAAUzP,SAAA,EAE5CF,EAAAA,EAAAA,MAACa,EAAAA,EAAG,CAACC,KAAM,EAAGR,MAAO,CACnB2Q,YAAa,sCACbvQ,QAAS,OACTwQ,SAAU,SACVC,IAAK,EACLC,UAAW,aACX7Q,WAAY,6BACZL,SAAA,EACAF,EAAAA,EAAAA,MAAA,OAAKM,MAAO,CAAEsP,aAAc,QAAS1P,SAAA,EACnCL,EAAAA,EAAAA,KAAC4F,EAAK,CAAC+K,MAAO,EAAGlQ,MAAO,CAAEmQ,OAAQ,EAAGpP,MAAO,OAAQkP,WAAY,IAAK3M,SAAU,QAAS1D,SAAC,4BAGzFL,EAAAA,EAAAA,KAACrD,EAAI,CAAC8D,MAAO,CAAEe,MAAO,UAAWuC,SAAU,QAAS1D,SAAC,mCAOvDL,EAAAA,EAAAA,KAAA,OAAKS,MAAO,CAAEsP,aAAc,QAAS1P,SACjCgG,EAAS4C,WAAa5C,EAAS4C,UAAU/G,OAAS,GAAM+G,GAAU/G,OAAS,GAC3E/B,EAAAA,EAAAA,MAAA,OAAAE,SAAA,CAEGgG,EAAS4C,WAAa5C,EAAS4C,UAAUpF,IAAI,CAACoH,EAAUnH,KACvD,MAAM0N,EAAahJ,GAAkBwE,IAAI/B,EAASxR,GAAG0T,YAC/CsE,EAAW9H,GAAcsB,EAASxR,KAAOkQ,GAAcsB,EAASxR,IAAIyI,OAAS,EAC7EwP,GAAmC,OAAf3I,SAAe,IAAfA,QAAe,EAAfA,GAAiBtP,MAAOwR,EAASxR,GAE3D,OACE0G,EAAAA,EAAAA,MAAA,OAAuBM,MAAO,CAAEsP,aAAc,OAAQ1P,SAAA,EAEpDF,EAAAA,EAAAA,MAAA,OACEM,MAAO,CACLI,QAAS,YACTH,WAAYgR,EACR,oDACA,4BACJ1N,aAAc,MACdrD,OAAQ+Q,EACJ,oCACA,sCACJL,SAAU,WACVnB,QAAS,OACTC,WAAY,SACZwB,eAAgB,gBAChBC,OAAQ,UACRC,WAAY,wCACZ5B,UAAWyB,EACP,qCACA,gCAENhQ,QAASA,IAAMsK,GAAqBf,GAAU5K,SAAA,EAE9CF,EAAAA,EAAAA,MAAA,OAAKM,MAAO,CACV+P,KAAM,EACNN,QAAS,OACTC,WAAY,UACZ9P,SAAA,EACAL,EAAAA,EAAAA,KAAA,OAAKS,MAAO,CACVqR,MAAO,MACP3U,OAAQ,MACR6G,aAAc,MACdtD,WAAYgR,EAAoB,OAAS,UACzCK,YAAa,UAEf5R,EAAAA,EAAAA,MAAA,OAAAE,SAAA,EACEL,EAAAA,EAAAA,KAAA,OAAKS,MAAO,CAAEyP,QAAS,OAAQC,WAAY,SAAUC,IAAK,OAAQ/P,SAC/D8I,KAAsB8B,EAASxR,GAAG0T,YACjCnN,EAAAA,EAAAA,KAACgS,EAAAA,EAAK,CACJlV,MAAOuM,IAAuB,GAC9BtM,SAAWsC,GAAMiK,GAAuBjK,EAAEG,OAAO1C,OACjDmV,aAAcA,IAAM7E,GAAuBnC,EAASxR,GAAG0T,YACvD+E,OAAQA,IAAM9E,GAAuBnC,EAASxR,GAAG0T,YACjD1M,MAAO,CACLsD,SAAU,OACV5G,OAAQ,OACRuD,WAAY,cACZC,OAAQ,oBACRa,MAAO,QAET2Q,WAAS,KAGXnS,EAAAA,EAAAA,KAACrD,EAAI,CACH8D,MAAO,CACLe,MAA2B,OAC3BuC,SAAU,OACV2M,WAAYgB,EAAoB,IAAM,IACtCE,OAAQ,WAEVlQ,QAAUrC,IACRA,EAAE+S,kBACFlF,GAAwBjC,IACxB5K,SAED4K,EAASS,gBAAc,YAAAnT,OAAgBuL,EAAQ,QAItD9D,EAAAA,EAAAA,KAACrD,EAAI,CACH8D,MAAO,CACLe,MAAOkQ,EAAoB,2BAA6B,UACxD3N,SAAU,OACVmM,QAAS,SACT7P,SACH,6BAKLF,EAAAA,EAAAA,MAAA,OAAKM,MAAO,CAAEyP,QAAS,OAAQE,IAAK,MAAOD,WAAY,UAAW9P,SAAA,CAE/DoR,IACCzR,EAAAA,EAAAA,KAACqB,EAAAA,GAAM,CACLb,KAAK,OACLkD,KAAK,QACLpC,MAAMtB,EAAAA,EAAAA,KAACqS,EAAAA,EAAY,IACnB3Q,QAAUrC,IACRA,EAAE+S,kBACFvF,GAAqB5B,EAASxR,GAAG0T,aAEnC1M,MAAO,CACLe,MAAOkQ,EAAoB,OAAS,UACpC7Q,QAAS,MACT4P,SAAU,OACVtT,OAAQ,OACR6G,aAAc,MACdtD,WAAY,cACZC,OAAQ,OACR2R,UAAWd,EAAa,iBAAmB,eAC3CK,WAAY,0BAKlB7R,EAAAA,EAAAA,KAACqB,EAAAA,GAAM,CACLb,KAAK,OACLkD,KAAK,QACLpC,MAAMtB,EAAAA,EAAAA,KAACuS,EAAAA,EAAc,IACrB7Q,QAAUrC,IACRA,EAAE+S,kBACF5F,GAAqBvB,EAASxR,KAEhCgH,MAAO,CACLe,MAAO,UACPX,QAAS,MACT4P,SAAU,OACVtT,OAAQ,OACR6G,aAAc,MACdtD,WAAY,yBACZC,OAAQ,4CAOf6Q,GAAcC,IACbtR,EAAAA,EAAAA,MAAA,OAAKM,MAAO,CACVmD,UAAW,MACX4O,WAAY,OACZ3R,QAAS,WACTH,WAAY,4BACZsD,aAAc,MACdrD,OAAQ,uCACRN,SAAA,EACAF,EAAAA,EAAAA,MAACxD,EAAI,CAAC8D,MAAO,CACXe,MAAO,UACPuC,SAAU,OACVgM,aAAc,MACdG,QAAS,SACT7P,SAAA,CAAC,gBACasJ,GAAcsB,EAASxR,IAAIyI,OAAO,OAEjDyH,GAAcsB,EAASxR,IAAIoK,IAAK5E,IAC/BkB,EAAAA,EAAAA,MAAA,OAEEM,MAAO,CACLyP,QAAS,OACTC,WAAY,SACZwB,eAAgB,gBAChB9Q,QAAS,UACTkP,aAAc,MACdrP,WAAY,4BACZsD,aAAc,MACd4N,OAAQ,UACRC,WAAY,iBAEdnQ,QAASA,KAEPyI,GAAiBlL,IACjBoB,SAAA,EAEFF,EAAAA,EAAAA,MAAA,OAAKM,MAAO,CAAEyP,QAAS,OAAQC,WAAY,SAAUC,IAAK,OAAQ/P,SAAA,EAChEL,EAAAA,EAAAA,KAACM,EAAAA,EAAgB,CAACG,MAAO,CACvBsD,SAAU,OACVvC,MAAO,cAETxB,EAAAA,EAAAA,KAACrD,EAAI,CAAC8D,MAAO,CACXe,MAAO,OACPuC,SAAU,OACV0O,SAAU,QACVxO,SAAU,SACV+M,aAAc,WACdC,WAAY,UACZ5Q,SACCpB,EAAKuL,gBAGVxK,EAAAA,EAAAA,KAAA,OAAKS,MAAO,CAAEyP,QAAS,OAAQC,WAAY,SAAUC,IAAK,OAAQ/P,UAChEL,EAAAA,EAAAA,KAACrD,EAAI,CAAC8D,MAAO,CACXe,MAAO,UACPuC,SAAU,OACV1D,SACCpB,EAAKyT,UAAS,GAAAna,QAAO0G,EAAKyT,UAAY,MAAM5D,QAAQ,GAAE,MAAO,YAtC7D7P,EAAKxF,UAnJVwR,EAASxR,MAqMtBwP,GAAUpF,IAAI,CAACoH,EAAUnH,KACxB,MAAM0N,EAAahJ,GAAkBwE,IAAI/B,EAASxR,GAAG0T,YAC/CsE,EAAWrJ,GAAclG,OAAS,EAClCwP,GAAmC,OAAf3I,SAAe,IAAfA,QAAe,EAAfA,GAAiBtP,MAAOwR,EAASxR,GAE3D,OACE0G,EAAAA,EAAAA,MAAA,OAAuBM,MAAO,CAAEsP,aAAc,OAAQ1P,SAAA,EAEpDF,EAAAA,EAAAA,MAAA,OACEM,MAAO,CACLI,QAAS,YACTH,WAAYgR,EACR,oDACA,4BACJ1N,aAAc,MACdrD,OAAQ+Q,EACJ,oCACA,sCACJL,SAAU,WACVnB,QAAS,OACTC,WAAY,SACZwB,eAAgB,gBAChBC,OAAQ,UACRC,WAAY,wCACZ5B,UAAWyB,EACP,qCACA,gCAENhQ,QAASA,IAAMsK,GAAqBf,GAAU5K,SAAA,EAE9CF,EAAAA,EAAAA,MAAA,OAAKM,MAAO,CACV+P,KAAM,EACNN,QAAS,OACTC,WAAY,UACZ9P,SAAA,EACAL,EAAAA,EAAAA,KAAA,OAAKS,MAAO,CACVqR,MAAO,MACP3U,OAAQ,MACR6G,aAAc,MACdtD,WAAYgR,EAAoB,OAAS,UACzCK,YAAa,UAEf/R,EAAAA,EAAAA,KAAA,OAAAK,UACEF,EAAAA,EAAAA,MAAA,OAAKM,MAAO,CAAEyP,QAAS,OAAQC,WAAY,SAAUC,IAAK,OAAQ/P,SAAA,CAC/D8I,KAAsB8B,EAASxR,GAAG0T,YACjCnN,EAAAA,EAAAA,KAACgS,EAAAA,EAAK,CACJlV,MAAOuM,IAAuB,GAC9BtM,SAAWsC,GAAMiK,GAAuBjK,EAAEG,OAAO1C,OACjDmV,aAAcA,IAAM7E,GAAuBnC,EAASxR,GAAG0T,YACvD+E,OAAQA,IAAM9E,GAAuBnC,EAASxR,GAAG0T,YACjD1M,MAAO,CACLsD,SAAU,OACV5G,OAAQ,OACRuD,WAAY,cACZC,OAAQ,oBACRa,MAAO,QAET2Q,WAAS,KAGXnS,EAAAA,EAAAA,KAACrD,EAAI,CACH8D,MAAO,CACLe,MAA2B,OAC3BuC,SAAU,OACV2M,WAAYgB,EAAoB,IAAM,IACtCE,OAAQ,WAEVlQ,QAAUrC,IACRA,EAAE+S,kBACFlF,GAAwBjC,IACxB5K,SAED4K,EAAStL,OAGbsL,EAASc,QACR/L,EAAAA,EAAAA,KAAA,OAAKS,MAAO,CACVI,QAAS,UACTH,WAAY,UACZsD,aAAc,MACdD,SAAU,MACVvC,MAAO,OACPkP,WAAY,KACZrQ,SAAC,iBAOXF,EAAAA,EAAAA,MAAA,OAAKM,MAAO,CAAEyP,QAAS,OAAQE,IAAK,MAAOD,WAAY,UAAW9P,SAAA,CAE/DoR,IACCzR,EAAAA,EAAAA,KAACqB,EAAAA,GAAM,CACLb,KAAK,OACLkD,KAAK,QACLpC,MAAMtB,EAAAA,EAAAA,KAACqS,EAAAA,EAAY,IACnB3Q,QAAUrC,IACRA,EAAE+S,kBACFvF,GAAqB5B,EAASxR,GAAG0T,aAEnC1M,MAAO,CACLe,MAAOkQ,EAAoB,OAAS,UACpC7Q,QAAS,MACT4P,SAAU,OACVtT,OAAQ,OACR6G,aAAc,MACdtD,WAAY,cACZC,OAAQ,OACR2R,UAAWd,EAAa,iBAAmB,eAC3CK,WAAY,yBAKjB5G,EAASc,QACR/L,EAAAA,EAAAA,KAACqB,EAAAA,GAAM,CACLb,KAAK,OACLkD,KAAK,QACLpC,MAAMtB,EAAAA,EAAAA,KAACuD,EAAAA,EAAY,IACnB7B,QAAUrC,IACRA,EAAE+S,kBACFnG,MAEFxL,MAAO,CACLe,MAAO,UACPX,QAAS,MACT4P,SAAU,OACVtT,OAAQ,OACR6G,aAAc,MACdtD,WAAY,yBACZC,OAAQ,mCACRoD,SAAU,WAKhB/D,EAAAA,EAAAA,KAACqB,EAAAA,GAAM,CACLb,KAAK,OACLkD,KAAK,QACLpC,MAAMtB,EAAAA,EAAAA,KAACuS,EAAAA,EAAc,IACrB7Q,QAAUrC,IACRA,EAAE+S,kBACF5F,GAAqBvB,EAASxR,KAEhCgH,MAAO,CACLe,MAAO,UACPX,QAAS,MACT4P,SAAU,OACVtT,OAAQ,OACR6G,aAAc,MACdtD,WAAY,yBACZC,OAAQ,4CAOf6Q,GAAcC,IACbtR,EAAAA,EAAAA,MAAA,OAAKM,MAAO,CACVmD,UAAW,MACX4O,WAAY,OACZ3R,QAAS,WACTH,WAAY,4BACZsD,aAAc,MACdrD,OAAQ,uCACRN,SAAA,EACAF,EAAAA,EAAAA,MAACxD,EAAI,CAAC8D,MAAO,CACXe,MAAO,UACPuC,SAAU,OACVgM,aAAc,MACdG,QAAS,SACT7P,SAAA,CAAC,mBACgB+H,GAAclG,OAAO,OAEvCkG,GAAcvE,IAAK8O,IAClBxS,EAAAA,EAAAA,MAAA,OAEEM,MAAO,CACLyP,QAAS,OACTC,WAAY,SACZwB,eAAgB,gBAChB9Q,QAAS,UACTkP,aAAc,MACdrP,WAAY4H,KAAmBqK,EAASlZ,GACpC,0BACA,cACJuK,aAAc,MACd4N,OAAQ,UACRC,WAAY,iBAEdnQ,QAASA,IAvpCbkR,KACxBrK,GAAkBqK,GAClB,MAAMC,EAAezK,GAAcwC,KAAKkI,GAAKA,EAAErZ,KAAOmZ,GAClDC,GACFjK,GAAiBiK,EAAatT,UAmpCWwT,CAAiBJ,EAASlZ,IAAI4G,SAAA,EAE7CF,EAAAA,EAAAA,MAAA,OAAKM,MAAO,CAAEyP,QAAS,OAAQC,WAAY,SAAUC,IAAK,OAAQ/P,SAAA,EAChEL,EAAAA,EAAAA,KAACM,EAAAA,EAAgB,CAACG,MAAO,CACvBsD,SAAU,OACVvC,MAAO,cAETxB,EAAAA,EAAAA,KAACrD,EAAI,CAAC8D,MAAO,CACXe,MAAO,OACPuC,SAAU,OACV0O,SAAU,QACVxO,SAAU,SACV+M,aAAc,WACdC,WAAY,UACZ5Q,SACCsS,EAAS1T,KAAKU,WAGnBQ,EAAAA,EAAAA,MAAA,OAAKM,MAAO,CAAEyP,QAAS,OAAQC,WAAY,SAAUC,IAAK,OAAQ/P,SAAA,EAChEF,EAAAA,EAAAA,MAACxD,EAAI,CAAC8D,MAAO,CACXe,MAAO,UACPuC,SAAU,OACV1D,SAAA,EACEsS,EAAS1T,KAAKyE,KAAO,MAAMoL,QAAQ,GAAG,SAE1C9O,EAAAA,EAAAA,KAACqB,EAAAA,GAAM,CACLb,KAAK,OACLkD,KAAK,QACLpC,MAAMtB,EAAAA,EAAAA,KAACuS,EAAAA,EAAc,IACrB7Q,QAAUrC,IACRA,EAAE+S,kBA7qCZQ,KAIxB,GAHAvK,GAAiByE,GAAQA,EAAKF,OAAOkG,GAAKA,EAAErZ,KAAOmZ,IAG/CtK,KAAmBsK,EAAQ,CAC7B,MAAMI,EAAiB5K,GAAcwE,OAAOkG,GAAKA,EAAErZ,KAAOmZ,GAC1D,GAAII,EAAe9Q,OAAS,EAAG,CAC7B,MAAM+Q,EAAgBD,EAAe,GAAGvZ,GACxC8O,GAAkB0K,GAClBrK,GAAiBoK,EAAe,GAAGzT,QACrC,MACEgJ,GAAkB,MAClBK,GAAiB,GAErB,GAgqCkCsK,CAAiBP,EAASlZ,KAE5BgH,MAAO,CACLe,MAAO,UACPX,QAAS,MACT4P,SAAU,OACVtT,OAAQ,OACR6G,aAAc,MACdtD,WAAY,yBACZC,OAAQ,mCACRoD,SAAU,cAvDX4O,EAASlZ,UA5KdwR,EAASxR,UAgPzB0G,EAAAA,EAAAA,MAAA,OAAKM,MAAO,CACV0S,UAAW,SACXtS,QAAS,YACTW,MAAO,UACPuC,SAAU,QACV1D,SAAA,EACAL,EAAAA,EAAAA,KAAA,OAAKS,MAAO,CACVsD,SAAU,OACVgM,aAAc,MACdqD,QAAS,IACT/S,SAAC,kBAGHL,EAAAA,EAAAA,KAAA,OAAAK,SAAK,8BACLL,EAAAA,EAAAA,KAAA,OAAKS,MAAO,CAAEsD,SAAU,OAAQH,UAAW,OAAQvD,SAAC,oDAQ1DL,EAAAA,EAAAA,KAAA,OAAKS,MAAO,CAAEmD,UAAW,QAASvD,UAChCL,EAAAA,EAAAA,KAACqB,EAAAA,GAAM,CACLb,KAAK,UACLc,MAAMtB,EAAAA,EAAAA,KAACoP,EAAAA,EAAkB,IACzB1N,QAAS4J,GACT7K,MAAO,CACLqR,MAAO,OACP3U,OAAQ,OACRuD,WAAY,oDACZC,OAAQ,OACRqD,aAAc,MACd0M,WAAY,IACZ3M,SAAU,QACV1D,SACH,8BAOLL,EAAAA,EAAAA,KAACgB,EAAAA,EAAG,CAACC,KAAM,GAAIR,MAAO,CAAEI,QAAS,QAASR,UACxCF,EAAAA,EAAAA,MAAA,OAAKM,MAAO,CACV4S,UAAW,OACXC,UAAW,OACXC,aAAc,MACd7S,WAAY,4BACZsD,aAAc,MACdnD,QAAS,QACTR,SAAA,EAEAL,EAAAA,EAAAA,KAAA,OAAKS,MAAO,CACVC,WAAY,4BACZG,QAAS,YACTmD,aAAc,MACd+L,aAAc,OACdpP,OAAQ,sCACRqP,eAAgB,cAChB3P,UACLF,EAAAA,EAAAA,MAAC2F,EAAAA,EAAK,CACJvB,QAAS+C,EACTvK,SAAWyW,GAAMjM,GAAeiM,GAChC9P,KAAK,QAAOrD,SAAA,EAEZL,EAAAA,EAAAA,KAAC6F,EAAI,CAAC3F,MAAM,mBACZF,EAAAA,EAAAA,KAAC6F,EAAI,CAAC3F,MAAM,sBACZF,EAAAA,EAAAA,KAAC6F,EAAI,CAAC3F,MAAM,oBACZF,EAAAA,EAAAA,KAAC6F,EAAI,CAAC3F,MAAM,kBAKXF,EAAAA,EAAAA,KAAA,OAAKS,MAAO,CACVqP,UAAW,QACXpP,WAAY,4BACZsD,aAAc,MACdrD,OAAQ,sCACRE,QAAS,OACTmP,eAAgB,cAChB3P,SACD0I,IACC5I,EAAAA,EAAAA,MAAA,OAAAE,SAAA,EAGEL,EAAAA,EAAAA,KAAA,OAAKS,MAAO,CAAEqP,UAAW,KAAMzP,SApkCnBoT,MAAO,IAADC,EAAAC,EAmZhC,OAAyB,QAAzBA,EAlZc,CACZ,CACEzT,MAAO,gBACPX,SACEY,EAAAA,EAAAA,MAAA,OAAAE,SAAA,EACEL,EAAAA,EAAAA,KAAC4F,EAAK,CAAC+K,MAAO,EAAGlQ,MAAO,CAAEe,MAAO,OAAQuO,aAAc,QAAS1P,SAAC,2BACjEL,EAAAA,EAAAA,KAACc,EAAAA,EAAG,CAACC,OAAQ,GAAIN,MAAO,CAAEtD,OAAQ,SAAUkD,UAE1CL,EAAAA,EAAAA,KAACgB,EAAAA,EAAG,CAACC,KAAM,GAAGZ,SACX0I,IACmC,QAAjC2K,EAAA/J,GAAcZ,GAAgBtP,WAAG,IAAAia,OAAA,EAAjCA,EAAmCxR,QAAS,GAAK2H,IAChD7J,EAAAA,EAAAA,KAAC4T,EAAY,CACX9W,MAAOyM,GACPxM,SAAUyM,GACVxM,OAAQsQ,GACRrQ,SAAUwM,GACVtM,OAAO,WAGTgD,EAAAA,EAAAA,MAAA,OAAKM,MAAO,CACVtD,OAAQ,QACR+S,QAAS,OACT2D,cAAe,SACf1D,WAAY,SACZwB,eAAgB,SAChBjR,WAAY,4BACZC,OAAQ,sCACRqD,aAAc,MACdxC,MAAO,WACPnB,SAAA,EACAL,EAAAA,EAAAA,KAAA,OAAKS,MAAO,CAAEsD,SAAU,OAAQgM,aAAc,OAAQqD,QAAS,IAAM/S,SAAC,kBAGtEL,EAAAA,EAAAA,KAAC4F,EAAK,CAAC+K,MAAO,EAAGlQ,MAAO,CAAEe,MAAO,UAAWuO,aAAc,MAAOhM,SAAU,QAAS1D,SAAC,wCAGrFL,EAAAA,EAAAA,KAACrD,EAAI,CAAC8D,MAAO,CAAEe,MAAO,OAAQuC,SAAU,OAAQoP,UAAW,SAAUV,SAAU,QAAS1C,aAAc,QAAS1P,SAAC,gFAGhHL,EAAAA,EAAAA,KAACqB,EAAAA,GAAM,CACLb,KAAK,UACLc,MAAMtB,EAAAA,EAAAA,KAACM,EAAAA,EAAgB,IACvBoB,QAASoJ,GACTrK,MAAO,CACLC,WAAY,oDACZC,OAAQ,OACRxD,OAAQ,OACR6G,aAAc,MACdnD,QAAS,SACT6P,WAAY,IACZ3M,SAAU,QACV1D,SACH,sBAMLF,EAAAA,EAAAA,MAAA,OAAKM,MAAO,CACVtD,OAAQ,QACR+S,QAAS,OACT2D,cAAe,SACf1D,WAAY,SACZwB,eAAgB,SAChBjR,WAAY,4BACZC,OAAQ,sCACRqD,aAAc,MACdxC,MAAO,WACPnB,SAAA,EACAL,EAAAA,EAAAA,KAAA,OAAKS,MAAO,CAAEsD,SAAU,OAAQgM,aAAc,OAAQqD,QAAS,IAAM/S,SAAC,kBAGtEL,EAAAA,EAAAA,KAAC4F,EAAK,CAAC+K,MAAO,EAAGlQ,MAAO,CAAEe,MAAO,UAAWuO,aAAc,MAAOhM,SAAU,QAAS1D,SAAC,2BAGrFL,EAAAA,EAAAA,KAACrD,EAAI,CAAC8D,MAAO,CAAEe,MAAO,OAAQuC,SAAU,OAAQoP,UAAW,SAAUV,SAAU,SAAUpS,SAAC,sGAUxG,CACEH,MAAO,0BACPX,SACEY,EAAAA,EAAAA,MAAA,OAAAE,SAAA,EACEL,EAAAA,EAAAA,KAAC4F,EAAK,CAAC+K,MAAO,EAAGlQ,MAAO,CAAEe,MAAO,OAAQuO,aAAc,QAAS1P,SAAC,oCAGjEF,EAAAA,EAAAA,MAAA,OAAKM,MAAO,CAAEsP,aAAc,QAAS1P,SAAA,EACnCL,EAAAA,EAAAA,KAAC4F,EAAK,CAAC+K,MAAO,EAAGlQ,MAAO,CAAEe,MAAO,OAAQuO,aAAc,QAAS1P,SAAC,2BACjEL,EAAAA,EAAAA,KAACc,EAAAA,EAAG,CAACC,OAAQ,GAAGV,SACbsG,EAAe9C,IAAIiQ,IAClB9T,EAAAA,EAAAA,KAACgB,EAAAA,EAAG,CAACC,KAAM,EAAEZ,UACXL,EAAAA,EAAAA,KAACC,EAAAA,EAAI,CACH8T,WAAS,EACTtT,MAAO,CACLE,QAA6B,OAArBmH,SAAqB,IAArBA,QAAqB,EAArBA,GAAuBrO,MAAOqa,EAAGra,GAAK,oBAAsB,iBACpEmY,OAAQ,UACRlR,WAAY,OACZsD,aAAc,OAEhBpD,UAAW,CACTF,WAAY,OACZc,MAAO,OACPX,QAAS,QAEXa,QAASA,IAAMqG,GAAyB+L,GAAIzT,UAE5CF,EAAAA,EAAAA,MAAA,OAAKM,MAAO,CAAE0S,UAAW,UAAW9S,SAAA,EAClCL,EAAAA,EAAAA,KAACgU,EAAAA,EAAmB,CAACvT,MAAO,CAAEsD,SAAU,GAAIvC,MAAO,UAAWuO,aAAc,MAC5E/P,EAAAA,EAAAA,KAAC4F,EAAK,CAAC+K,MAAO,EAAGlQ,MAAO,CAAEe,MAAO,OAAQoP,OAAQ,aAAcvQ,SAAEyT,EAAGnU,QACpEQ,EAAAA,EAAAA,MAACxD,EAAI,CAAC8D,MAAO,CAAEe,MAAO,OAAQ0O,QAAS,QAASH,aAAc,OAAQ1P,SAAA,CACnEyT,EAAGG,KAAK,IAAEH,EAAGI,SAEhB/T,EAAAA,EAAAA,MAAA,OAAKM,MAAO,CAAEsD,SAAU,QAAS1D,SAAA,EAC/BF,EAAAA,EAAAA,MAAA,OAAKM,MAAO,CAAEe,MAAqB,WAAdsS,EAAGjb,OAAsB,UAAY,UAAWkX,aAAc,OAAQ1P,SAAA,CAAC,WACjFyT,EAAGjb,WAEdsH,EAAAA,EAAAA,MAAA,OAAKM,MAAO,CAAEe,MAAO,WAAYnB,SAAA,CAAC,QAC1ByT,EAAGK,WAAa,MAAM,cAAYL,EAAGM,WAAa,MAAM,iBA3BrDN,EAAGra,WAsC5B0G,EAAAA,EAAAA,MAAA,OAAKM,MAAO,CAAEsP,aAAc,QAAS1P,SAAA,EACnCL,EAAAA,EAAAA,KAAC4F,EAAK,CAAC+K,MAAO,EAAGlQ,MAAO,CAAEe,MAAO,OAAQuO,aAAc,QAAS1P,SAAC,4BACjEF,EAAAA,EAAAA,MAACW,EAAAA,EAAG,CAACC,OAAQ,GAAGV,SAAA,EACdL,EAAAA,EAAAA,KAACgB,EAAAA,EAAG,CAACC,KAAM,EAAEZ,UACXL,EAAAA,EAAAA,KAACC,EAAAA,EAAI,CACH8T,WAAS,EACTtT,MAAO,CACLE,OAAsD,gBAAtB,OAAxBqH,SAAwB,IAAxBA,QAAwB,EAAxBA,GAA0BqM,iBAAmC,oBAAsB,iBAC3FzC,OAAQ,UACRlR,WAAY,OACZsD,aAAc,OAEhBpD,UAAW,CACTF,WAAY,OACZc,MAAO,OACPX,QAAS,QAEXa,QAASA,IAAMuG,GAA4B,CACzCxO,GAAI,EACJ4a,gBAAiB,aACjB1U,KAAM,kBACNmR,YAAa,8BACZzQ,UAEHF,EAAAA,EAAAA,MAAA,OAAKM,MAAO,CAAE0S,UAAW,UAAW9S,SAAA,EAClCL,EAAAA,EAAAA,KAACsU,EAAAA,EAAe,CAAC7T,MAAO,CAAEsD,SAAU,GAAIvC,MAAO,UAAWuO,aAAc,MACxE/P,EAAAA,EAAAA,KAAC4F,EAAK,CAAC+K,MAAO,EAAGlQ,MAAO,CAAEe,MAAO,OAAQoP,OAAQ,aAAcvQ,SAAC,gBAChEL,EAAAA,EAAAA,KAACrD,EAAI,CAAC8D,MAAO,CAAEe,MAAO,OAAQuC,SAAU,QAAS1D,SAAC,8DAMxDL,EAAAA,EAAAA,KAACgB,EAAAA,EAAG,CAACC,KAAM,EAAEZ,UACXL,EAAAA,EAAAA,KAACC,EAAAA,EAAI,CACH8T,WAAS,EACTtT,MAAO,CACLE,OAAsD,oBAAtB,OAAxBqH,SAAwB,IAAxBA,QAAwB,EAAxBA,GAA0BqM,iBAAuC,oBAAsB,iBAC/FzC,OAAQ,UACRlR,WAAY,OACZsD,aAAc,OAEhBpD,UAAW,CACTF,WAAY,OACZc,MAAO,OACPX,QAAS,QAEXa,QAASA,IAAMuG,GAA4B,CACzCxO,GAAI,EACJ4a,gBAAiB,iBACjB1U,KAAM,qBACNmR,YAAa,wCACZzQ,UAEHF,EAAAA,EAAAA,MAAA,OAAKM,MAAO,CAAE0S,UAAW,UAAW9S,SAAA,EAClCL,EAAAA,EAAAA,KAACgU,EAAAA,EAAmB,CAACvT,MAAO,CAAEsD,SAAU,GAAIvC,MAAO,UAAWuO,aAAc,MAC5E/P,EAAAA,EAAAA,KAAC4F,EAAK,CAAC+K,MAAO,EAAGlQ,MAAO,CAAEe,MAAO,OAAQoP,OAAQ,aAAcvQ,SAAC,wBAChEL,EAAAA,EAAAA,KAACrD,EAAI,CAAC8D,MAAO,CAAEe,MAAO,OAAQuC,SAAU,QAAS1D,SAAC,gDAMxDL,EAAAA,EAAAA,KAACgB,EAAAA,EAAG,CAACC,KAAM,EAAEZ,UACXL,EAAAA,EAAAA,KAACC,EAAAA,EAAI,CACH8T,WAAS,EACTtT,MAAO,CACLE,OAAsD,oBAAtB,OAAxBqH,SAAwB,IAAxBA,QAAwB,EAAxBA,GAA0BqM,iBAAuC,oBAAsB,iBAC/FzC,OAAQ,UACRlR,WAAY,OACZsD,aAAc,OAEhBpD,UAAW,CACTF,WAAY,OACZc,MAAO,OACPX,QAAS,QAEXa,QAASA,IAAMuG,GAA4B,CACzCxO,GAAI,EACJ4a,gBAAiB,iBACjB1U,KAAM,sBACNmR,YAAa,yCACZzQ,UAEHF,EAAAA,EAAAA,MAAA,OAAKM,MAAO,CAAE0S,UAAW,UAAW9S,SAAA,EAClCL,EAAAA,EAAAA,KAACgU,EAAAA,EAAmB,CAACvT,MAAO,CAAEsD,SAAU,GAAIvC,MAAO,UAAWuO,aAAc,MAC5E/P,EAAAA,EAAAA,KAAC4F,EAAK,CAAC+K,MAAO,EAAGlQ,MAAO,CAAEe,MAAO,OAAQoP,OAAQ,aAAcvQ,SAAC,yBAChEL,EAAAA,EAAAA,KAACrD,EAAI,CAAC8D,MAAO,CAAEe,MAAO,OAAQuC,SAAU,QAAS1D,SAAC,sDAU3DyH,IAAyBE,KACxB7H,EAAAA,EAAAA,MAAA,OAAKM,MAAO,CACVC,WAAY,OACZsD,aAAc,MACdnD,QAAS,OACTF,OAAQ,kBACRN,SAAA,EACAL,EAAAA,EAAAA,KAAC4F,EAAK,CAAC+K,MAAO,EAAGlQ,MAAO,CAAEe,MAAO,OAAQuO,aAAc,QAAS1P,SAAC,8BACjEF,EAAAA,EAAAA,MAACW,EAAAA,EAAG,CAACC,OAAQ,GAAGV,SAAA,EACdF,EAAAA,EAAAA,MAACa,EAAAA,EAAG,CAACC,KAAM,GAAGZ,SAAA,EACZF,EAAAA,EAAAA,MAAA,OAAKM,MAAO,CAAEsP,aAAc,QAAS1P,SAAA,EACnCL,EAAAA,EAAAA,KAACrD,EAAI,CAAC8D,MAAO,CAAEe,MAAO,UAAWuC,SAAU,QAAS1D,SAAC,qBACrDF,EAAAA,EAAAA,MAAA,OAAKM,MAAO,CAAEe,MAAO,OAAQuC,SAAU,OAAQ2M,WAAY,KAAMrQ,SAAA,CAC9DyH,GAAsBnI,KAAK,KAAGmI,GAAsBmM,KAAK,IAAEnM,GAAsBoM,KAAK,WAG3F/T,EAAAA,EAAAA,MAAA,OAAKM,MAAO,CAAEsP,aAAc,QAAS1P,SAAA,EACnCL,EAAAA,EAAAA,KAACrD,EAAI,CAAC8D,MAAO,CAAEe,MAAO,UAAWuC,SAAU,QAAS1D,SAAC,sBACrDL,EAAAA,EAAAA,KAAA,OAAKS,MAAO,CAAEe,MAAO,OAAQuC,SAAU,OAAQ2M,WAAY,KAAMrQ,SAC9D2H,GAAyBrI,cAIhCQ,EAAAA,EAAAA,MAACa,EAAAA,EAAG,CAACC,KAAM,GAAGZ,SAAA,EACZF,EAAAA,EAAAA,MAAA,OAAKM,MAAO,CAAEsP,aAAc,QAAS1P,SAAA,EACnCL,EAAAA,EAAAA,KAACrD,EAAI,CAAC8D,MAAO,CAAEe,MAAO,UAAWuC,SAAU,QAAS1D,SAAC,aACrDL,EAAAA,EAAAA,KAAA,OAAKS,MAAO,CACVe,MAAwC,WAAjCsG,GAAsBjP,OAAsB,UAAY,UAC/DkL,SAAU,OACV2M,WAAY,KACZrQ,SACCyH,GAAsBjP,aAG3BsH,EAAAA,EAAAA,MAAA,OAAKM,MAAO,CAAEsP,aAAc,QAAS1P,SAAA,EACnCL,EAAAA,EAAAA,KAACrD,EAAI,CAAC8D,MAAO,CAAEe,MAAO,UAAWuC,SAAU,QAAS1D,SAAC,kBACrDL,EAAAA,EAAAA,KAAA,OAAKS,MAAO,CAAEe,MAAO,OAAQuC,SAAU,QAAS1D,SAC7C2H,GAAyB8I,8BAU5C,CACE5Q,MAAO,+BACPX,SACEY,EAAAA,EAAAA,MAAA,OAAAE,SAAA,EACEL,EAAAA,EAAAA,KAAC4F,EAAK,CAAC+K,MAAO,EAAGlQ,MAAO,CAAEe,MAAO,OAAQuO,aAAc,QAAS1P,SAAC,2CACjEF,EAAAA,EAAAA,MAACW,EAAAA,EAAG,CAACC,OAAQ,GAAGV,SAAA,EACdF,EAAAA,EAAAA,MAACa,EAAAA,EAAG,CAACC,KAAM,GAAGZ,SAAA,EACZL,EAAAA,EAAAA,KAAC4F,EAAK,CAAC+K,MAAO,EAAGlQ,MAAO,CAAEe,MAAO,OAAQuO,aAAc,QAAS1P,SAAC,qBACjEL,EAAAA,EAAAA,KAACI,EAAAA,EAAK,CAACmU,UAAU,WAAW9T,MAAO,CAAEqR,MAAO,QAAUpO,KAAK,QAAOrD,SAC/DsG,EAAe9C,IAAIiQ,IAClB9T,EAAAA,EAAAA,KAACC,EAAAA,EAAI,CAEHyD,KAAK,QACLqQ,WAAS,EACTtT,MAAO,CACLE,QAA6B,OAArBmH,SAAqB,IAArBA,QAAqB,EAArBA,GAAuBrO,MAAOqa,EAAGra,GAAK,oBAAsB,iBACpEmY,OAAQ,UACRlR,WAAY,OACZsD,aAAc,OAEhBpD,UAAW,CACTF,WAAY,OACZc,MAAO,OACPX,QAAS,QAEXa,QAASA,KACPqG,GAAyB+L,GACzB3I,GAAyB2I,EAAGra,KAC5B4G,UAEFF,EAAAA,EAAAA,MAACC,EAAAA,EAAK,CAAAC,SAAA,EACJL,EAAAA,EAAAA,KAACgU,EAAAA,EAAmB,CAACvT,MAAO,CAAEe,MAAO,cACrCrB,EAAAA,EAAAA,MAAA,OAAAE,SAAA,EACEL,EAAAA,EAAAA,KAACrD,EAAI,CAAC4D,QAAM,EAACE,MAAO,CAAEe,MAAO,QAASnB,SAAEyT,EAAGnU,QAAYK,EAAAA,EAAAA,KAAA,UACvDG,EAAAA,EAAAA,MAACxD,EAAI,CAAC8D,MAAO,CAAEe,MAAO,QAASnB,SAAA,CAAEyT,EAAGG,KAAK,IAAEH,EAAGI,eAvB7CJ,EAAGra,WA8BhB0G,EAAAA,EAAAA,MAACa,EAAAA,EAAG,CAACC,KAAM,GAAGZ,SAAA,EACZL,EAAAA,EAAAA,KAAC4F,EAAK,CAAC+K,MAAO,EAAGlQ,MAAO,CAAEe,MAAO,OAAQuO,aAAc,QAAS1P,SAAC,oBACjEL,EAAAA,EAAAA,KAACI,EAAAA,EAAK,CAACmU,UAAU,WAAW9T,MAAO,CAAEqR,MAAO,QAAUpO,KAAK,QAAOrD,SAC/DwG,EAAqBhD,IAAI3L,IACxB8H,EAAAA,EAAAA,KAACC,EAAAA,EAAI,CAEHyD,KAAK,QACLqQ,WAAS,EACTtT,MAAO,CACLE,QAAsB,OAAduH,SAAc,IAAdA,QAAc,EAAdA,GAAgBzO,MAAOvB,EAAOuB,GAAK,oBAAsB,iBACjEmY,OAAQ,UACRlR,WAAY,OACZsD,aAAc,OAEhBpD,UAAW,CACTF,WAAY,OACZc,MAAO,OACPX,QAAS,QAEXa,QAASA,IAAMyG,GAAkBjQ,GAAQmI,UAEzCF,EAAAA,EAAAA,MAACC,EAAAA,EAAK,CAAAC,SAAA,EACJL,EAAAA,EAAAA,KAACwU,EAAAA,EAAkB,CAAC/T,MAAO,CAAEe,MAAO,cACpCrB,EAAAA,EAAAA,MAAA,OAAAE,SAAA,EACEL,EAAAA,EAAAA,KAACrD,EAAI,CAAC4D,QAAM,EAACE,MAAO,CAAEe,MAAO,QAASnB,SAAEnI,EAAOuc,eAAmBzU,EAAAA,EAAAA,KAAA,UAClEG,EAAAA,EAAAA,MAACxD,EAAI,CAAC8D,MAAO,CAAEe,MAAO,QAASnB,SAAA,CAAC,QAAMnI,EAAOwc,iBAAiB,mBAAiBxc,EAAOyc,iBAAiB,eApBtGzc,EAAOuB,iBA+B5B,CACEyG,MAAO,UACPX,SACEY,EAAAA,EAAAA,MAAA,OAAKM,MAAO,CAAE0S,UAAW,SAAUtS,QAAS,UAAWR,SAAA,EACrDL,EAAAA,EAAAA,KAAC4F,EAAK,CAAC+K,MAAO,EAAGlQ,MAAO,CAAEe,MAAO,OAAQuO,aAAc,QAAS1P,SAAC,sBACjEF,EAAAA,EAAAA,MAACC,EAAAA,EAAK,CAACmU,UAAU,WAAW7Q,KAAK,QAAOrD,SAAA,EACtCF,EAAAA,EAAAA,MAAA,OAAKM,MAAO,CACVC,WAAY,OACZG,QAAS,OACTmD,aAAc,MACdrD,OAAQ,iBACRwS,UAAW,OACXV,SAAU,QACV7B,OAAQ,UACRvQ,SAAA,EACAF,EAAAA,EAAAA,MAACxD,EAAI,CAAC8D,MAAO,CAAEe,MAAO,OAAQ0O,QAAS,QAASH,aAAc,OAAQ1P,SAAA,EACpEL,EAAAA,EAAAA,KAAA,UAAAK,SAAQ,cAAkB,IAAkB,OAAhBuH,SAAgB,IAAhBA,QAAgB,EAAhBA,GAAkBjI,SAEhDQ,EAAAA,EAAAA,MAACxD,EAAI,CAAC8D,MAAO,CAAEe,MAAO,OAAQ0O,QAAS,QAASH,aAAc,OAAQ1P,SAAA,EACpEL,EAAAA,EAAAA,KAAA,UAAAK,SAAQ,oBAAwB,IAAuB,OAArByH,SAAqB,IAArBA,QAAqB,EAArBA,GAAuBnI,SAE3DQ,EAAAA,EAAAA,MAACxD,EAAI,CAAC8D,MAAO,CAAEe,MAAO,OAAQ0O,QAAS,QAASH,aAAc,OAAQ1P,SAAA,EACpEL,EAAAA,EAAAA,KAAA,UAAAK,SAAQ,qBAAyB,IAA0B,OAAxB2H,SAAwB,IAAxBA,QAAwB,EAAxBA,GAA0BrI,SAE/DQ,EAAAA,EAAAA,MAACxD,EAAI,CAAC8D,MAAO,CAAEe,MAAO,OAAQ0O,QAAS,SAAU7P,SAAA,EAC/CL,EAAAA,EAAAA,KAAA,UAAAK,SAAQ,mBAAuB,IAAgB,OAAd6H,SAAc,IAAdA,QAAc,EAAdA,GAAgBuM,mBAGrDzU,EAAAA,EAAAA,KAACqB,EAAAA,GAAM,CACLb,KAAK,UACLkD,KAAK,QACLpC,MAAMtB,EAAAA,EAAAA,KAACoP,EAAAA,EAAkB,IACzB1N,QAASiM,GACTlN,MAAO,CACLtD,OAAQ,OACR4G,SAAU,OACVlD,QAAS,UACTR,SACH,yBASEiH,UAAY,IAAAqM,OAAA,EAAlBA,EAAoBpU,SAkrBVkU,MAIHzT,EAAAA,EAAAA,KAAA,OAAKS,MAAO,CACV0S,UAAW,QACXvP,UAAW,OACXgR,UAAW,sCACXC,WAAY,QACZxU,SACiB,IAAhBiH,IACCtH,EAAAA,EAAAA,KAACqB,EAAAA,GAAM,CACLb,KAAK,UACLkB,QAASiM,GACTlK,UAAWmE,KAAqBE,KAA0BE,KAA6BE,GACvFzH,MAAO,CACLC,WAAY,oDACZC,OAAQ,OACRxD,OAAQ,OACR6G,aAAc,MACdnD,QAAS,SACT6P,WAAY,IACZ3M,SAAU,QACV1D,SACH,uBAOPL,EAAAA,EAAAA,KAAA,OAAKS,MAAO,CACVyP,QAAS,OACTC,WAAY,SACZwB,eAAgB,SAChBxU,OAAQ,QACRgW,UAAW,UACX9S,UACAF,EAAAA,EAAAA,MAAA,OAAAE,SAAA,EACEL,EAAAA,EAAAA,KAAA,OAAKS,MAAO,CACVsD,SAAU,OACVgM,aAAc,OACdqD,QAAS,IACT/S,SAAC,kBAGHL,EAAAA,EAAAA,KAAC4F,EAAK,CAAC+K,MAAO,EAAGlQ,MAAO,CAAEe,MAAO,OAAQuO,aAAc,MAAOhM,SAAU,QAAS1D,SAC9E4I,GAAU/G,OAAS,EAAI,iCAAmC,8BAE7DlC,EAAAA,EAAAA,KAACrD,EAAI,CAAC8D,MAAO,CAAEe,MAAO,UAAWuC,SAAU,OAAQmM,QAAS,QAASH,aAAc,QAAS1P,SACzF4I,GAAU/G,OAAS,EAChB,+DACA,6EAGNlC,EAAAA,EAAAA,KAACqB,EAAAA,GAAM,CACLb,KAAK,UACLkD,KAAK,QACLhC,QAAS4J,GACT7K,MAAO,CACLC,WAAY,oDACZC,OAAQ,OACRxD,OAAQ,OACR6G,aAAc,MACdnD,QAAS,SACT6P,WAAY,IACZ3M,SAAU,QACV1D,SAED4I,GAAU/G,OAAS,EAAI,sBAAwB,kDAYhE/B,EAAAA,EAAAA,MAACF,EAAAA,EAAI,CACHQ,MAAO,CACLC,WAAY,4BACZC,OAAQ,sCACRqD,aAAc,MACdgM,eAAgB,aAChBC,UAAW,iCAEbiB,UAAW,CACTxQ,WAAY,cACZyQ,aAAc,sCACdtQ,QAAS,uBAEXD,UAAW,CACTF,WAAY,cACZG,QAAS,aACTR,SAAA,EAEFL,EAAAA,EAAAA,KAAC4F,EAAK,CAAC+K,MAAO,EAAGlQ,MAAO,CAAEe,MAAO,OAAQoP,OAAQ,EAAGF,WAAY,IAAK3M,SAAU,QAAS1D,SAAC,oCAGzFL,EAAAA,EAAAA,KAAA,OAAKS,MAAO,CAAEmD,UAAW,QAASvD,UAChCL,EAAAA,EAAAA,KAAC8U,EAAAA,EAAK,CACJC,QAAS7G,GACT8G,WAAYzO,EACZ0O,OAAO,KACPC,WAAY,CACVC,iBAAiB,EACjBC,iBAAiB,EACjBC,UAAYC,GAAK,SAAA/c,OAAc+c,EAAK,YACpC7U,MAAO,CACLe,MAAO,SAGXf,MAAO,CACLC,WAAY,eAEd6U,UAAU,uBAOhBpV,EAAAA,EAAAA,MAACqV,EAAAA,EAAK,CACJtV,MAAM,gBACNuV,KAAMrO,EACNsO,SAAUA,IAAMrO,GAAsB,GACtCsO,OAAQ,KACR7D,MAAO,IACPrR,MAAO,CAAE6Q,IAAK,IAAKjR,SAAA,EAEnBL,EAAAA,EAAAA,KAAA,OAAKS,MAAO,CAAEsP,aAAc,IAAK1P,UAC/BL,EAAAA,EAAAA,KAACrD,EAAI,CAAA0D,SAAC,sCAERL,EAAAA,EAAAA,KAACgS,EAAAA,EAAM4D,SAAQ,CACb9Y,MAAO6L,GACP5L,SAAWsC,IAAMwW,OAr5CItW,EAq5CgBF,EAAEG,OAAO1C,MAp5CpD8L,GAAiBrJ,QACb+I,IACFD,GAAiByE,GAAQA,EAAKjJ,IAAIiP,GAChCA,EAAErZ,KAAO6O,IAAclH,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAQ0R,GAAC,IAAEvT,YAAYuT,KAJvBvT,OAs5CrBuW,YAAY,mCACZC,KAAM,GACNtV,MAAO,CAAEgE,WAAY,gBAEvBzE,EAAAA,EAAAA,KAAA,OAAKS,MAAO,CAAE0S,UAAW,QAASvP,UAAW,IAAKvD,UAChDF,EAAAA,EAAAA,MAACC,EAAAA,EAAK,CAAAC,SAAA,EACJL,EAAAA,EAAAA,KAACqB,EAAAA,GAAM,CAACK,QAASA,IAAM2F,GAAsB,GAAOhH,SAAC,YAGrDL,EAAAA,EAAAA,KAACqB,EAAAA,GAAM,CAACb,KAAK,UAAUkB,QAt5CRsU,KACvB3O,GAAsB,GACtBlO,EAAAA,GAAQuG,QAAQ,8BAo5CyCW,SAAC,yBAQxDL,EAAAA,EAAAA,KAACwV,EAAAA,EAAK,CACJtV,MAAM,wBACNuV,KAAMvO,EACNwO,SAAUA,IAAMvO,GAAyB,GACzCwO,OAAQ,KACR7D,MAAO,IAAIzR,UAEXF,EAAAA,EAAAA,MAACsH,EAAAA,EAAI,CACHwO,OAAO,WACPC,SAp4CsBvU,UAC5B,GAAKlI,EACL,IACE,MAAMmU,EAAqC,CACzCzB,QAASpB,SAAStR,GAClBoU,YAAasI,EAAOtI,YACpBC,kBAAmBqI,EAAOrI,kBAC1BC,yBAA0BoI,EAAOpI,yBACjCC,eAAgBmI,EAAOnI,gBAAc,aAAAzV,QAAiB,IAAIiT,MAAOyC,yBAG7DnS,EAAAA,GAAqBG,oBAAoB2R,GAC/CzU,EAAAA,GAAQuG,QAAQ,uCAChByH,GAAyB,GACzB6C,IACF,CAAE,MAAOxR,GACPW,EAAAA,GAAQX,MAAM,kCAChB,GAm3CsC6H,SAAA,EAEhCL,EAAAA,EAAAA,KAACyH,EAAAA,EAAK2O,KAAI,CACRzW,KAAK,cACL0W,MAAM,gBACN3X,MAAO,CAAC,CAAE4X,UAAU,EAAMnd,QAAS,gCAAiCkH,UAEpEL,EAAAA,EAAAA,KAACuW,EAAAA,EAAM,CAACT,YAAY,uBAAsBzV,SACvCoG,EAAW5C,IAAI2S,IACdrW,EAAAA,EAAAA,MAACoW,EAAAA,EAAOE,OAAM,CAAmB3Z,MAAO0Z,EAAS/c,GAAG4G,SAAA,CACjDmW,EAAS7W,KAAK,KAAG6W,EAASE,cAAc,MADvBF,EAAS/c,UAOnCuG,EAAAA,EAAAA,KAACyH,EAAAA,EAAK2O,KAAI,CACRzW,KAAK,oBACL0W,MAAM,iBACN3X,MAAO,CAAC,CAAE4X,UAAU,EAAMnd,QAAS,iCAAkCkH,UAErEL,EAAAA,EAAAA,KAACuW,EAAAA,EAAM,CACLT,YAAY,wBACZ/Y,SAAWD,GAAUqO,GAAyBrO,GAAOuD,SAEpDsG,EAAe9C,IAAIiQ,IAClB3T,EAAAA,EAAAA,MAACoW,EAAAA,EAAOE,OAAM,CAAa3Z,MAAOgX,EAAGra,GAAG4G,SAAA,CACrCyT,EAAGnU,KAAK,KAAGmU,EAAGG,KAAK,MADFH,EAAGra,UAO7BuG,EAAAA,EAAAA,KAACyH,EAAAA,EAAK2O,KAAI,CACRzW,KAAK,2BACL0W,MAAM,wBACN3X,MAAO,CAAC,CAAE4X,UAAU,EAAMnd,QAAS,wCAAyCkH,UAE5EL,EAAAA,EAAAA,KAACuW,EAAAA,EAAM,CAACT,YAAY,+BAA8BzV,SAC/CwG,EAAqBhD,IAAI3L,IACxB8H,EAAAA,EAAAA,KAACuW,EAAAA,EAAOE,OAAM,CAAiB3Z,MAAO5E,EAAOuB,GAAG4G,SAC7CnI,EAAOuc,aADUvc,EAAOuB,UAOjCuG,EAAAA,EAAAA,KAACyH,EAAAA,EAAK2O,KAAI,CACRzW,KAAK,iBACL0W,MAAM,iBAAgBhW,UAEtBL,EAAAA,EAAAA,KAACgS,EAAAA,EAAK,CAAC8D,YAAY,uCAGrB9V,EAAAA,EAAAA,KAACyH,EAAAA,EAAK2O,KAAI,CAAA/V,UACRF,EAAAA,EAAAA,MAACC,EAAAA,EAAK,CAAAC,SAAA,EACJL,EAAAA,EAAAA,KAACqB,EAAAA,GAAM,CAACb,KAAK,UAAUmW,SAAS,SAAQtW,SAAC,sBAGzCL,EAAAA,EAAAA,KAACqB,EAAAA,GAAM,CAACK,QAASA,IAAMyF,GAAyB,GAAO9G,SAAC,yBAYtE,EAAeuW,EAAAA,KAAW3Q,E","sources":["services/api.ts","components/ScriptEditor.tsx","pages/TestTaskDetail.tsx"],"sourcesContent":["import axios, { AxiosResponse } from 'axios';\nimport { LoadGenerator, LoadGeneratorConfig, ConnectionTestResult, ConfigValidationResult } from '../types/loadGenerator';\nimport { \n  TestTask, TestTaskWithScenarios, TestTaskCreate, TestTaskUpdate,\n  TestStrategy, TestStrategyCreate, TestStrategyUpdate,\n  TestScenario, TestScenarioCreate, TestScenarioUpdate,\n  TestExecution, TestExecutionCreate, TestExecutionUpdate, TestExecutionWithDetails,\n  TestExecutionStartRequest, TestExecutionStopRequest,\n  TestScript \n} from '../types/testTask';\n\n// 创建axios实例\nconst api = axios.create({\n  baseURL: '/api/v1',\n  timeout: 10000,\n  headers: {\n    'Content-Type': 'application/json',\n  },\n});\n\n// 请求拦截器\napi.interceptors.request.use(\n  (config) => {\n    // 可以在这里添加认证token\n    const token = localStorage.getItem('token');\n    if (token) {\n      config.headers.Authorization = `Bearer ${token}`;\n    }\n    return config;\n  },\n  (error) => {\n    return Promise.reject(error);\n  }\n);\n\n// 响应拦截器\napi.interceptors.response.use(\n  (response) => {\n    return response.data;\n  },\n  (error) => {\n    if (error.response) {\n      const { status, data } = error.response;\n      if (status === 401) {\n        // 处理未授权\n        localStorage.removeItem('token');\n        window.location.href = '/login';\n      }\n      throw new Error(data.message || '请求失败');\n    }\n    throw new Error('网络错误');\n  }\n);\n\n// 压测机相关API\nexport const loadGeneratorService = {\n  // 获取压测机列表\n  getLoadGenerators: (params?: any): Promise<LoadGenerator[]> =>\n    api.get('/load-generators/', { params }),\n\n  // 获取单个压测机\n  getLoadGenerator: (id: number): Promise<LoadGenerator> => \n    api.get(`/load-generators/${id}/`),\n\n  // 创建压测机\n  createLoadGenerator: (data: any): Promise<LoadGenerator> => \n    api.post('/load-generators/', data),\n\n  // 更新压测机\n  updateLoadGenerator: (id: number, data: any): Promise<LoadGenerator> => \n    api.put(`/load-generators/${id}/`, data),\n\n  // 删除压测机\n  deleteLoadGenerator: (id: number): Promise<void> => \n    api.delete(`/load-generators/${id}/`),\n\n  // 测试连接\n  testConnection: (id: number): Promise<ConnectionTestResult> => \n    api.post(`/load-generators/${id}/test-connection/`),\n\n  // 获取压测机配置列表\n  getConfigs: (id: number): Promise<LoadGeneratorConfig[]> => \n    api.get(`/load-generators/${id}/configs/`),\n\n  // 创建压测机配置\n  createConfig: (id: number, data: any): Promise<LoadGeneratorConfig> => \n    api.post(`/load-generators/${id}/configs/`, data),\n\n  // 更新压测机配置\n  updateConfig: (id: number, data: any): Promise<LoadGeneratorConfig> => \n    api.put(`/load-generators/configs/${id}/`, data),\n\n  // 删除压测机配置\n  deleteConfig: (id: number): Promise<void> => \n    api.delete(`/load-generators/configs/${id}/`),\n\n  // 验证压测机配置\n  validateConfig: (id: number): Promise<ConfigValidationResult> => \n    api.post(`/load-generators/configs/${id}/validate/`),\n};\n\n// 测试任务相关API\nexport const testTaskService = {\n  // 获取测试任务列表\n  getTestTasks: (params?: any): Promise<TestTask[]> =>\n    api.get('/test-tasks/', { params }),\n\n  // 获取单个测试任务（包含场景）\n  getTestTask: (id: number): Promise<TestTaskWithScenarios> =>\n    api.get(`/test-tasks/${id}/`),\n\n  // 创建测试任务\n  createTestTask: (data: TestTaskCreate): Promise<TestTask> =>\n    api.post('/test-tasks/', data),\n\n  // 更新测试任务\n  updateTestTask: (id: number, data: TestTaskUpdate): Promise<TestTask> =>\n    api.put(`/test-tasks/${id}/`, data),\n\n  // 删除测试任务\n  deleteTestTask: (id: number): Promise<void> =>\n    api.delete(`/test-tasks/${id}/`),\n\n  // 获取测试执行记录\n  getExecutions: (taskId: number): Promise<TestExecution[]> =>\n    api.get(`/test-tasks/${taskId}/executions/`),\n};\n\n// 测试策略相关API\nexport const testStrategyService = {\n  // 获取测试策略列表\n  getTestStrategies: (params?: any): Promise<TestStrategy[]> =>\n    api.get('/test-strategies/', { params }),\n\n  // 获取单个测试策略\n  getTestStrategy: (id: number): Promise<TestStrategy> =>\n    api.get(`/test-strategies/${id}/`),\n\n  // 创建测试策略\n  createTestStrategy: (data: TestStrategyCreate): Promise<TestStrategy> =>\n    api.post('/test-strategies/', data),\n\n  // 更新测试策略\n  updateTestStrategy: (id: number, data: TestStrategyUpdate): Promise<TestStrategy> =>\n    api.put(`/test-strategies/${id}/`, data),\n\n  // 删除测试策略\n  deleteTestStrategy: (id: number): Promise<void> =>\n    api.delete(`/test-strategies/${id}/`),\n};\n\n// 测试场景相关API\nexport const testScenarioService = {\n  // 根据任务ID获取测试场景列表\n  getTestScenariosByTask: (taskId: number): Promise<TestScenario[]> =>\n    api.get(`/test-scenarios/task/${taskId}/`),\n\n  // 获取单个测试场景\n  getTestScenario: (id: number): Promise<TestScenario> =>\n    api.get(`/test-scenarios/${id}/`),\n\n  // 创建测试场景\n  createTestScenario: (data: TestScenarioCreate): Promise<TestScenario> =>\n    api.post('/test-scenarios/', data),\n\n  // 更新测试场景\n  updateTestScenario: (id: number, data: TestScenarioUpdate): Promise<TestScenario> =>\n    api.put(`/test-scenarios/${id}/`, data),\n\n  // 删除测试场景\n  deleteTestScenario: (id: number): Promise<void> =>\n    api.delete(`/test-scenarios/${id}/`),\n\n  // 获取场景关联的文件\n  getScenarioFiles: (scenarioId: number): Promise<any[]> =>\n    api.get(`/scenario-files/scenario/${scenarioId}/files/`),\n\n  // 上传场景文件\n  uploadScenarioFile: (scenarioId: number, formData: FormData): Promise<any> =>\n    api.post(`/scenario-files/scenario/${scenarioId}/files/`, formData, {\n      headers: {\n        'Content-Type': 'multipart/form-data',\n      },\n    }),\n};\n\n// 测试执行相关API\nexport const testExecutionService = {\n  // 获取测试执行列表\n  getTestExecutions: (params?: any): Promise<TestExecution[]> =>\n    api.get('/test-executions/', { params }),\n\n  // 获取单个测试执行详情\n  getTestExecution: (id: number): Promise<TestExecutionWithDetails> =>\n    api.get(`/test-executions/${id}/`),\n\n  // 创建测试执行\n  createTestExecution: (data: TestExecutionCreate): Promise<TestExecution> =>\n    api.post('/test-executions/', data),\n\n  // 更新测试执行\n  updateTestExecution: (id: number, data: TestExecutionUpdate): Promise<TestExecution> =>\n    api.put(`/test-executions/${id}/`, data),\n\n  // 启动测试执行\n  startTestExecution: (id: number): Promise<any> =>\n    api.post(`/test-executions/${id}/start/`),\n\n  // 停止测试执行\n  stopTestExecution: (id: number, data: TestExecutionStopRequest): Promise<any> =>\n    api.post(`/test-executions/${id}/stop/`, data),\n\n  // 删除测试执行\n  deleteTestExecution: (id: number): Promise<void> =>\n    api.delete(`/test-executions/${id}/`),\n};\n\n// 测试脚本相关API\nexport const testScriptService = {\n  // 获取测试脚本列表\n  getTestScripts: (params?: any): Promise<TestScript[]> =>\n    api.get('/test-scripts/', { params }),\n\n  // 获取单个测试脚本\n  getTestScript: (id: number): Promise<TestScript> =>\n    api.get(`/test-scripts/${id}/`),\n\n  // 创建测试脚本\n  createTestScript: (data: any): Promise<TestScript> =>\n    api.post('/test-scripts/', data),\n\n  // 更新测试脚本\n  updateTestScript: (id: number, data: any): Promise<TestScript> =>\n    api.put(`/test-scripts/${id}/`, data),\n\n  // 删除测试脚本\n  deleteTestScript: (id: number): Promise<void> =>\n    api.delete(`/test-scripts/${id}/`),\n\n  // AI生成脚本\n  generateScript: (data: any): Promise<TestScript> =>\n    api.post('/test-scripts/generate/', data),\n\n  // AI优化脚本\n  optimizeScript: (id: number, data: any): Promise<TestScript> =>\n    api.post(`/test-scripts/${id}/optimize/`, data),\n};\n\n// 心跳检测相关API\nexport const heartbeatService = {\n  // 获取心跳检测状态\n  getHeartbeatStatus: (): Promise<any> =>\n    api.get('/heartbeat/status'),\n\n  // 手动触发心跳检测\n  checkAllHeartbeats: (): Promise<any> =>\n    api.post('/heartbeat/check-all'),\n\n  // 异步触发心跳检测\n  checkAllHeartbeatsAsync: (): Promise<any> =>\n    api.post('/heartbeat/check-all-async'),\n\n  // 获取任务状态\n  getTaskStatus: (taskId: string): Promise<any> =>\n    api.get(`/heartbeat/task/${taskId}`),\n};\n\n\n// 监控相关API\nexport const monitoringService = {\n  // 获取实时监控数据\n  getRealtimeMetrics: (loadGeneratorId: number) => \n    api.get(`/monitoring/realtime/${loadGeneratorId}`),\n\n  // 获取历史监控数据\n  getHistoricalMetrics: (loadGeneratorId: number, params: any) => \n    api.get(`/monitoring/historical/${loadGeneratorId}`, { params }),\n\n  // 获取测试报告\n  getTestReport: (executionId: number) => \n    api.get(`/monitoring/reports/${executionId}`),\n};\n\nexport default api;\n","import React, { useState, useRef, useEffect } from 'react';\nimport { Editor } from '@monaco-editor/react';\nimport { Button, Upload, message, Space, Typography, Card, Row, Col } from 'antd';\nimport { UploadOutlined, SaveOutlined, FileTextOutlined, CheckCircleOutlined, ExclamationCircleOutlined } from '@ant-design/icons';\nimport * as monaco from 'monaco-editor';\n\nconst { Text } = Typography;\n\ninterface ScriptEditorProps {\n  value?: string;\n  onChange?: (value: string) => void;\n  onSave?: (content: string, fileName: string) => void;\n  fileName?: string;\n  readOnly?: boolean;\n  height?: string | number;\n}\n\ninterface SyntaxValidationResult {\n  isValid: boolean;\n  errors: Array<{\n    line: number;\n    column: number;\n    message: string;\n  }>;\n}\n\nconst ScriptEditor: React.FC<ScriptEditorProps> = ({\n  value = '',\n  onChange,\n  onSave,\n  fileName = 'locustfile.py',\n  readOnly = false,\n  height = '400px'\n}) => {\n  const [editorValue, setEditorValue] = useState(value);\n  const [isValidating, setIsValidating] = useState(false);\n  const [validationResult, setValidationResult] = useState<SyntaxValidationResult | null>(null);\n  const [isDirty, setIsDirty] = useState(false);\n  const editorRef = useRef<monaco.editor.IStandaloneCodeEditor | null>(null);\n\n  // 初始化Monaco Editor配置\n  useEffect(() => {\n    // 配置Python语言支持\n    monaco.languages.register({ id: 'python' });\n    \n    // 设置Python语法高亮\n    monaco.languages.setMonarchTokensProvider('python', {\n      tokenizer: {\n        root: [\n          [/def\\s+(\\w+)/, 'keyword.function'],\n          [/class\\s+(\\w+)/, 'keyword.class'],\n          [/import\\s+(\\w+)/, 'keyword.import'],\n          [/from\\s+(\\w+)/, 'keyword.import'],\n          [/if\\s+/, 'keyword'],\n          [/else\\s*:/, 'keyword'],\n          [/elif\\s+/, 'keyword'],\n          [/for\\s+/, 'keyword'],\n          [/while\\s+/, 'keyword'],\n          [/try\\s*:/, 'keyword'],\n          [/except\\s+/, 'keyword'],\n          [/finally\\s*:/, 'keyword'],\n          [/with\\s+/, 'keyword'],\n          [/as\\s+/, 'keyword'],\n          [/return\\s+/, 'keyword'],\n          [/yield\\s+/, 'keyword'],\n          [/lambda\\s+/, 'keyword'],\n          [/and\\b/, 'keyword'],\n          [/or\\b/, 'keyword'],\n          [/not\\b/, 'keyword'],\n          [/in\\b/, 'keyword'],\n          [/is\\b/, 'keyword'],\n          [/True\\b/, 'constant'],\n          [/False\\b/, 'constant'],\n          [/None\\b/, 'constant'],\n          [/#.*$/, 'comment'],\n          [/\"([^\"\\\\]|\\\\.)*$/, 'string.invalid'],\n          [/\"/, 'string', '@string'],\n          [/'([^'\\\\]|\\\\.)*$/, 'string.invalid'],\n          [/'/, 'string', '@string_single'],\n          [/\\d*\\.\\d+([eE][-+]?\\d+)?/, 'number.float'],\n          [/0[xX][0-9a-fA-F]+/, 'number.hex'],\n          [/\\d+/, 'number'],\n          [/[{}()[\\]\\\\]/, '@brackets'],\n          [/[;,.]/, 'delimiter'],\n          [/\\s+/, 'white'],\n          [/[a-zA-Z_$][a-zA-Z0-9_$]*/, 'identifier']\n        ],\n        string: [\n          [/[^\\\\\"]+/, 'string'],\n          [/\\\\./, 'string.escape'],\n          [/\"/, 'string', '@pop']\n        ],\n        string_single: [\n          [/[^\\\\']+/, 'string'],\n          [/\\\\./, 'string.escape'],\n          [/'/, 'string', '@pop']\n        ]\n      }\n    });\n\n    // 设置编辑器主题\n    monaco.editor.defineTheme('pfp-dark', {\n      base: 'vs-dark',\n      inherit: false,\n      rules: [\n        { token: 'keyword', foreground: '569cd6', fontStyle: 'bold' },\n        { token: 'keyword.function', foreground: 'dcdcaa', fontStyle: 'bold' },\n        { token: 'keyword.class', foreground: '4ec9b0', fontStyle: 'bold' },\n        { token: 'keyword.import', foreground: '569cd6', fontStyle: 'bold' },\n        { token: 'string', foreground: 'ce9178' },\n        { token: 'number', foreground: 'b5cea8' },\n        { token: 'number.float', foreground: 'b5cea8' },\n        { token: 'number.hex', foreground: 'b5cea8' },\n        { token: 'comment', foreground: '6a9955', fontStyle: 'italic' },\n        { token: 'constant', foreground: '4fc1ff', fontStyle: 'bold' },\n        { token: 'identifier', foreground: '9cdcfe' },\n        { token: 'delimiter', foreground: 'd4d4d4' },\n        { token: 'brackets', foreground: 'd4d4d4' },\n        { token: 'operator', foreground: 'd4d4d4' },\n        { token: 'type', foreground: '4ec9b0' },\n        { token: 'variable', foreground: '9cdcfe' },\n        { token: 'parameter', foreground: '9cdcfe' }\n      ],\n      colors: {\n        'editor.background': '#0f0f23',\n        'editor.foreground': '#d4d4d4',\n        'editorLineNumber.foreground': '#858585',\n        'editorLineNumber.activeForeground': '#c6c6c6',\n        'editor.selectionBackground': '#264f78',\n        'editor.inactiveSelectionBackground': '#3a3d41',\n        'editorCursor.foreground': '#ffffff',\n        'editorCursor.background': '#0f0f23',\n        'editorWhitespace.foreground': '#404040',\n        'editor.lineHighlightBackground': '#1a1a2e',\n        'editor.lineHighlightBorder': '#1a1a2e',\n        'editorIndentGuide.background': '#404040',\n        'editorIndentGuide.activeBackground': '#707070',\n        'editorBracketMatch.background': '#0e639c50',\n        'editorBracketMatch.border': '#888888',\n        'editor.findMatchBackground': '#515c6a',\n        'editor.findMatchHighlightBackground': '#ea5c0055',\n        'editor.hoverHighlightBackground': '#264f7840',\n        'editorLink.activeForeground': '#4e94ce',\n        'editorWidget.background': '#252526',\n        'editorWidget.border': '#454545',\n        'editorSuggestWidget.background': '#252526',\n        'editorSuggestWidget.border': '#454545',\n        'editorSuggestWidget.foreground': '#cccccc',\n        'editorSuggestWidget.highlightForeground': '#0097fb',\n        'editorSuggestWidget.selectedBackground': '#094771'\n      }\n    });\n\n    // 立即设置主题\n    monaco.editor.setTheme('pfp-dark');\n  }, []);\n\n  // 处理编辑器值变化\n  const handleEditorChange = (newValue: string | undefined) => {\n    const content = newValue || '';\n    setEditorValue(content);\n    setIsDirty(content !== value);\n    onChange?.(content);\n  };\n\n  // 处理编辑器挂载\n  const handleEditorDidMount = (editor: monaco.editor.IStandaloneCodeEditor) => {\n    editorRef.current = editor;\n    \n    // 设置编辑器配置\n    editor.updateOptions({\n      fontSize: 14,\n      fontFamily: 'Monaco, \"Menlo\", \"Ubuntu Mono\", Consolas, \"Courier New\", monospace',\n      lineNumbers: 'on',\n      roundedSelection: false,\n      scrollBeyondLastLine: false,\n      automaticLayout: true,\n      minimap: { enabled: false },\n      wordWrap: 'on',\n      tabSize: 4,\n      insertSpaces: true,\n      detectIndentation: false,\n      cursorBlinking: 'blink',\n      cursorStyle: 'line',\n      renderLineHighlight: 'line',\n      selectionHighlight: true,\n      occurrencesHighlight: 'singleFile',\n      bracketPairColorization: { enabled: true }\n    });\n\n    // 确保主题正确应用\n    monaco.editor.setTheme('vs-dark');\n  };\n\n  // Python语法验证\n  const validatePythonSyntax = async (code: string): Promise<SyntaxValidationResult> => {\n    // 简单的Python语法检查\n    const errors: Array<{ line: number; column: number; message: string }> = [];\n    \n    try {\n      // 检查基本的语法错误\n      const lines = code.split('\\n');\n      \n      for (let i = 0; i < lines.length; i++) {\n        const line = lines[i];\n        const lineNumber = i + 1;\n        \n        // 检查缩进错误\n        if (line.trim() && !line.startsWith(' ') && !line.startsWith('\\t') && \n            (line.includes(':') && !line.trim().endsWith(':'))) {\n          // 这可能是缩进问题，但需要更复杂的检查\n        }\n        \n        // 检查括号匹配\n        const openParens = (line.match(/\\(/g) || []).length;\n        const closeParens = (line.match(/\\)/g) || []).length;\n        const openBrackets = (line.match(/\\[/g) || []).length;\n        const closeBrackets = (line.match(/\\]/g) || []).length;\n        const openBraces = (line.match(/\\{/g) || []).length;\n        const closeBraces = (line.match(/\\}/g) || []).length;\n        \n        if (openParens !== closeParens || openBrackets !== closeBrackets || openBraces !== closeBraces) {\n          errors.push({\n            line: lineNumber,\n            column: 0,\n            message: '括号不匹配'\n          });\n        }\n        \n        // 检查字符串引号匹配\n        const singleQuotes = (line.match(/'/g) || []).length;\n        const doubleQuotes = (line.match(/\"/g) || []).length;\n        \n        if (singleQuotes % 2 !== 0 && doubleQuotes % 2 !== 0) {\n          errors.push({\n            line: lineNumber,\n            column: 0,\n            message: '字符串引号不匹配'\n          });\n        }\n      }\n      \n      return {\n        isValid: errors.length === 0,\n        errors\n      };\n    } catch (error) {\n      return {\n        isValid: false,\n        errors: [{\n          line: 1,\n          column: 0,\n          message: '语法检查失败'\n        }]\n      };\n    }\n  };\n\n  // 执行语法验证\n  const handleValidate = async () => {\n    if (!editorValue.trim()) {\n      message.warning('请先输入代码内容');\n      return;\n    }\n\n    setIsValidating(true);\n    try {\n      const result = await validatePythonSyntax(editorValue);\n      setValidationResult(result);\n      \n      if (result.isValid) {\n        message.success('语法检查通过');\n      } else {\n        message.error(`发现 ${result.errors.length} 个语法错误`);\n      }\n    } catch (error) {\n      message.error('语法检查失败');\n    } finally {\n      setIsValidating(false);\n    }\n  };\n\n  // 保存脚本\n  const handleSave = () => {\n    if (!editorValue.trim()) {\n      message.warning('请先输入代码内容');\n      return;\n    }\n    \n    onSave?.(editorValue, fileName);\n    setIsDirty(false);\n    message.success('脚本保存成功');\n  };\n\n  // 处理文件上传\n  const handleFileUpload = (file: File) => {\n    const reader = new FileReader();\n    reader.onload = (e) => {\n      const content = e.target?.result as string;\n      setEditorValue(content);\n      setIsDirty(true);\n      onChange?.(content);\n      message.success(`文件 ${file.name} 加载成功`);\n    };\n    reader.readAsText(file);\n    return false; // 阻止默认上传行为\n  };\n\n  // 上传配置\n  const uploadProps = {\n    beforeUpload: handleFileUpload,\n    accept: '.py',\n    showUploadList: false,\n    multiple: false\n  };\n\n  return (\n    <Card \n      title={\n        <Space>\n          <FileTextOutlined />\n          <Text strong>脚本编辑器</Text>\n          {isDirty && <Text type=\"warning\">(未保存)</Text>}\n        </Space>\n      }\n      style={{ \n        background: '#0f0f23',\n        border: '1px solid #2d3748'\n      }}\n      bodyStyle={{ padding: '16px' }}\n    >\n      <Row gutter={[16, 16]}>\n        {/* 工具栏 */}\n        <Col span={24}>\n          <Space wrap>\n            <Upload {...uploadProps}>\n              <Button \n                icon={<UploadOutlined />}\n                style={{\n                  background: 'linear-gradient(135deg, #4c63d2 0%, #5a67d8 100%)',\n                  border: 'none',\n                  color: '#fff'\n                }}\n              >\n                上传脚本\n              </Button>\n            </Upload>\n            \n            <Button \n              icon={<CheckCircleOutlined />}\n              onClick={handleValidate}\n              loading={isValidating}\n              style={{\n                background: 'linear-gradient(135deg, #52c41a 0%, #73d13d 100%)',\n                border: 'none',\n                color: '#fff'\n              }}\n            >\n              语法检查\n            </Button>\n            \n            <Button \n              icon={<SaveOutlined />}\n              onClick={handleSave}\n              disabled={!isDirty}\n              style={{\n                background: isDirty \n                  ? 'linear-gradient(135deg, #1890ff 0%, #40a9ff 100%)'\n                  : '#555',\n                border: 'none',\n                color: '#fff'\n              }}\n            >\n              保存脚本\n            </Button>\n          </Space>\n        </Col>\n\n        {/* 验证结果 */}\n        {validationResult && (\n          <Col span={24}>\n            <Card \n              size=\"small\"\n              style={{ \n                background: validationResult.isValid ? '#f6ffed' : '#fff2f0',\n                border: `1px solid ${validationResult.isValid ? '#b7eb8f' : '#ffccc7'}`\n              }}\n            >\n              <Space>\n                {validationResult.isValid ? (\n                  <CheckCircleOutlined style={{ color: '#52c41a' }} />\n                ) : (\n                  <ExclamationCircleOutlined style={{ color: '#ff4d4f' }} />\n                )}\n                <Text \n                  style={{ \n                    color: validationResult.isValid ? '#52c41a' : '#ff4d4f' \n                  }}\n                >\n                  {validationResult.isValid \n                    ? '语法检查通过' \n                    : `发现 ${validationResult.errors.length} 个错误`\n                  }\n                </Text>\n              </Space>\n              \n              {!validationResult.isValid && (\n                <div style={{ marginTop: '8px' }}>\n                  {validationResult.errors.map((error, index) => (\n                    <div key={index} style={{ fontSize: '12px', color: '#ff4d4f' }}>\n                      第 {error.line} 行: {error.message}\n                    </div>\n                  ))}\n                </div>\n              )}\n            </Card>\n          </Col>\n        )}\n\n        {/* 编辑器 */}\n        <Col span={24}>\n          <div \n            style={{ \n              border: '1px solid #2d3748',\n              borderRadius: '6px',\n              overflow: 'hidden'\n            }}\n          >\n            <Editor\n              height={height}\n              language=\"python\"\n              value={editorValue}\n              onChange={handleEditorChange}\n              onMount={handleEditorDidMount}\n              options={{\n                readOnly,\n                fontSize: 14,\n                fontFamily: 'Monaco, \"Menlo\", \"Ubuntu Mono\", Consolas, \"Courier New\", monospace',\n                lineNumbers: 'on',\n                roundedSelection: false,\n                scrollBeyondLastLine: false,\n                automaticLayout: true,\n                minimap: { enabled: false },\n                wordWrap: 'on',\n                tabSize: 4,\n                insertSpaces: true,\n                detectIndentation: false,\n                cursorBlinking: 'blink',\n                cursorStyle: 'line',\n                renderLineHighlight: 'line',\n                selectionHighlight: true,\n                occurrencesHighlight: 'singleFile',\n                bracketPairColorization: { enabled: true },\n                theme: 'vs-dark'\n              }}\n            />\n          </div>\n        </Col>\n\n        {/* 文件信息 */}\n        <Col span={24}>\n          <Text type=\"secondary\" style={{ fontSize: '12px' }}>\n            当前文件: {fileName} | 字符数: {editorValue.length} | 行数: {editorValue.split('\\n').length}\n          </Text>\n        </Col>\n      </Row>\n    </Card>\n  );\n};\n\nexport default ScriptEditor;\n","import React, { useState, useEffect, useCallback } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport { \n  Card, \n  Row, \n  Col, \n  Button, \n  Space, \n  Tag, \n  Table, \n  message,\n  Tabs,\n  Statistic,\n  Progress,\n  Modal,\n  Form,\n  Input,\n  Select,\n  Upload,\n  Divider,\n  Typography,\n  Steps,\n  Collapse,\n  Tooltip,\n  Popconfirm\n} from 'antd';\nimport { \n  ArrowLeftOutlined,\n  PlayCircleOutlined,\n  PauseCircleOutlined,\n  ReloadOutlined,\n  ExperimentOutlined,\n  CheckCircleOutlined,\n  CloseCircleOutlined,\n  ClockCircleOutlined,\n  UploadOutlined,\n  EditOutlined,\n  CopyOutlined,\n  DeleteOutlined,\n  FileTextOutlined,\n  SettingOutlined,\n  CloudServerOutlined,\n  InfoCircleOutlined,\n  DownOutlined,\n  SaveOutlined\n} from '@ant-design/icons';\nimport { \n  testTaskService, \n  testStrategyService, \n  testExecutionService,\n  testScenarioService,\n  loadGeneratorService \n} from '../services/api';\nimport type { \n  TestTask, \n  TestTaskWithScenarios, \n  TestExecution, \n  TestStrategy,\n  TestExecutionCreate\n} from '../types/testTask';\nimport type { LoadGenerator, LoadGeneratorConfig, DeploymentConfig } from '../types/loadGenerator';\nimport ScriptEditor from '../components/ScriptEditor';\n\nconst { Title, Text } = Typography;\nconst { Step } = Steps;\nconst { Panel } = Collapse;\n\nconst TestTaskDetail: React.FC = () => {\n  const { id } = useParams<{ id: string }>();\n  const navigate = useNavigate();\n  const [testTask, setTestTask] = useState<TestTaskWithScenarios | null>(null);\n  const [executions, setExecutions] = useState<TestExecution[]>([]);\n  const [strategies, setStrategies] = useState<TestStrategy[]>([]);\n  const [loadGenerators, setLoadGenerators] = useState<LoadGenerator[]>([]);\n  const [loadGeneratorConfigs, setLoadGeneratorConfigs] = useState<LoadGeneratorConfig[]>([]);\n  const [loading, setLoading] = useState(false);\n  \n  // 场景创建相关状态\n  const [scenarioModalVisible, setScenarioModalVisible] = useState(false);\n  const [executionModalVisible, setExecutionModalVisible] = useState(false);\n  const [editorModalVisible, setEditorModalVisible] = useState(false);\n  const [currentStep, setCurrentStep] = useState(0);\n  const [scenarioForm] = Form.useForm();\n  const [executionForm] = Form.useForm();\n  \n  // 场景配置状态\n  const [selectedStrategy, setSelectedStrategy] = useState<TestStrategy | null>(null);\n  const [selectedLoadGenerator, setSelectedLoadGenerator] = useState<LoadGenerator | null>(null);\n  const [selectedDeploymentConfig, setSelectedDeploymentConfig] = useState<DeploymentConfig | null>(null);\n  const [selectedConfig, setSelectedConfig] = useState<LoadGeneratorConfig | null>(null);\n  const [uploadedFiles, setUploadedFiles] = useState<Array<{file: File, content: string, id: string}>>([]);\n  const [selectedFileId, setSelectedFileId] = useState<string | null>(null);\n  const [expandedScenarios, setExpandedScenarios] = useState<Set<string>>(new Set());\n  const [editorContent, setEditorContent] = useState('');\n  const [isCreatingScenario, setIsCreatingScenario] = useState(false);\n  const [currentScenario, setCurrentScenario] = useState<any>(null);\n  const [scenarios, setScenarios] = useState<any[]>([]);\n  const [editingScenarioId, setEditingScenarioId] = useState<string | null>(null);\n  const [editingScenarioName, setEditingScenarioName] = useState('');\n  \n  // 脚本编辑器相关状态\n  const [scriptContent, setScriptContent] = useState('');\n  const [currentScriptFileName, setCurrentScriptFileName] = useState('locustfile.py');\n  const [scenarioFiles, setScenarioFiles] = useState<{[key: number]: any[]}>({});\n  const [forceEditorForEmptyScenario, setForceEditorForEmptyScenario] = useState(false);\n\n  useEffect(() => {\n    if (id) {\n      fetchTestTask();\n      fetchExecutions();\n      fetchStrategies();\n      fetchLoadGenerators();\n    }\n  }, [id]);\n\n  // 加载脚本文件到编辑器\n  const handleLoadScript = useCallback(async (file: any) => {\n    try {\n      // 获取文件内容\n      const response = await fetch(`/api/v1/scenario-files/files/${file.id}/content/`);\n      if (response.ok) {\n        const content = await response.text();\n        setScriptContent(content);\n        setCurrentScriptFileName(file.file_name);\n        message.success(`脚本 ${file.file_name} 加载成功`);\n      } else {\n        message.error('加载脚本失败');\n      }\n    } catch (error) {\n      console.error('加载脚本失败:', error);\n      message.error('加载脚本失败');\n    }\n  }, []);\n\n  // 当场景文件加载完成后，自动加载当前场景的脚本\n  useEffect(() => {\n    if (currentScenario && scenarioFiles[currentScenario.id] && scenarioFiles[currentScenario.id].length > 0) {\n      // 一旦有文件，确保退出空场景的强制编辑模式\n      if (forceEditorForEmptyScenario) setForceEditorForEmptyScenario(false);\n      const files = scenarioFiles[currentScenario.id];\n      const scriptFile = files.find(file => \n        file.file_name.endsWith('.py') || file.is_script\n      );\n      \n      if (scriptFile) {\n        handleLoadScript(scriptFile);\n      } else if (files[0]) {\n        handleLoadScript(files[0]);\n      }\n    } else if (currentScenario && scenarioFiles[currentScenario.id] && scenarioFiles[currentScenario.id].length === 0) {\n      // 如果场景存在但没有文件，清空编辑器\n      setScriptContent('');\n      setCurrentScriptFileName('locustfile.py');\n    } else if (!currentScenario) {\n      // 如果没有当前场景，清空编辑器\n      if (forceEditorForEmptyScenario) setForceEditorForEmptyScenario(false);\n      setScriptContent('');\n      setCurrentScriptFileName('locustfile.py');\n    }\n  }, [currentScenario, scenarioFiles, handleLoadScript, forceEditorForEmptyScenario]);\n\n  // 创建默认脚本模板并打开编辑器\n  const handleCreateDefaultScript = () => {\n    const defaultTemplate = `from locust import HttpUser, task, between\n\nclass QuickstartUser(HttpUser):\n    wait_time = between(1, 3)\n\n    @task\n    def hello_world(self):\n        self.client.get(\"/\")\n        self.client.get(\"/world\")\n`;\n    setScriptContent(defaultTemplate);\n    setCurrentScriptFileName('locustfile.py');\n    setForceEditorForEmptyScenario(true);\n  };\n\n  const fetchTestTask = async () => {\n    if (!id) return;\n    setLoading(true);\n    try {\n      const data = await testTaskService.getTestTask(parseInt(id));\n      setTestTask(data);\n      \n      // 获取每个scenario的文件\n      if (data.scenarios && data.scenarios.length > 0) {\n        const filesMap: {[key: number]: any[]} = {};\n        for (const scenario of data.scenarios) {\n          try {\n            const files = await testScenarioService.getScenarioFiles(scenario.id);\n            filesMap[scenario.id] = files;\n          } catch (error) {\n            console.error(`Failed to fetch files for scenario ${scenario.id}:`, error);\n            filesMap[scenario.id] = [];\n          }\n        }\n        setScenarioFiles(filesMap);\n        \n        // 如果没有当前选中的场景，自动选择第一个场景\n        if (!currentScenario) {\n          const firstScenario = data.scenarios[0];\n          setCurrentScenario(firstScenario);\n        }\n      } else {\n        // 如果没有场景，清空当前场景和脚本内容\n        setCurrentScenario(null);\n        setScriptContent('');\n        setCurrentScriptFileName('locustfile.py');\n        setScenarioFiles({});\n      }\n    } catch (error) {\n      console.error('Error in fetchTestTask:', error);\n      message.error('Failed to fetch test task details');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const fetchExecutions = async () => {\n    if (!id) return;\n    try {\n      const data = await testTaskService.getExecutions(parseInt(id));\n      setExecutions(data);\n    } catch (error) {\n      message.error('Failed to fetch execution records');\n    }\n  };\n\n  const fetchStrategies = async () => {\n    try {\n      const data = await testStrategyService.getTestStrategies();\n      setStrategies(data);\n    } catch (error) {\n      message.error('Failed to fetch strategy list');\n    }\n  };\n\n  const fetchLoadGenerators = async () => {\n    try {\n      const data = await loadGeneratorService.getLoadGenerators();\n      setLoadGenerators(data);\n    } catch (error) {\n      message.error('Failed to fetch load generator list');\n    }\n  };\n\n  const loadLoadGeneratorConfigs = async (loadGeneratorId: number) => {\n    try {\n      const configs = await loadGeneratorService.getConfigs(loadGeneratorId);\n      setLoadGeneratorConfigs(configs);\n    } catch (error) {\n      message.error('Failed to load load generator configs');\n    }\n  };\n\n  // 场景创建相关处理函数\n  const handleCreateScenario = () => {\n    const newScenario = {\n      id: Date.now(), // 临时ID\n      name: `Scenario ${scenarios.length + 1}`,\n      interface_name: '',\n      interface_url: '',\n      method: 'GET',\n      weight: 1,\n      headers: {},\n      body: '',\n      timeout: 30,\n      isNew: true\n    };\n    \n    setScenarios([...scenarios, newScenario]);\n    setCurrentScenario(newScenario);\n    setIsCreatingScenario(false);\n    setCurrentStep(0);\n    setSelectedStrategy(null);\n    setSelectedLoadGenerator(null);\n    setSelectedConfig(null);\n    setUploadedFiles([]);\n    setSelectedFileId(null);\n    setEditorContent('');\n  };\n\n  const handleSelectScenario = async (scenario: any) => {\n    setCurrentScenario(scenario);\n    setIsCreatingScenario(false);\n    setCurrentStep(0);\n    \n    // 自动加载该场景的脚本文件\n    const files = scenarioFiles[scenario.id];\n    if (files && files.length > 0) {\n      // 如果有脚本文件，自动加载第一个\n      const scriptFile = files.find(file => \n        file.file_name.endsWith('.py') || file.is_script\n      );\n      \n      if (scriptFile) {\n        await handleLoadScript(scriptFile);\n      } else {\n        // 如果没有找到Python脚本，加载第一个文件\n        await handleLoadScript(files[0]);\n      }\n    } else {\n      // 如果没有脚本文件，清空编辑器\n      setScriptContent('');\n      setCurrentScriptFileName('locustfile.py');\n    }\n  };\n\n  const handleCancelScenario = () => {\n    setIsCreatingScenario(false);\n    setCurrentStep(0);\n    setSelectedStrategy(null);\n    setSelectedLoadGenerator(null);\n    setSelectedConfig(null);\n    setUploadedFiles([]);\n    setSelectedFileId(null);\n    setEditorContent('');\n  };\n\n  const handleSaveScenario = async () => {\n    if (!currentScenario || !testTask) return;\n    \n    try {\n      // 准备保存到数据库的数据\n      const scenarioData = {\n        task_id: testTask.id,\n        interface_name: currentScenario.name,\n        interface_url: currentScenario.interface_url || 'http://example.com',\n        method: currentScenario.method || 'GET',\n        weight: currentScenario.weight || 1,\n        order: currentScenario.order || 1,\n        headers: currentScenario.headers || {},\n        body: currentScenario.body || '',\n        timeout: currentScenario.timeout || 30\n      };\n\n      // 调用API保存场景\n      const savedScenario = await testScenarioService.createTestScenario(scenarioData);\n      \n      message.success('Scenario saved successfully');\n      \n      // 更新场景列表，将本地场景替换为保存的场景\n      setScenarios(scenarios.map(s => \n        s.id === currentScenario.id \n          ? { ...savedScenario, isNew: false }\n          : s\n      ));\n      \n      // 更新当前场景\n      const updatedScenario = { ...savedScenario, isNew: false };\n      setCurrentScenario(updatedScenario);\n      \n      // 重新获取任务数据以更新数据库中的场景列表\n      await fetchTestTask();\n      \n      // 确保当前场景保持为刚保存的场景\n      setCurrentScenario(updatedScenario);\n      \n    } catch (error) {\n      console.error('Failed to save scenario:', error);\n      message.error('Failed to save scenario');\n    }\n  };\n\n  const handleDeleteScenario = async (scenarioId: number) => {\n    try {\n      // 检查是否是本地创建的scenario\n      const localScenario = scenarios.find(s => s.id === scenarioId);\n      const dbScenario = testTask?.scenarios?.find(s => s.id === scenarioId);\n      \n      if (localScenario && localScenario.isNew) {\n        // 本地scenario，直接从状态中删除\n        setScenarios(scenarios.filter(s => s.id !== scenarioId));\n        \n        // 如果删除的是当前场景，清空当前场景\n        if (currentScenario?.id === scenarioId) {\n          setCurrentScenario(null);\n        }\n      } else if (dbScenario) {\n        // 数据库中的scenario，调用API删除\n        await testScenarioService.deleteTestScenario(scenarioId);\n        message.success('Scenario deleted successfully');\n        \n        // 重新获取任务数据\n        await fetchTestTask();\n      }\n    } catch (error) {\n      console.error('Failed to delete scenario:', error);\n      message.error('Failed to delete scenario');\n    }\n  };\n\n  const handleToggleScenario = (scenarioId: string) => {\n    setExpandedScenarios(prev => {\n      const newSet = new Set(prev);\n      if (newSet.has(scenarioId)) {\n        newSet.delete(scenarioId);\n      } else {\n        newSet.add(scenarioId);\n      }\n      return newSet;\n    });\n  };\n\n  const handleStartEditScenario = (scenario: any) => {\n    setEditingScenarioId(scenario.id.toString());\n    setEditingScenarioName(scenario.name || scenario.interface_name || '');\n  };\n\n  const handleSaveScenarioName = async (scenarioId: string) => {\n    if (editingScenarioName && editingScenarioName.trim()) {\n      try {\n        // 检查是否是数据库中的scenario\n        const dbScenario = testTask?.scenarios?.find(s => s.id.toString() === scenarioId);\n        const localScenario = scenarios.find(s => s.id.toString() === scenarioId);\n        \n        if (dbScenario) {\n          // 更新数据库中的scenario\n          await testScenarioService.updateTestScenario(dbScenario.id, {\n            interface_name: editingScenarioName.trim()\n          });\n          // 重新获取任务数据\n          await fetchTestTask();\n        } else if (localScenario) {\n          // 更新本地scenario\n          setScenarios(scenarios.map(s => \n            s.id.toString() === scenarioId \n              ? { ...s, name: editingScenarioName.trim() }\n              : s\n          ));\n          \n          // 如果修改的是当前场景的名称，也要更新当前场景\n          if (currentScenario?.id.toString() === scenarioId) {\n            setCurrentScenario({\n              ...currentScenario,\n              name: editingScenarioName.trim()\n            });\n          }\n        }\n        \n        setEditingScenarioId(null);\n        setEditingScenarioName('');\n        message.success('Scenario name updated successfully');\n        \n      } catch (error) {\n        console.error('Failed to update scenario name:', error);\n        message.error('Failed to update scenario name');\n      }\n    }\n  };\n\n  const handleCancelEditScenario = () => {\n    setEditingScenarioId(null);\n    setEditingScenarioName('');\n  };\n\n  // 处理脚本保存\n  const handleScriptSave = async (content: string, fileName: string) => {\n    if (!currentScenario || !testTask) {\n      message.warning('请先选择一个场景');\n      return;\n    }\n\n    try {\n      // 创建文件对象\n      const file = new File([content], fileName, { type: 'text/python' });\n      \n      // 如果当前场景已保存到数据库，直接上传文件\n      if (!currentScenario.isNew) {\n        // 上传文件到MinIO并关联到场景\n        const formData = new FormData();\n        formData.append('file', file);\n        formData.append('description', `Script file for scenario: ${currentScenario.interface_name}`);\n        \n        // 调用文件上传API\n        const uploadedFile = await testScenarioService.uploadScenarioFile(currentScenario.id, formData);\n        \n        // 重新获取任务数据以更新文件列表\n        await fetchTestTask();\n        \n        // 在fetchTestTask完成后，再次确保文件被添加到状态中\n        setScenarioFiles(prev => ({\n          ...prev,\n          [currentScenario.id]: [...(prev[currentScenario.id] || []), uploadedFile]\n        }));\n        \n        message.success('脚本保存成功');\n      } else {\n        // 如果是新场景，先保存场景再保存文件\n        await handleSaveScenario();\n        \n        // 使用当前场景的ID（已经更新为保存后的ID）\n        if (currentScenario && !currentScenario.isNew) {\n          const formData = new FormData();\n          formData.append('file', file);\n          formData.append('description', `Script file for scenario: ${currentScenario.interface_name}`);\n          \n          const uploadedFile = await testScenarioService.uploadScenarioFile(currentScenario.id, formData);\n          \n          // 立即更新本地文件列表状态\n          setScenarioFiles(prev => ({\n            ...prev,\n            [currentScenario.id]: [...(prev[currentScenario.id] || []), uploadedFile]\n          }));\n          \n          // 保存后立即加载脚本到编辑器\n          setScriptContent(content);\n          setCurrentScriptFileName(fileName);\n        }\n        \n        message.success('场景和脚本保存成功');\n      }\n      \n      // 更新脚本内容\n      setScriptContent(content);\n      setCurrentScriptFileName(fileName);\n      \n    } catch (error) {\n      console.error('保存脚本失败:', error);\n      message.error('保存脚本失败');\n    }\n  };\n\n  const handleCloneScenario = (scenario: any) => {\n    setScenarioModalVisible(true);\n    setCurrentStep(0);\n    scenarioForm.setFieldsValue(scenario);\n    message.info('Scenario cloned, please modify as needed');\n  };\n\n\n  const handleFileSelect = (fileId: string) => {\n    setSelectedFileId(fileId);\n    const selectedFile = uploadedFiles.find(f => f.id === fileId);\n    if (selectedFile) {\n      setEditorContent(selectedFile.content);\n    }\n  };\n\n  const handleFileDelete = (fileId: string) => {\n    setUploadedFiles(prev => prev.filter(f => f.id !== fileId));\n    \n    // 如果删除的是当前选中的文件，选择其他文件或清空\n    if (selectedFileId === fileId) {\n      const remainingFiles = uploadedFiles.filter(f => f.id !== fileId);\n      if (remainingFiles.length > 0) {\n        const newSelectedId = remainingFiles[0].id;\n        setSelectedFileId(newSelectedId);\n        setEditorContent(remainingFiles[0].content);\n      } else {\n        setSelectedFileId(null);\n        setEditorContent('');\n      }\n    }\n  };\n\n  const handleContentUpdate = (content: string) => {\n    setEditorContent(content);\n    if (selectedFileId) {\n      setUploadedFiles(prev => prev.map(f => \n        f.id === selectedFileId ? { ...f, content } : f\n      ));\n    }\n  };\n\n  const handleEditorSave = () => {\n    setEditorModalVisible(false);\n    message.success('Script saved successfully');\n  };\n\n\n  const handleExecuteScenario = async () => {\n    if (!selectedStrategy || !selectedLoadGenerator || !selectedDeploymentConfig || !selectedConfig) {\n      message.error('Please complete all configuration steps');\n      return;\n    }\n\n    try {\n      const executionData: TestExecutionCreate = {\n        task_id: parseInt(id!),\n        strategy_id: selectedStrategy.id,\n        load_generator_id: selectedLoadGenerator.id,\n        load_generator_config_id: selectedConfig.id,\n        execution_name: `Execution_${new Date().toLocaleString()}`\n      };\n      \n      await testExecutionService.createTestExecution(executionData);\n      message.success('Test execution created successfully');\n      setIsCreatingScenario(false);\n      setCurrentStep(0);\n      fetchExecutions();\n    } catch (error) {\n      message.error('Failed to create test execution');\n    }\n  };\n\n  const handleStart = () => {\n    setExecutionModalVisible(true);\n  };\n\n  const handleCreateExecution = async (values: any) => {\n    if (!id) return;\n    try {\n      const executionData: TestExecutionCreate = {\n        task_id: parseInt(id),\n        strategy_id: values.strategy_id,\n        load_generator_id: values.load_generator_id,\n        load_generator_config_id: values.load_generator_config_id,\n        execution_name: values.execution_name || `Execution_${new Date().toLocaleString()}`\n      };\n      \n      await testExecutionService.createTestExecution(executionData);\n      message.success('Test execution created successfully');\n      setExecutionModalVisible(false);\n      fetchExecutions();\n    } catch (error) {\n      message.error('Failed to create test execution');\n    }\n  };\n\n\n  const getStatusTag = (status: string) => {\n    const statusMap = {\n      pending: { color: 'default', text: 'Pending' },\n      running: { color: 'processing', text: 'Running' },\n      completed: { color: 'success', text: 'Completed' },\n      failed: { color: 'error', text: 'Failed' },\n      cancelled: { color: 'warning', text: 'Cancelled' }\n    };\n    const config = statusMap[status as keyof typeof statusMap] || { color: 'default', text: status };\n    return <Tag color={config.color}>{config.text}</Tag>;\n  };\n\n  const getScenarioTypeTag = (scenarioType: string) => {\n    const typeMap = {\n      single: { color: 'blue', text: 'Single Interface' },\n      multi: { color: 'green', text: 'Multi Interface' }\n    };\n    const config = typeMap[scenarioType as keyof typeof typeMap] || { color: 'default', text: scenarioType };\n    return <Tag color={config.color}>{config.text}</Tag>;\n  };\n\n  const executionColumns = [\n    {\n      title: 'Execution Name',\n      dataIndex: 'execution_name',\n      key: 'execution_name',\n    },\n    {\n      title: 'Status',\n      dataIndex: 'status',\n      key: 'status',\n      render: (status: string) => getStatusTag(status),\n    },\n    {\n      title: 'Total Requests',\n      dataIndex: 'total_requests',\n      key: 'total_requests',\n    },\n    {\n      title: 'Failures',\n      dataIndex: 'total_failures',\n      key: 'total_failures',\n    },\n    {\n      title: 'Avg Response Time (ms)',\n      dataIndex: 'avg_response_time',\n      key: 'avg_response_time',\n      render: (time: number) => time.toFixed(2),\n    },\n    {\n      title: 'RPS',\n      dataIndex: 'requests_per_second',\n      key: 'requests_per_second',\n      render: (rps: number) => rps.toFixed(2),\n    },\n    {\n      title: 'Error Rate',\n      dataIndex: 'error_rate',\n      key: 'error_rate',\n      render: (rate: number) => `${(rate * 100).toFixed(2)}%`,\n    },\n    {\n      title: 'Started At',\n      dataIndex: 'started_at',\n      key: 'started_at',\n      render: (date: string) => date ? new Date(date).toLocaleString() : '-',\n    },\n    {\n      title: 'Completed At',\n      dataIndex: 'completed_at',\n      key: 'completed_at',\n      render: (date: string) => date ? new Date(date).toLocaleString() : '-',\n    },\n    {\n      title: 'Actions',\n      key: 'action',\n      render: (_: any, record: TestExecution) => (\n        <Space>\n          {record.status === 'pending' && (\n            <Button\n              size=\"small\"\n              type=\"primary\"\n              icon={<PlayCircleOutlined />}\n              onClick={() => {\n                testExecutionService.startTestExecution(record.id).then(() => {\n                  message.success('Execution started');\n                  fetchExecutions();\n                }).catch(() => {\n                  message.error('Failed to start execution');\n                });\n              }}\n            >\n              Start\n            </Button>\n          )}\n          {record.status === 'running' && (\n            <Button\n              size=\"small\"\n              danger\n              icon={<PauseCircleOutlined />}\n              onClick={() => {\n                testExecutionService.stopTestExecution(record.id, { reason: 'Manual stop' }).then(() => {\n                  message.success('Execution stopped');\n                  fetchExecutions();\n                }).catch(() => {\n                  message.error('Failed to stop execution');\n                });\n              }}\n            >\n              Stop\n            </Button>\n          )}\n          <Button\n            size=\"small\"\n            icon={<ReloadOutlined />}\n            onClick={() => navigate(`/test-executions/${record.id}`)}\n          >\n            View Details\n          </Button>\n        </Space>\n      ),\n    },\n  ];\n\n  if (!testTask) {\n    return <div>Loading...</div>;\n  }\n\n  const latestExecution = executions[0];\n  const successRate = latestExecution ? \n    ((latestExecution.total_requests - latestExecution.total_failures) / latestExecution.total_requests * 100) : 0;\n\n  // 场景创建步骤内容\n  const renderScenarioSteps = () => {\n    const steps = [\n      {\n        title: 'Script Upload',\n        content: (\n          <div>\n            <Title level={4} style={{ color: '#fff', marginBottom: '20px' }}>Upload Locust Scripts</Title>\n            <Row gutter={16} style={{ height: '500px' }}>\n              {/* 脚本编辑器 / 空场景创建引导 */}\n              <Col span={24}>\n                {currentScenario ? (\n                  (scenarioFiles[currentScenario.id]?.length > 0 || forceEditorForEmptyScenario) ? (\n                    <ScriptEditor\n                      value={scriptContent}\n                      onChange={setScriptContent}\n                      onSave={handleScriptSave}\n                      fileName={currentScriptFileName}\n                      height=\"450px\"\n                    />\n                  ) : (\n                    <div style={{\n                      height: '450px',\n                      display: 'flex',\n                      flexDirection: 'column',\n                      alignItems: 'center',\n                      justifyContent: 'center',\n                      background: 'rgba(255, 255, 255, 0.02)',\n                      border: '1px solid rgba(255, 255, 255, 0.08)',\n                      borderRadius: '8px',\n                      color: '#8c8c8c'\n                    }}>\n                      <div style={{ fontSize: '48px', marginBottom: '16px', opacity: 0.3 }}>\n                        📄\n                      </div>\n                      <Title level={4} style={{ color: '#8c8c8c', marginBottom: '8px', fontSize: '16px' }}>\n                        No scripts found for this scenario\n                      </Title>\n                      <Text style={{ color: '#666', fontSize: '12px', textAlign: 'center', maxWidth: '360px', marginBottom: '16px' }}>\n                        Click the button below to create a default locustfile.py and start editing\n                      </Text>\n                      <Button \n                        type=\"primary\"\n                        icon={<FileTextOutlined />}\n                        onClick={handleCreateDefaultScript}\n                        style={{\n                          background: 'linear-gradient(135deg, #1890ff 0%, #40a9ff 100%)',\n                          border: 'none',\n                          height: '36px',\n                          borderRadius: '6px',\n                          padding: '0 20px',\n                          fontWeight: 500,\n                          fontSize: '12px'\n                        }}\n                      >\n                        Create Script\n                      </Button>\n                    </div>\n                  )\n                ) : (\n                  <div style={{\n                    height: '450px',\n                    display: 'flex',\n                    flexDirection: 'column',\n                    alignItems: 'center',\n                    justifyContent: 'center',\n                    background: 'rgba(255, 255, 255, 0.02)',\n                    border: '1px solid rgba(255, 255, 255, 0.08)',\n                    borderRadius: '8px',\n                    color: '#8c8c8c'\n                  }}>\n                    <div style={{ fontSize: '48px', marginBottom: '16px', opacity: 0.3 }}>\n                      📝\n                    </div>\n                    <Title level={4} style={{ color: '#8c8c8c', marginBottom: '8px', fontSize: '16px' }}>\n                      Create First Scenario\n                    </Title>\n                    <Text style={{ color: '#666', fontSize: '12px', textAlign: 'center', maxWidth: '300px' }}>\n                      Please create a test scenario first to start writing and uploading your Locust scripts\n                    </Text>\n                  </div>\n                )}\n              </Col>\n            </Row>\n          </div>\n        )\n      },\n      {\n        title: 'Load Test Configuration',\n        content: (\n          <div>\n            <Title level={4} style={{ color: '#fff', marginBottom: '20px' }}>Configure Load Test Deployment</Title>\n            \n            {/* 压测机选择 */}\n            <div style={{ marginBottom: '24px' }}>\n              <Title level={5} style={{ color: '#fff', marginBottom: '16px' }}>Select Load Generator</Title>\n              <Row gutter={16}>\n                {loadGenerators.map(lg => (\n                  <Col span={8} key={lg.id}>\n                    <Card\n                      hoverable\n                      style={{ \n                        border: selectedLoadGenerator?.id === lg.id ? '2px solid #1890ff' : '1px solid #555',\n                        cursor: 'pointer',\n                        background: '#333',\n                        borderRadius: '8px'\n                      }}\n                      bodyStyle={{\n                        background: '#333',\n                        color: '#fff',\n                        padding: '16px'\n                      }}\n                      onClick={() => setSelectedLoadGenerator(lg)}\n                    >\n                      <div style={{ textAlign: 'center' }}>\n                        <CloudServerOutlined style={{ fontSize: 24, color: '#1890ff', marginBottom: 8 }} />\n                        <Title level={5} style={{ color: '#fff', margin: '0 0 8px 0' }}>{lg.name}</Title>\n                        <Text style={{ color: '#ccc', display: 'block', marginBottom: '8px' }}>\n                          {lg.host}:{lg.port}\n                        </Text>\n                        <div style={{ fontSize: '12px' }}>\n                          <div style={{ color: lg.status === 'online' ? '#52c41a' : '#ff4d4f', marginBottom: '4px' }}>\n                            Status: {lg.status}\n                          </div>\n                          <div style={{ color: '#8c8c8c' }}>\n                            CPU: {lg.cpu_cores || 'N/A'} | Memory: {lg.memory_gb || 'N/A'}GB\n                          </div>\n                        </div>\n                      </div>\n                    </Card>\n                  </Col>\n                ))}\n              </Row>\n            </div>\n\n            {/* 部署方式选择 */}\n            <div style={{ marginBottom: '24px' }}>\n              <Title level={5} style={{ color: '#fff', marginBottom: '16px' }}>Select Deployment Mode</Title>\n              <Row gutter={16}>\n                <Col span={8}>\n                  <Card\n                    hoverable\n                    style={{ \n                      border: selectedDeploymentConfig?.deployment_mode === 'standalone' ? '2px solid #1890ff' : '1px solid #555',\n                      cursor: 'pointer',\n                      background: '#333',\n                      borderRadius: '8px'\n                    }}\n                    bodyStyle={{\n                      background: '#333',\n                      color: '#fff',\n                      padding: '16px'\n                    }}\n                    onClick={() => setSelectedDeploymentConfig({ \n                      id: 1, \n                      deployment_mode: 'standalone',\n                      name: 'Standalone Mode',\n                      description: 'Single machine deployment'\n                    })}\n                  >\n                    <div style={{ textAlign: 'center' }}>\n                      <SettingOutlined style={{ fontSize: 24, color: '#1890ff', marginBottom: 8 }} />\n                      <Title level={5} style={{ color: '#fff', margin: '0 0 8px 0' }}>Standalone</Title>\n                      <Text style={{ color: '#ccc', fontSize: '12px' }}>\n                        Single machine deployment for small-scale testing\n                      </Text>\n                    </div>\n                  </Card>\n                </Col>\n                <Col span={8}>\n                  <Card\n                    hoverable\n                    style={{ \n                      border: selectedDeploymentConfig?.deployment_mode === 'master-slave-1' ? '2px solid #1890ff' : '1px solid #555',\n                      cursor: 'pointer',\n                      background: '#333',\n                      borderRadius: '8px'\n                    }}\n                    bodyStyle={{\n                      background: '#333',\n                      color: '#fff',\n                      padding: '16px'\n                    }}\n                    onClick={() => setSelectedDeploymentConfig({ \n                      id: 2, \n                      deployment_mode: 'master-slave-1',\n                      name: '1 Master + 1 Slave',\n                      description: 'Distributed testing with 2 machines'\n                    })}\n                  >\n                    <div style={{ textAlign: 'center' }}>\n                      <CloudServerOutlined style={{ fontSize: 24, color: '#1890ff', marginBottom: 8 }} />\n                      <Title level={5} style={{ color: '#fff', margin: '0 0 8px 0' }}>1 Master + 1 Slave</Title>\n                      <Text style={{ color: '#ccc', fontSize: '12px' }}>\n                        Distributed testing with 2 machines\n                      </Text>\n                    </div>\n                  </Card>\n                </Col>\n                <Col span={8}>\n                  <Card\n                    hoverable\n                    style={{ \n                      border: selectedDeploymentConfig?.deployment_mode === 'master-slave-2' ? '2px solid #1890ff' : '1px solid #555',\n                      cursor: 'pointer',\n                      background: '#333',\n                      borderRadius: '8px'\n                    }}\n                    bodyStyle={{\n                      background: '#333',\n                      color: '#fff',\n                      padding: '16px'\n                    }}\n                    onClick={() => setSelectedDeploymentConfig({ \n                      id: 3, \n                      deployment_mode: 'master-slave-2',\n                      name: '1 Master + 2 Slaves',\n                      description: 'High-performance distributed testing'\n                    })}\n                  >\n                    <div style={{ textAlign: 'center' }}>\n                      <CloudServerOutlined style={{ fontSize: 24, color: '#1890ff', marginBottom: 8 }} />\n                      <Title level={5} style={{ color: '#fff', margin: '0 0 8px 0' }}>1 Master + 2 Slaves</Title>\n                      <Text style={{ color: '#ccc', fontSize: '12px' }}>\n                        High-performance distributed testing\n                      </Text>\n                    </div>\n                  </Card>\n                </Col>\n              </Row>\n            </div>\n\n            {/* 部署配置详情 */}\n            {selectedLoadGenerator && selectedDeploymentConfig && (\n              <div style={{ \n                background: '#333', \n                borderRadius: '8px', \n                padding: '20px',\n                border: '1px solid #555'\n              }}>\n                <Title level={5} style={{ color: '#fff', marginBottom: '16px' }}>Deployment Configuration</Title>\n                <Row gutter={16}>\n                  <Col span={12}>\n                    <div style={{ marginBottom: '12px' }}>\n                      <Text style={{ color: '#8c8c8c', fontSize: '12px' }}>Load Generator:</Text>\n                      <div style={{ color: '#fff', fontSize: '14px', fontWeight: 500 }}>\n                        {selectedLoadGenerator.name} ({selectedLoadGenerator.host}:{selectedLoadGenerator.port})\n                      </div>\n                    </div>\n                    <div style={{ marginBottom: '12px' }}>\n                      <Text style={{ color: '#8c8c8c', fontSize: '12px' }}>Deployment Mode:</Text>\n                      <div style={{ color: '#fff', fontSize: '14px', fontWeight: 500 }}>\n                        {selectedDeploymentConfig.name}\n                      </div>\n                    </div>\n                  </Col>\n                  <Col span={12}>\n                    <div style={{ marginBottom: '12px' }}>\n                      <Text style={{ color: '#8c8c8c', fontSize: '12px' }}>Status:</Text>\n                      <div style={{ \n                        color: selectedLoadGenerator.status === 'online' ? '#52c41a' : '#ff4d4f', \n                        fontSize: '14px', \n                        fontWeight: 500 \n                      }}>\n                        {selectedLoadGenerator.status}\n                      </div>\n                    </div>\n                    <div style={{ marginBottom: '12px' }}>\n                      <Text style={{ color: '#8c8c8c', fontSize: '12px' }}>Description:</Text>\n                      <div style={{ color: '#fff', fontSize: '14px' }}>\n                        {selectedDeploymentConfig.description}\n                      </div>\n                    </div>\n                  </Col>\n                </Row>\n              </div>\n            )}\n          </div>\n        )\n      },\n      {\n        title: 'Load Generator Configuration',\n        content: (\n          <div>\n            <Title level={4} style={{ color: '#fff', marginBottom: '20px' }}>Select Load Generator & Configuration</Title>\n            <Row gutter={16}>\n              <Col span={12}>\n                <Title level={5} style={{ color: '#fff', marginBottom: '12px' }}>Load Generators</Title>\n                <Space direction=\"vertical\" style={{ width: '100%' }} size=\"small\">\n                  {loadGenerators.map(lg => (\n                    <Card\n                      key={lg.id}\n                      size=\"small\"\n                      hoverable\n                      style={{ \n                        border: selectedLoadGenerator?.id === lg.id ? '2px solid #1890ff' : '1px solid #555',\n                        cursor: 'pointer',\n                        background: '#333',\n                        borderRadius: '6px'\n                      }}\n                      bodyStyle={{\n                        background: '#333',\n                        color: '#fff',\n                        padding: '12px'\n                      }}\n                      onClick={() => {\n                        setSelectedLoadGenerator(lg);\n                        loadLoadGeneratorConfigs(lg.id);\n                      }}\n                    >\n                      <Space>\n                        <CloudServerOutlined style={{ color: '#1890ff' }} />\n                        <div>\n                          <Text strong style={{ color: '#fff' }}>{lg.name}</Text><br/>\n                          <Text style={{ color: '#ccc' }}>{lg.host}:{lg.port}</Text>\n                        </div>\n                      </Space>\n                    </Card>\n                  ))}\n                </Space>\n              </Col>\n              <Col span={12}>\n                <Title level={5} style={{ color: '#fff', marginBottom: '12px' }}>Configurations</Title>\n                <Space direction=\"vertical\" style={{ width: '100%' }} size=\"small\">\n                  {loadGeneratorConfigs.map(config => (\n                    <Card\n                      key={config.id}\n                      size=\"small\"\n                      hoverable\n                      style={{ \n                        border: selectedConfig?.id === config.id ? '2px solid #1890ff' : '1px solid #555',\n                        cursor: 'pointer',\n                        background: '#333',\n                        borderRadius: '6px'\n                      }}\n                      bodyStyle={{\n                        background: '#333',\n                        color: '#fff',\n                        padding: '12px'\n                      }}\n                      onClick={() => setSelectedConfig(config)}\n                    >\n                      <Space>\n                        <InfoCircleOutlined style={{ color: '#1890ff' }} />\n                        <div>\n                          <Text strong style={{ color: '#fff' }}>{config.config_name}</Text><br/>\n                          <Text style={{ color: '#ccc' }}>CPU: {config.system_cpu_cores} cores, Memory: {config.system_memory_gb}GB</Text>\n                        </div>\n                      </Space>\n                    </Card>\n                  ))}\n                </Space>\n              </Col>\n            </Row>\n          </div>\n        )\n      },\n      {\n        title: 'Execute',\n        content: (\n          <div style={{ textAlign: 'center', padding: '40px 0' }}>\n            <Title level={4} style={{ color: '#fff', marginBottom: '30px' }}>Ready to Execute</Title>\n            <Space direction=\"vertical\" size=\"large\">\n              <div style={{ \n                background: '#333', \n                padding: '20px', \n                borderRadius: '8px',\n                border: '1px solid #555',\n                textAlign: 'left',\n                maxWidth: '400px',\n                margin: '0 auto'\n              }}>\n                <Text style={{ color: '#fff', display: 'block', marginBottom: '8px' }}>\n                  <strong>Strategy:</strong> {selectedStrategy?.name}\n                </Text>\n                <Text style={{ color: '#fff', display: 'block', marginBottom: '8px' }}>\n                  <strong>Load Generator:</strong> {selectedLoadGenerator?.name}\n                </Text>\n                <Text style={{ color: '#fff', display: 'block', marginBottom: '8px' }}>\n                  <strong>Deployment Mode:</strong> {selectedDeploymentConfig?.name}\n                </Text>\n                <Text style={{ color: '#fff', display: 'block' }}>\n                  <strong>Configuration:</strong> {selectedConfig?.config_name}\n                </Text>\n              </div>\n              <Button \n                type=\"primary\" \n                size=\"large\"\n                icon={<PlayCircleOutlined />}\n                onClick={handleExecuteScenario}\n                style={{\n                  height: '48px',\n                  fontSize: '16px',\n                  padding: '0 32px'\n                }}\n              >\n                Execute Test\n              </Button>\n            </Space>\n          </div>\n        )\n      }\n    ];\n\n    return steps[currentStep]?.content;\n  };\n\n  return (\n    <div style={{ \n      padding: '20px', \n      background: 'linear-gradient(135deg, #0f1419 0%, #1a1f2e 100%)',\n      minHeight: '100vh'\n    }}>\n      {/* 页面头部和基本信息 */}\n      <div style={{ \n        marginBottom: '20px',\n        padding: '20px',\n        background: 'rgba(255, 255, 255, 0.02)',\n        borderRadius: '8px',\n        border: '1px solid rgba(255, 255, 255, 0.08)',\n        backdropFilter: 'blur(10px)',\n        boxShadow: '0 4px 16px rgba(0, 0, 0, 0.2)'\n      }}>\n        <div style={{ \n          display: 'flex', \n          alignItems: 'center', \n          gap: '20px', \n          marginBottom: '20px',\n          flexWrap: 'wrap'\n        }}>\n          <Button \n            icon={<ArrowLeftOutlined />}\n            onClick={() => navigate('/test-management')}\n            style={{\n              background: 'rgba(255, 255, 255, 0.05)',\n              border: '1px solid rgba(255, 255, 255, 0.1)',\n              color: '#fff',\n              height: '36px',\n              borderRadius: '6px',\n              flexShrink: 0\n            }}\n          >\n            Back\n          </Button>\n          \n          <div style={{ \n            display: 'flex', \n            alignItems: 'center', \n            gap: '16px',\n            flex: 1,\n            minWidth: 0\n          }}>\n            <div style={{ display: 'flex', alignItems: 'center', gap: '8px' }}>\n              <span style={{ \n                color: '#8c8c8c', \n                fontSize: '12px', \n                fontWeight: 500\n              }}>\n                Task:\n              </span>\n              <Title level={4} style={{ margin: 0, color: '#fff', fontWeight: 600, fontSize: '18px' }}>\n                {testTask.name}\n              </Title>\n            </div>\n            \n            <div style={{ display: 'flex', alignItems: 'center', gap: '8px' }}>\n              <span style={{ \n                color: '#8c8c8c', \n                fontSize: '12px', \n                fontWeight: 500\n              }}>\n                Created:\n              </span>\n              <Text style={{ color: '#fff', fontSize: '14px', fontWeight: 500 }}>\n                {new Date(testTask.created_at).toLocaleString()}\n              </Text>\n            </div>\n            \n            {testTask.description && (\n              <div style={{ \n                display: 'flex', \n                alignItems: 'center', \n                gap: '8px',\n                flex: 1,\n                minWidth: 0\n              }}>\n                <span style={{ \n                  color: '#8c8c8c', \n                  fontSize: '12px', \n                  fontWeight: 500,\n                  flexShrink: 0\n                }}>\n                  Desc:\n                </span>\n                <Text style={{ \n                  color: '#fff', \n                  fontSize: '14px', \n                  lineHeight: '1.4',\n                  overflow: 'hidden',\n                  textOverflow: 'ellipsis',\n                  whiteSpace: 'nowrap'\n                }}>\n                  {testTask.description}\n                </Text>\n              </div>\n            )}\n          </div>\n        </div>\n      </div>\n\n      {/* 测试场景管理区域 */}\n      <Card \n        style={{ \n          marginBottom: '20px',\n          background: 'rgba(255, 255, 255, 0.02)',\n          border: '1px solid rgba(255, 255, 255, 0.08)',\n          borderRadius: '8px',\n          backdropFilter: 'blur(10px)',\n          boxShadow: '0 4px 16px rgba(0, 0, 0, 0.2)'\n        }}\n        headStyle={{\n          background: 'transparent',\n          borderBottom: '1px solid rgba(255, 255, 255, 0.08)',\n          padding: '16px 20px 12px 20px'\n        }}\n        bodyStyle={{\n          background: 'transparent',\n          padding: '0'\n        }}\n      >\n        <Title level={3} style={{ color: '#fff', margin: 0, fontWeight: 600, fontSize: '16px' }}>\n          🎯 Test Scenarios Management\n        </Title>\n        <Row gutter={0} style={{ minHeight: '500px' }}>\n          {/* 左侧场景列表 */}\n          <Col span={4} style={{ \n            borderRight: '1px solid rgba(255, 255, 255, 0.08)', \n            padding: '16px',\n            position: 'sticky', \n            top: 0, \n            alignSelf: 'flex-start',\n            background: 'rgba(255, 255, 255, 0.01)'\n          }}>\n            <div style={{ marginBottom: '16px' }}>\n              <Title level={4} style={{ margin: 0, color: '#fff', fontWeight: 600, fontSize: '14px' }}>\n                📝 Scenarios\n              </Title>\n              <Text style={{ color: '#8c8c8c', fontSize: '11px' }}>\n                Manage your test scenarios\n              </Text>\n            </div>\n            \n            \n            {/* 场景列表 */}\n            <div style={{ marginBottom: '16px' }}>\n              {(testTask.scenarios && testTask.scenarios.length > 0) || scenarios.length > 0 ? (\n                <div>\n                  {/* 显示数据库中的场景 */}\n                  {testTask.scenarios && testTask.scenarios.map((scenario, index) => {\n                    const isExpanded = expandedScenarios.has(scenario.id.toString());\n                    const hasFiles = scenarioFiles[scenario.id] && scenarioFiles[scenario.id].length > 0;\n                    const isCurrentScenario = currentScenario?.id === scenario.id;\n                    \n                    return (\n                      <div key={scenario.id} style={{ marginBottom: '8px' }}>\n                        {/* 场景主项 */}\n                        <div\n                          style={{\n                            padding: '10px 12px',\n                            background: isCurrentScenario \n                              ? 'linear-gradient(135deg, #1890ff 0%, #40a9ff 100%)' \n                              : 'rgba(255, 255, 255, 0.03)',\n                            borderRadius: '6px',\n                            border: isCurrentScenario \n                              ? '1px solid rgba(24, 144, 255, 0.3)' \n                              : '1px solid rgba(255, 255, 255, 0.05)',\n                            position: 'relative',\n                            display: 'flex',\n                            alignItems: 'center',\n                            justifyContent: 'space-between',\n                            cursor: 'pointer',\n                            transition: 'all 0.3s cubic-bezier(0.4, 0, 0.2, 1)',\n                            boxShadow: isCurrentScenario \n                              ? '0 2px 12px rgba(24, 144, 255, 0.2)' \n                              : '0 1px 4px rgba(0, 0, 0, 0.1)'\n                          }}\n                          onClick={() => handleSelectScenario(scenario)}\n                        >\n                          <div style={{ \n                            flex: 1, \n                            display: 'flex', \n                            alignItems: 'center' \n                          }}>\n                            <div style={{\n                              width: '6px',\n                              height: '6px',\n                              borderRadius: '50%',\n                              background: isCurrentScenario ? '#fff' : '#1890ff',\n                              marginRight: '8px'\n                            }} />\n                            <div>\n                              <div style={{ display: 'flex', alignItems: 'center', gap: '6px' }}>\n                                {editingScenarioId === scenario.id.toString() ? (\n                                  <Input\n                                    value={editingScenarioName || ''}\n                                    onChange={(e) => setEditingScenarioName(e.target.value)}\n                                    onPressEnter={() => handleSaveScenarioName(scenario.id.toString())}\n                                    onBlur={() => handleSaveScenarioName(scenario.id.toString())}\n                                    style={{\n                                      fontSize: '12px',\n                                      height: '20px',\n                                      background: 'transparent',\n                                      border: '1px solid #1890ff',\n                                      color: '#fff'\n                                    }}\n                                    autoFocus\n                                  />\n                                ) : (\n                                  <Text \n                                    style={{ \n                                      color: isCurrentScenario ? '#fff' : '#fff',\n                                      fontSize: '12px',\n                                      fontWeight: isCurrentScenario ? 600 : 500,\n                                      cursor: 'pointer'\n                                    }}\n                                    onClick={(e) => {\n                                      e.stopPropagation();\n                                      handleStartEditScenario(scenario);\n                                    }}\n                                  >\n                                    {scenario.interface_name || `Scenario ${index + 1}`}\n                                  </Text>\n                                )}\n                              </div>\n                              <Text \n                                style={{ \n                                  color: isCurrentScenario ? 'rgba(255, 255, 255, 0.8)' : '#8c8c8c',\n                                  fontSize: '10px',\n                                  display: 'block'\n                                }}\n                              >\n                                Database scenario\n                              </Text>\n                            </div>\n                          </div>\n                          <div style={{ display: 'flex', gap: '4px', alignItems: 'center' }}>\n                            {/* 展开/收缩按钮 - 有文件时就显示 */}\n                            {hasFiles && (\n                              <Button\n                                type=\"text\"\n                                size=\"small\"\n                                icon={<DownOutlined />}\n                                onClick={(e) => {\n                                  e.stopPropagation();\n                                  handleToggleScenario(scenario.id.toString());\n                                }}\n                                style={{\n                                  color: isCurrentScenario ? '#fff' : '#a0aec0',\n                                  padding: '2px',\n                                  minWidth: '20px',\n                                  height: '20px',\n                                  borderRadius: '4px',\n                                  background: 'transparent',\n                                  border: 'none',\n                                  transform: isExpanded ? 'rotate(180deg)' : 'rotate(0deg)',\n                                  transition: 'transform 0.2s ease'\n                                }}\n                              />\n                            )}\n                            {/* 删除按钮 - 所有场景都显示 */}\n                            <Button\n                              type=\"text\"\n                              size=\"small\"\n                              icon={<DeleteOutlined />}\n                              onClick={(e) => {\n                                e.stopPropagation();\n                                handleDeleteScenario(scenario.id);\n                              }}\n                              style={{\n                                color: '#ff4d4f',\n                                padding: '2px',\n                                minWidth: '20px',\n                                height: '20px',\n                                borderRadius: '4px',\n                                background: 'rgba(255, 77, 79, 0.1)',\n                                border: '1px solid rgba(255, 77, 79, 0.2)'\n                              }}\n                            />\n                          </div>\n                        </div>\n                        \n                        {/* 展开的文件列表 - 展开时就显示 */}\n                        {isExpanded && hasFiles && (\n                          <div style={{\n                            marginTop: '4px',\n                            marginLeft: '20px',\n                            padding: '8px 12px',\n                            background: 'rgba(255, 255, 255, 0.02)',\n                            borderRadius: '4px',\n                            border: '1px solid rgba(255, 255, 255, 0.05)'\n                          }}>\n                            <Text style={{ \n                              color: '#8c8c8c', \n                              fontSize: '10px', \n                              marginBottom: '6px',\n                              display: 'block'\n                            }}>\n                              Saved Files ({scenarioFiles[scenario.id].length})\n                            </Text>\n                            {scenarioFiles[scenario.id].map((file) => (\n                              <div\n                                key={file.id}\n                                style={{\n                                  display: 'flex',\n                                  alignItems: 'center',\n                                  justifyContent: 'space-between',\n                                  padding: '4px 8px',\n                                  marginBottom: '2px',\n                                  background: 'rgba(255, 255, 255, 0.05)',\n                                  borderRadius: '3px',\n                                  cursor: 'pointer',\n                                  transition: 'all 0.2s ease'\n                                }}\n                                onClick={() => {\n                                  // 加载文件到编辑器\n                                  handleLoadScript(file);\n                                }}\n                              >\n                                <div style={{ display: 'flex', alignItems: 'center', gap: '6px' }}>\n                                  <FileTextOutlined style={{ \n                                    fontSize: '10px', \n                                    color: '#1890ff' \n                                  }} />\n                                  <Text style={{ \n                                    color: '#fff', \n                                    fontSize: '10px',\n                                    maxWidth: '100px',\n                                    overflow: 'hidden',\n                                    textOverflow: 'ellipsis',\n                                    whiteSpace: 'nowrap'\n                                  }}>\n                                    {file.file_name}\n                                  </Text>\n                                </div>\n                                <div style={{ display: 'flex', alignItems: 'center', gap: '4px' }}>\n                                  <Text style={{ \n                                    color: '#8c8c8c', \n                                    fontSize: '9px' \n                                  }}>\n                                    {file.file_size ? `${(file.file_size / 1024).toFixed(1)}KB` : 'N/A'}\n                                  </Text>\n                                </div>\n                              </div>\n                            ))}\n                          </div>\n                        )}\n                      </div>\n                    );\n                  })}\n                  \n                  {/* 显示本地创建的场景 */}\n                  {scenarios.map((scenario, index) => {\n                    const isExpanded = expandedScenarios.has(scenario.id.toString());\n                    const hasFiles = uploadedFiles.length > 0;\n                    const isCurrentScenario = currentScenario?.id === scenario.id;\n                    \n                    return (\n                      <div key={scenario.id} style={{ marginBottom: '8px' }}>\n                        {/* 场景主项 */}\n                        <div\n                          style={{\n                            padding: '10px 12px',\n                            background: isCurrentScenario \n                              ? 'linear-gradient(135deg, #1890ff 0%, #40a9ff 100%)' \n                              : 'rgba(255, 255, 255, 0.03)',\n                            borderRadius: '6px',\n                            border: isCurrentScenario \n                              ? '1px solid rgba(24, 144, 255, 0.3)' \n                              : '1px solid rgba(255, 255, 255, 0.05)',\n                            position: 'relative',\n                            display: 'flex',\n                            alignItems: 'center',\n                            justifyContent: 'space-between',\n                            cursor: 'pointer',\n                            transition: 'all 0.3s cubic-bezier(0.4, 0, 0.2, 1)',\n                            boxShadow: isCurrentScenario \n                              ? '0 2px 12px rgba(24, 144, 255, 0.2)' \n                              : '0 1px 4px rgba(0, 0, 0, 0.1)'\n                          }}\n                          onClick={() => handleSelectScenario(scenario)}\n                        >\n                          <div style={{ \n                            flex: 1, \n                            display: 'flex', \n                            alignItems: 'center' \n                          }}>\n                            <div style={{\n                              width: '6px',\n                              height: '6px',\n                              borderRadius: '50%',\n                              background: isCurrentScenario ? '#fff' : '#52c41a',\n                              marginRight: '8px'\n                            }} />\n                            <div>\n                              <div style={{ display: 'flex', alignItems: 'center', gap: '6px' }}>\n                                {editingScenarioId === scenario.id.toString() ? (\n                                  <Input\n                                    value={editingScenarioName || ''}\n                                    onChange={(e) => setEditingScenarioName(e.target.value)}\n                                    onPressEnter={() => handleSaveScenarioName(scenario.id.toString())}\n                                    onBlur={() => handleSaveScenarioName(scenario.id.toString())}\n                                    style={{\n                                      fontSize: '12px',\n                                      height: '20px',\n                                      background: 'transparent',\n                                      border: '1px solid #1890ff',\n                                      color: '#fff'\n                                    }}\n                                    autoFocus\n                                  />\n                                ) : (\n                                  <Text \n                                    style={{ \n                                      color: isCurrentScenario ? '#fff' : '#fff',\n                                      fontSize: '12px',\n                                      fontWeight: isCurrentScenario ? 600 : 500,\n                                      cursor: 'pointer'\n                                    }}\n                                    onClick={(e) => {\n                                      e.stopPropagation();\n                                      handleStartEditScenario(scenario);\n                                    }}\n                                  >\n                                    {scenario.name}\n                                  </Text>\n                                )}\n                                {scenario.isNew && (\n                                  <div style={{\n                                    padding: '1px 4px',\n                                    background: '#52c41a',\n                                    borderRadius: '3px',\n                                    fontSize: '8px',\n                                    color: '#fff',\n                                    fontWeight: 500\n                                  }}>\n                                    NEW\n                                  </div>\n                                )}\n                              </div>\n                            </div>\n                          </div>\n                          <div style={{ display: 'flex', gap: '4px', alignItems: 'center' }}>\n                            {/* 展开/收缩按钮 - 有文件时就显示 */}\n                            {hasFiles && (\n                              <Button\n                                type=\"text\"\n                                size=\"small\"\n                                icon={<DownOutlined />}\n                                onClick={(e) => {\n                                  e.stopPropagation();\n                                  handleToggleScenario(scenario.id.toString());\n                                }}\n                                style={{\n                                  color: isCurrentScenario ? '#fff' : '#a0aec0',\n                                  padding: '2px',\n                                  minWidth: '20px',\n                                  height: '20px',\n                                  borderRadius: '4px',\n                                  background: 'transparent',\n                                  border: 'none',\n                                  transform: isExpanded ? 'rotate(180deg)' : 'rotate(0deg)',\n                                  transition: 'transform 0.2s ease'\n                                }}\n                              />\n                            )}\n                            {/* 保存按钮 - 只有新建的场景才显示 */}\n                            {scenario.isNew && (\n                              <Button\n                                type=\"text\"\n                                size=\"small\"\n                                icon={<SaveOutlined />}\n                                onClick={(e) => {\n                                  e.stopPropagation();\n                                  handleSaveScenario();\n                                }}\n                                style={{\n                                  color: '#52c41a',\n                                  padding: '2px',\n                                  minWidth: '20px',\n                                  height: '20px',\n                                  borderRadius: '4px',\n                                  background: 'rgba(82, 196, 26, 0.1)',\n                                  border: '1px solid rgba(82, 196, 26, 0.2)',\n                                  fontSize: '10px'\n                                }}\n                              />\n                            )}\n                            {/* 删除按钮 - 所有场景都显示 */}\n                            <Button\n                              type=\"text\"\n                              size=\"small\"\n                              icon={<DeleteOutlined />}\n                              onClick={(e) => {\n                                e.stopPropagation();\n                                handleDeleteScenario(scenario.id);\n                              }}\n                              style={{\n                                color: '#ff4d4f',\n                                padding: '2px',\n                                minWidth: '20px',\n                                height: '20px',\n                                borderRadius: '4px',\n                                background: 'rgba(255, 77, 79, 0.1)',\n                                border: '1px solid rgba(255, 77, 79, 0.2)'\n                              }}\n                            />\n                          </div>\n                        </div>\n                        \n                        {/* 展开的文件列表 - 展开时就显示 */}\n                        {isExpanded && hasFiles && (\n                          <div style={{\n                            marginTop: '4px',\n                            marginLeft: '20px',\n                            padding: '8px 12px',\n                            background: 'rgba(255, 255, 255, 0.02)',\n                            borderRadius: '4px',\n                            border: '1px solid rgba(255, 255, 255, 0.05)'\n                          }}>\n                            <Text style={{ \n                              color: '#8c8c8c', \n                              fontSize: '10px', \n                              marginBottom: '6px',\n                              display: 'block'\n                            }}>\n                              Uploaded Files ({uploadedFiles.length})\n                            </Text>\n                            {uploadedFiles.map((fileData) => (\n                              <div\n                                key={fileData.id}\n                                style={{\n                                  display: 'flex',\n                                  alignItems: 'center',\n                                  justifyContent: 'space-between',\n                                  padding: '4px 8px',\n                                  marginBottom: '2px',\n                                  background: selectedFileId === fileData.id \n                                    ? 'rgba(24, 144, 255, 0.1)' \n                                    : 'transparent',\n                                  borderRadius: '3px',\n                                  cursor: 'pointer',\n                                  transition: 'all 0.2s ease'\n                                }}\n                                onClick={() => handleFileSelect(fileData.id)}\n                              >\n                                <div style={{ display: 'flex', alignItems: 'center', gap: '6px' }}>\n                                  <FileTextOutlined style={{ \n                                    fontSize: '10px', \n                                    color: '#1890ff' \n                                  }} />\n                                  <Text style={{ \n                                    color: '#fff', \n                                    fontSize: '10px',\n                                    maxWidth: '100px',\n                                    overflow: 'hidden',\n                                    textOverflow: 'ellipsis',\n                                    whiteSpace: 'nowrap'\n                                  }}>\n                                    {fileData.file.name}\n                                  </Text>\n                                </div>\n                                <div style={{ display: 'flex', alignItems: 'center', gap: '4px' }}>\n                                  <Text style={{ \n                                    color: '#8c8c8c', \n                                    fontSize: '9px' \n                                  }}>\n                                    {(fileData.file.size / 1024).toFixed(1)}KB\n                                  </Text>\n                                  <Button\n                                    type=\"text\"\n                                    size=\"small\"\n                                    icon={<DeleteOutlined />}\n                                    onClick={(e) => {\n                                      e.stopPropagation();\n                                      handleFileDelete(fileData.id);\n                                    }}\n                                    style={{\n                                      color: '#ff4d4f',\n                                      padding: '1px',\n                                      minWidth: '16px',\n                                      height: '16px',\n                                      borderRadius: '2px',\n                                      background: 'rgba(255, 77, 79, 0.1)',\n                                      border: '1px solid rgba(255, 77, 79, 0.2)',\n                                      fontSize: '8px'\n                                    }}\n                                  />\n                                </div>\n                              </div>\n                            ))}\n                          </div>\n                        )}\n                      </div>\n                    );\n                  })}\n                </div>\n              ) : (\n                <div style={{ \n                  textAlign: 'center', \n                  padding: '20px 12px',\n                  color: '#8c8c8c',\n                  fontSize: '12px'\n                }}>\n                  <div style={{ \n                    fontSize: '32px', \n                    marginBottom: '8px',\n                    opacity: 0.5\n                  }}>\n                    📝\n                  </div>\n                  <div>No scenarios created yet</div>\n                  <div style={{ fontSize: '10px', marginTop: '2px' }}>\n                    Create your first scenario to get started\n                  </div>\n                </div>\n              )}\n            </div>\n            \n            {/* 创建场景按钮 */}\n            <div style={{ marginTop: '12px' }}>\n              <Button \n                type=\"primary\"\n                icon={<PlayCircleOutlined />}\n                onClick={handleCreateScenario}\n                style={{\n                  width: '100%',\n                  height: '36px',\n                  background: 'linear-gradient(135deg, #1890ff 0%, #40a9ff 100%)',\n                  border: 'none',\n                  borderRadius: '6px',\n                  fontWeight: 500,\n                  fontSize: '12px'\n                }}\n              >\n                Create New Scenario\n              </Button>\n            </div>\n          </Col>\n\n          {/* 右侧场景创建和配置区域 */}\n          <Col span={20} style={{ padding: '16px' }}>\n            <div style={{ \n              maxHeight: '60vh', \n              overflowY: 'auto', \n              paddingRight: '8px',\n              background: 'rgba(255, 255, 255, 0.01)',\n              borderRadius: '8px',\n              padding: '16px'\n            }}>\n              {/* 顶部步骤指示器 */}\n              <div style={{ \n                background: 'rgba(255, 255, 255, 0.03)', \n                padding: '12px 16px', \n                borderRadius: '6px', \n                marginBottom: '16px',\n                border: '1px solid rgba(255, 255, 255, 0.08)',\n                backdropFilter: 'blur(10px)'\n              }}>\n           <Steps \n             current={currentStep} \n             onChange={(v) => setCurrentStep(v)}\n             size=\"small\"\n           >\n             <Step title=\"Script Upload\" />\n             <Step title=\"Load Test Config\" />\n             <Step title=\"Load Generator\" />\n             <Step title=\"Execute\" />\n           </Steps>\n              </div>\n\n              {/* 主要内容区域 */}\n              <div style={{ \n                minHeight: '350px', \n                background: 'rgba(255, 255, 255, 0.02)',\n                borderRadius: '8px',\n                border: '1px solid rgba(255, 255, 255, 0.08)',\n                padding: '20px',\n                backdropFilter: 'blur(10px)'\n              }}>\n              {currentScenario ? (\n                <div>\n                  \n                  {/* 步骤内容 */}\n                  <div style={{ minHeight: 200 }}>\n                    {renderScenarioSteps()}\n                  </div>\n                  \n                  {/* 操作按钮 */}\n                  <div style={{ \n                    textAlign: 'right', \n                    marginTop: '20px', \n                    borderTop: '1px solid rgba(255, 255, 255, 0.08)', \n                    paddingTop: '16px' \n                  }}>\n                    {currentStep === 3 && (\n                      <Button \n                        type=\"primary\" \n                        onClick={handleExecuteScenario}\n                        disabled={!selectedStrategy || !selectedLoadGenerator || !selectedDeploymentConfig || !selectedConfig}\n                        style={{\n                          background: 'linear-gradient(135deg, #52c41a 0%, #73d13d 100%)',\n                          border: 'none',\n                          height: '36px',\n                          borderRadius: '6px',\n                          padding: '0 20px',\n                          fontWeight: 500,\n                          fontSize: '12px'\n                        }}\n                      >\n                        Execute Test\n                      </Button>\n                    )}\n                  </div>\n                </div>\n              ) : (\n                <div style={{ \n                  display: 'flex', \n                  alignItems: 'center', \n                  justifyContent: 'center',\n                  height: '250px',\n                  textAlign: 'center'\n                }}>\n                  <div>\n                    <div style={{ \n                      fontSize: '48px', \n                      marginBottom: '16px',\n                      opacity: 0.3\n                    }}>\n                      🎯\n                    </div>\n                    <Title level={4} style={{ color: '#fff', marginBottom: '4px', fontSize: '16px' }}>\n                      {scenarios.length > 0 ? 'Select a scenario to configure' : 'No scenarios created yet'}\n                    </Title>\n                    <Text style={{ color: '#8c8c8c', fontSize: '12px', display: 'block', marginBottom: '16px' }}>\n                      {scenarios.length > 0 \n                        ? 'Choose a scenario from the left panel to start configuration'\n                        : 'Create your first test scenario to get started with performance testing'\n                      }\n                    </Text>\n                    <Button \n                      type=\"primary\" \n                      size=\"large\"\n                      onClick={handleCreateScenario}\n                      style={{\n                        background: 'linear-gradient(135deg, #1890ff 0%, #40a9ff 100%)',\n                        border: 'none',\n                        height: '36px',\n                        borderRadius: '6px',\n                        padding: '0 20px',\n                        fontWeight: 500,\n                        fontSize: '12px'\n                      }}\n                    >\n                      {scenarios.length > 0 ? 'Create New Scenario' : 'Create Your First Scenario'}\n                    </Button>\n                  </div>\n                </div>\n              )}\n              </div>\n            </div>\n          </Col>\n        </Row>\n      </Card>\n\n      {/* 执行记录 */}\n      <Card \n        style={{ \n          background: 'rgba(255, 255, 255, 0.02)',\n          border: '1px solid rgba(255, 255, 255, 0.08)',\n          borderRadius: '8px',\n          backdropFilter: 'blur(10px)',\n          boxShadow: '0 4px 16px rgba(0, 0, 0, 0.2)'\n        }}\n        headStyle={{\n          background: 'transparent',\n          borderBottom: '1px solid rgba(255, 255, 255, 0.08)',\n          padding: '16px 20px 12px 20px'\n        }}\n        bodyStyle={{\n          background: 'transparent',\n          padding: '16px 20px'\n        }}\n      >\n        <Title level={3} style={{ color: '#fff', margin: 0, fontWeight: 600, fontSize: '16px' }}>\n          📊 Execution History\n        </Title>\n        <div style={{ marginTop: '12px' }}>\n          <Table\n            columns={executionColumns}\n            dataSource={executions}\n            rowKey=\"id\"\n            pagination={{\n              showSizeChanger: true,\n              showQuickJumper: true,\n              showTotal: (total) => `Total ${total} records`,\n              style: {\n                color: '#fff'\n              }\n            }}\n            style={{\n              background: 'transparent'\n            }}\n            className=\"custom-table\"\n          />\n        </div>\n      </Card>\n\n\n      {/* 脚本编辑器模态框 */}\n      <Modal\n        title=\"Script Editor\"\n        open={editorModalVisible}\n        onCancel={() => setEditorModalVisible(false)}\n        footer={null}\n        width={1000}\n        style={{ top: 20 }}\n      >\n        <div style={{ marginBottom: 16 }}>\n          <Text>Edit your Locust script below:</Text>\n        </div>\n        <Input.TextArea\n          value={editorContent}\n          onChange={(e) => handleContentUpdate(e.target.value)}\n          placeholder=\"Enter your Locust script here...\"\n          rows={20}\n          style={{ fontFamily: 'monospace' }}\n        />\n        <div style={{ textAlign: 'right', marginTop: 16 }}>\n          <Space>\n            <Button onClick={() => setEditorModalVisible(false)}>\n              Cancel\n            </Button>\n            <Button type=\"primary\" onClick={handleEditorSave}>\n              Save Script\n            </Button>\n          </Space>\n        </div>\n      </Modal>\n\n      {/* 创建执行模态框 */}\n      <Modal\n        title=\"Create Test Execution\"\n        open={executionModalVisible}\n        onCancel={() => setExecutionModalVisible(false)}\n        footer={null}\n        width={600}\n      >\n        <Form\n          layout=\"vertical\"\n          onFinish={handleCreateExecution}\n        >\n          <Form.Item\n            name=\"strategy_id\"\n            label=\"Test Strategy\"\n            rules={[{ required: true, message: 'Please select test strategy' }]}\n          >\n            <Select placeholder=\"Select test strategy\">\n              {strategies.map(strategy => (\n                <Select.Option key={strategy.id} value={strategy.id}>\n                  {strategy.name} ({strategy.strategy_type})\n                </Select.Option>\n              ))}\n            </Select>\n          </Form.Item>\n          \n          <Form.Item\n            name=\"load_generator_id\"\n            label=\"Load Generator\"\n            rules={[{ required: true, message: 'Please select load generator' }]}\n          >\n            <Select \n              placeholder=\"Select load generator\"\n              onChange={(value) => loadLoadGeneratorConfigs(value)}\n            >\n              {loadGenerators.map(lg => (\n                <Select.Option key={lg.id} value={lg.id}>\n                  {lg.name} ({lg.host})\n                </Select.Option>\n              ))}\n            </Select>\n          </Form.Item>\n          \n          <Form.Item\n            name=\"load_generator_config_id\"\n            label=\"Load Generator Config\"\n            rules={[{ required: true, message: 'Please select load generator config' }]}\n          >\n            <Select placeholder=\"Select load generator config\">\n              {loadGeneratorConfigs.map(config => (\n                <Select.Option key={config.id} value={config.id}>\n                  {config.config_name}\n                </Select.Option>\n              ))}\n            </Select>\n          </Form.Item>\n          \n          <Form.Item\n            name=\"execution_name\"\n            label=\"Execution Name\"\n          >\n            <Input placeholder=\"Enter execution name (optional)\" />\n          </Form.Item>\n          \n          <Form.Item>\n            <Space>\n              <Button type=\"primary\" htmlType=\"submit\">\n                Create Execution\n              </Button>\n              <Button onClick={() => setExecutionModalVisible(false)}>\n                Cancel\n              </Button>\n            </Space>\n          </Form.Item>\n        </Form>\n      </Modal>\n    </div>\n  );\n};\n\n// 使用 React.memo 优化组件性能，避免不必要的重渲染\nexport default React.memo(TestTaskDetail);\n"],"names":["api","axios","create","baseURL","timeout","headers","interceptors","request","use","config","token","localStorage","getItem","Authorization","concat","error","Promise","reject","response","data","status","removeItem","window","location","href","Error","message","loadGeneratorService","getLoadGenerators","params","get","getLoadGenerator","id","createLoadGenerator","post","updateLoadGenerator","put","deleteLoadGenerator","delete","testConnection","getConfigs","createConfig","updateConfig","deleteConfig","validateConfig","testTaskService","getTestTasks","getTestTask","createTestTask","updateTestTask","deleteTestTask","getExecutions","taskId","testStrategyService","getTestStrategies","getTestStrategy","createTestStrategy","updateTestStrategy","deleteTestStrategy","testScenarioService","getTestScenariosByTask","getTestScenario","createTestScenario","updateTestScenario","deleteTestScenario","getScenarioFiles","scenarioId","uploadScenarioFile","formData","testExecutionService","getTestExecutions","getTestExecution","createTestExecution","updateTestExecution","startTestExecution","stopTestExecution","deleteTestExecution","heartbeatService","getHeartbeatStatus","checkAllHeartbeats","checkAllHeartbeatsAsync","getTaskStatus","Text","Typography","_ref","value","onChange","onSave","fileName","readOnly","height","editorValue","setEditorValue","useState","isValidating","setIsValidating","validationResult","setValidationResult","isDirty","setIsDirty","editorRef","useRef","useEffect","monaco","register","setMonarchTokensProvider","tokenizer","root","string","string_single","defineTheme","base","inherit","rules","foreground","fontStyle","colors","setTheme","uploadProps","beforeUpload","file","reader","FileReader","onload","e","_e$target","content","target","result","success","name","readAsText","accept","showUploadList","multiple","_jsx","Card","title","_jsxs","Space","children","FileTextOutlined","strong","type","style","background","border","bodyStyle","padding","Row","gutter","Col","span","wrap","Upload","_objectSpread","Button","icon","UploadOutlined","color","CheckCircleOutlined","onClick","async","trim","errors","lines","code","split","i","length","line","lineNumber","startsWith","includes","endsWith","openParens","match","closeParens","openBrackets","closeBrackets","openBraces","closeBraces","push","column","singleQuotes","doubleQuotes","isValid","validatePythonSyntax","warning","loading","SaveOutlined","handleSave","disabled","size","ExclamationCircleOutlined","marginTop","map","index","fontSize","borderRadius","overflow","Editor","language","newValue","onMount","editor","current","updateOptions","fontFamily","lineNumbers","roundedSelection","scrollBeyondLastLine","automaticLayout","minimap","enabled","wordWrap","tabSize","insertSpaces","detectIndentation","cursorBlinking","cursorStyle","renderLineHighlight","selectionHighlight","occurrencesHighlight","bracketPairColorization","options","theme","Title","Step","Steps","Panel","Collapse","TestTaskDetail","useParams","navigate","useNavigate","testTask","setTestTask","executions","setExecutions","strategies","setStrategies","loadGenerators","setLoadGenerators","loadGeneratorConfigs","setLoadGeneratorConfigs","setLoading","scenarioModalVisible","setScenarioModalVisible","executionModalVisible","setExecutionModalVisible","editorModalVisible","setEditorModalVisible","currentStep","setCurrentStep","scenarioForm","Form","useForm","executionForm","selectedStrategy","setSelectedStrategy","selectedLoadGenerator","setSelectedLoadGenerator","selectedDeploymentConfig","setSelectedDeploymentConfig","selectedConfig","setSelectedConfig","uploadedFiles","setUploadedFiles","selectedFileId","setSelectedFileId","expandedScenarios","setExpandedScenarios","Set","editorContent","setEditorContent","isCreatingScenario","setIsCreatingScenario","currentScenario","setCurrentScenario","scenarios","setScenarios","editingScenarioId","setEditingScenarioId","editingScenarioName","setEditingScenarioName","scriptContent","setScriptContent","currentScriptFileName","setCurrentScriptFileName","scenarioFiles","setScenarioFiles","forceEditorForEmptyScenario","setForceEditorForEmptyScenario","fetchTestTask","fetchExecutions","fetchStrategies","fetchLoadGenerators","handleLoadScript","useCallback","fetch","ok","text","file_name","console","files","scriptFile","find","is_script","handleCreateDefaultScript","parseInt","filesMap","scenario","firstScenario","loadLoadGeneratorConfigs","configs","loadGeneratorId","handleCreateScenario","newScenario","Date","now","interface_name","interface_url","method","weight","body","isNew","handleSelectScenario","handleSaveScenario","scenarioData","task_id","order","savedScenario","s","updatedScenario","handleDeleteScenario","_testTask$scenarios","localScenario","dbScenario","filter","handleToggleScenario","prev","newSet","has","add","handleStartEditScenario","toString","handleSaveScenarioName","_testTask$scenarios2","handleScriptSave","File","FormData","append","uploadedFile","handleExecuteScenario","executionData","strategy_id","load_generator_id","load_generator_config_id","execution_name","toLocaleString","executionColumns","dataIndex","key","render","pending","running","completed","failed","cancelled","Tag","getStatusTag","time","toFixed","rps","rate","date","_","record","PlayCircleOutlined","then","catch","danger","PauseCircleOutlined","reason","ReloadOutlined","latestExecution","total_requests","total_failures","minHeight","marginBottom","backdropFilter","boxShadow","display","alignItems","gap","flexWrap","ArrowLeftOutlined","flexShrink","flex","minWidth","fontWeight","level","margin","created_at","description","lineHeight","textOverflow","whiteSpace","headStyle","borderBottom","borderRight","position","top","alignSelf","isExpanded","hasFiles","isCurrentScenario","justifyContent","cursor","transition","width","marginRight","Input","onPressEnter","onBlur","autoFocus","stopPropagation","DownOutlined","transform","DeleteOutlined","marginLeft","maxWidth","file_size","fileData","fileId","selectedFile","f","handleFileSelect","remainingFiles","newSelectedId","handleFileDelete","textAlign","opacity","maxHeight","overflowY","paddingRight","v","renderScenarioSteps","_scenarioFiles$curren","_steps$currentStep","ScriptEditor","flexDirection","lg","hoverable","CloudServerOutlined","host","port","cpu_cores","memory_gb","deployment_mode","SettingOutlined","direction","InfoCircleOutlined","config_name","system_cpu_cores","system_memory_gb","borderTop","paddingTop","Table","columns","dataSource","rowKey","pagination","showSizeChanger","showQuickJumper","showTotal","total","className","Modal","open","onCancel","footer","TextArea","handleContentUpdate","placeholder","rows","handleEditorSave","layout","onFinish","values","Item","label","required","Select","strategy","Option","strategy_type","htmlType","React"],"sourceRoot":""}