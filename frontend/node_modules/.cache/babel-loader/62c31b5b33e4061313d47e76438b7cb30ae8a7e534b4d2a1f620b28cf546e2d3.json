{"ast":null,"code":"import React,{useState,useEffect}from'react';import{Card,Table,Button,Space,Tag,Modal,Form,Input,Select,message,Popconfirm,Tabs,Row,Col,Statistic,Typography}from'antd';import{PlusOutlined,EditOutlined,DeleteOutlined,PlayCircleOutlined,StopOutlined,EyeOutlined,SettingOutlined,FileTextOutlined,ThunderboltOutlined}from'@ant-design/icons';import{useNavigate}from'react-router-dom';import{testTaskService,testStrategyService,testExecutionService,loadGeneratorService}from'../services/api';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const{Title,Text}=Typography;const{TabPane}=Tabs;const{Option}=Select;const TestTaskManagement=()=>{const navigate=useNavigate();const[loading,setLoading]=useState(false);const[tasks,setTasks]=useState([]);const[strategies,setStrategies]=useState([]);const[executions,setExecutions]=useState([]);const[loadGenerators,setLoadGenerators]=useState([]);const[loadGeneratorConfigs,setLoadGeneratorConfigs]=useState([]);// 模态框状态\nconst[taskModalVisible,setTaskModalVisible]=useState(false);const[strategyModalVisible,setStrategyModalVisible]=useState(false);const[executionModalVisible,setExecutionModalVisible]=useState(false);const[selectedTask,setSelectedTask]=useState(null);const[selectedStrategy,setSelectedStrategy]=useState(null);// 表单实例\nconst[taskForm]=Form.useForm();const[strategyForm]=Form.useForm();const[executionForm]=Form.useForm();// 加载数据\nuseEffect(()=>{loadData();},[]);const loadData=async()=>{setLoading(true);try{const[tasksData,strategiesData,executionsData,loadGeneratorsData]=await Promise.all([testTaskService.getTestTasks(),testStrategyService.getTestStrategies(),testExecutionService.getTestExecutions(),loadGeneratorService.getLoadGenerators()]);setTasks(tasksData);setStrategies(strategiesData);setExecutions(executionsData);setLoadGenerators(loadGeneratorsData);}catch(error){message.error('Failed to load data');}finally{setLoading(false);}};// 加载压力机配置\nconst loadLoadGeneratorConfigs=async loadGeneratorId=>{try{const configs=await loadGeneratorService.getConfigs(loadGeneratorId);setLoadGeneratorConfigs(configs);}catch(error){message.error('Failed to load load generator configs');}};// 创建测试任务\nconst handleCreateTask=async values=>{try{await testTaskService.createTestTask(values);message.success('Test task created successfully');setTaskModalVisible(false);taskForm.resetFields();loadData();}catch(error){message.error('Failed to create test task');}};// 创建测试策略\nconst handleCreateStrategy=async values=>{try{await testStrategyService.createTestStrategy(values);message.success('Test strategy created successfully');setStrategyModalVisible(false);strategyForm.resetFields();loadData();}catch(error){message.error('Failed to create test strategy');}};// 创建测试执行\nconst handleCreateExecution=async values=>{try{const executionData={task_id:values.task_id,strategy_id:values.strategy_id,load_generator_id:values.load_generator_id,load_generator_config_id:values.load_generator_config_id,execution_name:values.execution_name||\"Execution_\".concat(new Date().toLocaleString())};await testExecutionService.createTestExecution(executionData);message.success('Test execution created successfully');setExecutionModalVisible(false);executionForm.resetFields();loadData();}catch(error){message.error('Failed to create test execution');}};// 启动测试执行\nconst handleStartExecution=async executionId=>{try{await testExecutionService.startTestExecution(executionId);message.success('Test execution started');loadData();}catch(error){message.error('Failed to start test execution');}};// 停止测试执行\nconst handleStopExecution=async executionId=>{try{await testExecutionService.stopTestExecution(executionId,{reason:'Manual stop'});message.success('Test execution stopped');loadData();}catch(error){message.error('Failed to stop test execution');}};// 删除测试任务\nconst handleDeleteTask=async taskId=>{try{await testTaskService.deleteTestTask(taskId);message.success('Test task deleted successfully');loadData();}catch(error){message.error('Failed to delete test task');}};// 删除测试策略\nconst handleDeleteStrategy=async strategyId=>{try{await testStrategyService.deleteTestStrategy(strategyId);message.success('Test strategy deleted successfully');loadData();}catch(error){message.error('Failed to delete test strategy');}};// 表格列定义\nconst taskColumns=[{title:'Task Name',dataIndex:'name',key:'name',render:(text,record)=>/*#__PURE__*/_jsx(Button,{type:\"link\",onClick:()=>navigate(\"/test-tasks/\".concat(record.id)),children:text})},{title:'Scenario Type',dataIndex:'scenario_type',key:'scenario_type',render:type=>/*#__PURE__*/_jsx(Tag,{color:type==='single'?'blue':'green',children:type==='single'?'Single Interface':'Multi Interface'})},{title:'Target Host',dataIndex:'target_host',key:'target_host'},{title:'Created At',dataIndex:'created_at',key:'created_at',render:date=>new Date(date).toLocaleString()},{title:'Actions',key:'action',render:(_,record)=>/*#__PURE__*/_jsxs(Space,{children:[/*#__PURE__*/_jsx(Button,{type:\"primary\",size:\"small\",icon:/*#__PURE__*/_jsx(PlayCircleOutlined,{}),onClick:()=>{setSelectedTask(record);setExecutionModalVisible(true);},children:\"Execute\"}),/*#__PURE__*/_jsx(Button,{size:\"small\",icon:/*#__PURE__*/_jsx(EditOutlined,{}),onClick:()=>{setSelectedTask(record);taskForm.setFieldsValue(record);setTaskModalVisible(true);},children:\"Edit\"}),/*#__PURE__*/_jsx(Popconfirm,{title:\"Are you sure you want to delete this test task?\",onConfirm:()=>handleDeleteTask(record.id),children:/*#__PURE__*/_jsx(Button,{size:\"small\",danger:true,icon:/*#__PURE__*/_jsx(DeleteOutlined,{}),children:\"Delete\"})})]})}];const strategyColumns=[{title:'Strategy Name',dataIndex:'name',key:'name'},{title:'Strategy Type',dataIndex:'strategy_type',key:'strategy_type',render:type=>/*#__PURE__*/_jsx(Tag,{color:type==='linear'?'blue':type==='step'?'green':'orange',children:type==='linear'?'Linear':type==='step'?'Step':'Adaptive'})},{title:'User Count',dataIndex:'user_count',key:'user_count'},{title:'Spawn Rate',dataIndex:'spawn_rate',key:'spawn_rate'},{title:'Run Time',dataIndex:'run_time',key:'run_time',render:time=>\"\".concat(time,\"s\")},{title:'Actions',key:'action',render:(_,record)=>/*#__PURE__*/_jsxs(Space,{children:[/*#__PURE__*/_jsx(Button,{size:\"small\",icon:/*#__PURE__*/_jsx(EditOutlined,{}),onClick:()=>{setSelectedStrategy(record);strategyForm.setFieldsValue(record);setStrategyModalVisible(true);},children:\"Edit\"}),/*#__PURE__*/_jsx(Popconfirm,{title:\"Are you sure you want to delete this test strategy?\",onConfirm:()=>handleDeleteStrategy(record.id),children:/*#__PURE__*/_jsx(Button,{size:\"small\",danger:true,icon:/*#__PURE__*/_jsx(DeleteOutlined,{}),children:\"Delete\"})})]})}];const executionColumns=[{title:'Execution Name',dataIndex:'execution_name',key:'execution_name'},{title:'Task ID',dataIndex:'task_id',key:'task_id'},{title:'Status',dataIndex:'status',key:'status',render:status=>{const colorMap={pending:'default',running:'processing',completed:'success',failed:'error',cancelled:'warning'};return/*#__PURE__*/_jsx(Tag,{color:colorMap[status],children:status});}},{title:'Total Requests',dataIndex:'total_requests',key:'total_requests'},{title:'Error Rate',dataIndex:'error_rate',key:'error_rate',render:rate=>\"\".concat(rate.toFixed(2),\"%\")},{title:'Created At',dataIndex:'created_at',key:'created_at',render:date=>new Date(date).toLocaleString()},{title:'Actions',key:'action',render:(_,record)=>/*#__PURE__*/_jsxs(Space,{children:[record.status==='pending'&&/*#__PURE__*/_jsx(Button,{type:\"primary\",size:\"small\",icon:/*#__PURE__*/_jsx(PlayCircleOutlined,{}),onClick:()=>handleStartExecution(record.id),children:\"Start\"}),record.status==='running'&&/*#__PURE__*/_jsx(Button,{size:\"small\",danger:true,icon:/*#__PURE__*/_jsx(StopOutlined,{}),onClick:()=>handleStopExecution(record.id),children:\"Stop\"}),/*#__PURE__*/_jsx(Button,{size:\"small\",icon:/*#__PURE__*/_jsx(EyeOutlined,{}),onClick:()=>navigate(\"/test-executions/\".concat(record.id)),children:\"View\"})]})}];// 统计数据\nconst stats={totalTasks:tasks.length,totalStrategies:strategies.length,totalExecutions:executions.length,runningExecutions:executions.filter(e=>e.status==='running').length};return/*#__PURE__*/_jsxs(\"div\",{style:{padding:'24px'},children:[/*#__PURE__*/_jsx(Title,{level:2,children:\"Test Management\"}),/*#__PURE__*/_jsxs(Row,{gutter:16,style:{marginBottom:'24px'},children:[/*#__PURE__*/_jsx(Col,{span:6,children:/*#__PURE__*/_jsx(Card,{children:/*#__PURE__*/_jsx(Statistic,{title:\"Test Tasks\",value:stats.totalTasks,prefix:/*#__PURE__*/_jsx(FileTextOutlined,{}),valueStyle:{color:'#1890ff'}})})}),/*#__PURE__*/_jsx(Col,{span:6,children:/*#__PURE__*/_jsx(Card,{children:/*#__PURE__*/_jsx(Statistic,{title:\"Test Strategies\",value:stats.totalStrategies,prefix:/*#__PURE__*/_jsx(SettingOutlined,{}),valueStyle:{color:'#52c41a'}})})}),/*#__PURE__*/_jsx(Col,{span:6,children:/*#__PURE__*/_jsx(Card,{children:/*#__PURE__*/_jsx(Statistic,{title:\"Executions\",value:stats.totalExecutions,prefix:/*#__PURE__*/_jsx(ThunderboltOutlined,{}),valueStyle:{color:'#faad14'}})})}),/*#__PURE__*/_jsx(Col,{span:6,children:/*#__PURE__*/_jsx(Card,{children:/*#__PURE__*/_jsx(Statistic,{title:\"Running\",value:stats.runningExecutions,prefix:/*#__PURE__*/_jsx(PlayCircleOutlined,{}),valueStyle:{color:'#f5222d'}})})})]}),/*#__PURE__*/_jsx(Card,{children:/*#__PURE__*/_jsxs(Tabs,{defaultActiveKey:\"tasks\",children:[/*#__PURE__*/_jsxs(TabPane,{tab:\"Test Tasks\",children:[/*#__PURE__*/_jsx(\"div\",{style:{marginBottom:'16px'},children:/*#__PURE__*/_jsx(Button,{type:\"primary\",icon:/*#__PURE__*/_jsx(PlusOutlined,{}),onClick:()=>setTaskModalVisible(true),children:\"Create Test Task\"})}),/*#__PURE__*/_jsx(Table,{columns:taskColumns,dataSource:tasks,rowKey:\"id\",loading:loading,pagination:{pageSize:10}})]},\"tasks\"),/*#__PURE__*/_jsxs(TabPane,{tab:\"Test Strategies\",children:[/*#__PURE__*/_jsx(\"div\",{style:{marginBottom:'16px'},children:/*#__PURE__*/_jsx(Button,{type:\"primary\",icon:/*#__PURE__*/_jsx(PlusOutlined,{}),onClick:()=>setStrategyModalVisible(true),children:\"Create Test Strategy\"})}),/*#__PURE__*/_jsx(Table,{columns:strategyColumns,dataSource:strategies,rowKey:\"id\",loading:loading,pagination:{pageSize:10}})]},\"strategies\"),/*#__PURE__*/_jsx(TabPane,{tab:\"Executions\",children:/*#__PURE__*/_jsx(Table,{columns:executionColumns,dataSource:executions,rowKey:\"id\",loading:loading,pagination:{pageSize:10}})},\"executions\")]})}),/*#__PURE__*/_jsx(Modal,{title:\"Create Test Task\",open:taskModalVisible,onCancel:()=>{setTaskModalVisible(false);taskForm.resetFields();},footer:null,width:600,children:/*#__PURE__*/_jsxs(Form,{form:taskForm,layout:\"vertical\",onFinish:handleCreateTask,children:[/*#__PURE__*/_jsx(Form.Item,{name:\"name\",label:\"Task Name\",rules:[{required:true,message:'Please enter task name'}],children:/*#__PURE__*/_jsx(Input,{placeholder:\"Enter task name\"})}),/*#__PURE__*/_jsx(Form.Item,{name:\"description\",label:\"Task Description\",children:/*#__PURE__*/_jsx(Input.TextArea,{placeholder:\"Enter task description\",rows:3})}),/*#__PURE__*/_jsx(Form.Item,{name:\"scenario_type\",label:\"Scenario Type\",rules:[{required:true,message:'Please select scenario type'}],initialValue:\"single\",children:/*#__PURE__*/_jsxs(Select,{children:[/*#__PURE__*/_jsx(Option,{value:\"single\",children:\"Single Interface\"}),/*#__PURE__*/_jsx(Option,{value:\"multi\",children:\"Multi Interface\"})]})}),/*#__PURE__*/_jsx(Form.Item,{name:\"target_host\",label:\"Target Host\",rules:[{required:true,message:'Please enter target host'}],children:/*#__PURE__*/_jsx(Input,{placeholder:\"e.g. https://api.example.com\"})}),/*#__PURE__*/_jsx(Form.Item,{name:\"script_id\",label:\"Test Script\",children:/*#__PURE__*/_jsx(Select,{placeholder:\"Select test script (optional)\",allowClear:true})}),/*#__PURE__*/_jsx(Form.Item,{children:/*#__PURE__*/_jsxs(Space,{children:[/*#__PURE__*/_jsx(Button,{type:\"primary\",htmlType:\"submit\",children:\"Create\"}),/*#__PURE__*/_jsx(Button,{onClick:()=>setTaskModalVisible(false),children:\"Cancel\"})]})})]})}),/*#__PURE__*/_jsx(Modal,{title:\"Create Test Strategy\",open:strategyModalVisible,onCancel:()=>{setStrategyModalVisible(false);strategyForm.resetFields();},footer:null,width:600,children:/*#__PURE__*/_jsxs(Form,{form:strategyForm,layout:\"vertical\",onFinish:handleCreateStrategy,children:[/*#__PURE__*/_jsx(Form.Item,{name:\"name\",label:\"Strategy Name\",rules:[{required:true,message:'Please enter strategy name'}],children:/*#__PURE__*/_jsx(Input,{placeholder:\"Enter strategy name\"})}),/*#__PURE__*/_jsx(Form.Item,{name:\"description\",label:\"Strategy Description\",children:/*#__PURE__*/_jsx(Input.TextArea,{placeholder:\"Enter strategy description\",rows:3})}),/*#__PURE__*/_jsx(Form.Item,{name:\"strategy_type\",label:\"Strategy Type\",rules:[{required:true,message:'Please select strategy type'}],initialValue:\"linear\",children:/*#__PURE__*/_jsxs(Select,{children:[/*#__PURE__*/_jsx(Option,{value:\"linear\",children:\"Linear Growth\"}),/*#__PURE__*/_jsx(Option,{value:\"step\",children:\"Step Growth\"}),/*#__PURE__*/_jsx(Option,{value:\"adaptive\",children:\"Adaptive\"})]})}),/*#__PURE__*/_jsxs(Row,{gutter:16,children:[/*#__PURE__*/_jsx(Col,{span:12,children:/*#__PURE__*/_jsx(Form.Item,{name:\"user_count\",label:\"User Count\",rules:[{required:true,message:'Please enter user count'}],initialValue:10,children:/*#__PURE__*/_jsx(Input,{type:\"number\",placeholder:\"User count\"})})}),/*#__PURE__*/_jsx(Col,{span:12,children:/*#__PURE__*/_jsx(Form.Item,{name:\"spawn_rate\",label:\"Spawn Rate\",rules:[{required:true,message:'Please enter spawn rate'}],initialValue:2,children:/*#__PURE__*/_jsx(Input,{type:\"number\",placeholder:\"Users per second\"})})})]}),/*#__PURE__*/_jsxs(Row,{gutter:16,children:[/*#__PURE__*/_jsx(Col,{span:12,children:/*#__PURE__*/_jsx(Form.Item,{name:\"run_time\",label:\"Run Time (seconds)\",rules:[{required:true,message:'Please enter run time'}],initialValue:60,children:/*#__PURE__*/_jsx(Input,{type:\"number\",placeholder:\"Run time\"})})}),/*#__PURE__*/_jsx(Col,{span:12,children:/*#__PURE__*/_jsx(Form.Item,{name:\"ramp_up_time\",label:\"Ramp Up Time (seconds)\",rules:[{required:true,message:'Please enter ramp up time'}],initialValue:10,children:/*#__PURE__*/_jsx(Input,{type:\"number\",placeholder:\"Ramp up time\"})})})]}),/*#__PURE__*/_jsx(Form.Item,{children:/*#__PURE__*/_jsxs(Space,{children:[/*#__PURE__*/_jsx(Button,{type:\"primary\",htmlType:\"submit\",children:\"Create\"}),/*#__PURE__*/_jsx(Button,{onClick:()=>setStrategyModalVisible(false),children:\"Cancel\"})]})})]})}),/*#__PURE__*/_jsx(Modal,{title:\"Create Test Execution\",open:executionModalVisible,onCancel:()=>{setExecutionModalVisible(false);executionForm.resetFields();},footer:null,width:600,children:/*#__PURE__*/_jsxs(Form,{form:executionForm,layout:\"vertical\",onFinish:handleCreateExecution,children:[/*#__PURE__*/_jsx(Form.Item,{name:\"task_id\",label:\"Test Task\",rules:[{required:true,message:'Please select test task'}],initialValue:selectedTask===null||selectedTask===void 0?void 0:selectedTask.id,children:/*#__PURE__*/_jsx(Select,{placeholder:\"Select test task\",disabled:!!selectedTask,children:tasks.map(task=>/*#__PURE__*/_jsx(Option,{value:task.id,children:task.name},task.id))})}),/*#__PURE__*/_jsx(Form.Item,{name:\"strategy_id\",label:\"Test Strategy\",rules:[{required:true,message:'Please select test strategy'}],children:/*#__PURE__*/_jsx(Select,{placeholder:\"Select test strategy\",children:strategies.map(strategy=>/*#__PURE__*/_jsxs(Option,{value:strategy.id,children:[strategy.name,\" (\",strategy.strategy_type,\")\"]},strategy.id))})}),/*#__PURE__*/_jsx(Form.Item,{name:\"load_generator_id\",label:\"Load Generator\",rules:[{required:true,message:'Please select load generator'}],children:/*#__PURE__*/_jsx(Select,{placeholder:\"Select load generator\",onChange:value=>loadLoadGeneratorConfigs(value),children:loadGenerators.map(lg=>/*#__PURE__*/_jsxs(Option,{value:lg.id,children:[lg.name,\" (\",lg.host,\")\"]},lg.id))})}),/*#__PURE__*/_jsx(Form.Item,{name:\"load_generator_config_id\",label:\"Load Generator Config\",rules:[{required:true,message:'Please select load generator config'}],children:/*#__PURE__*/_jsx(Select,{placeholder:\"Select load generator config\",children:loadGeneratorConfigs.map(config=>/*#__PURE__*/_jsx(Option,{value:config.id,children:config.config_name},config.id))})}),/*#__PURE__*/_jsx(Form.Item,{name:\"execution_name\",label:\"Execution Name\",children:/*#__PURE__*/_jsx(Input,{placeholder:\"Enter execution name (optional)\"})}),/*#__PURE__*/_jsx(Form.Item,{children:/*#__PURE__*/_jsxs(Space,{children:[/*#__PURE__*/_jsx(Button,{type:\"primary\",htmlType:\"submit\",children:\"Create Execution\"}),/*#__PURE__*/_jsx(Button,{onClick:()=>setExecutionModalVisible(false),children:\"Cancel\"})]})})]})})]});};export default TestTaskManagement;","map":{"version":3,"names":["React","useState","useEffect","Card","Table","Button","Space","Tag","Modal","Form","Input","Select","message","Popconfirm","Tabs","Row","Col","Statistic","Typography","PlusOutlined","EditOutlined","DeleteOutlined","PlayCircleOutlined","StopOutlined","EyeOutlined","SettingOutlined","FileTextOutlined","ThunderboltOutlined","useNavigate","testTaskService","testStrategyService","testExecutionService","loadGeneratorService","jsx","_jsx","jsxs","_jsxs","Title","Text","TabPane","Option","TestTaskManagement","navigate","loading","setLoading","tasks","setTasks","strategies","setStrategies","executions","setExecutions","loadGenerators","setLoadGenerators","loadGeneratorConfigs","setLoadGeneratorConfigs","taskModalVisible","setTaskModalVisible","strategyModalVisible","setStrategyModalVisible","executionModalVisible","setExecutionModalVisible","selectedTask","setSelectedTask","selectedStrategy","setSelectedStrategy","taskForm","useForm","strategyForm","executionForm","loadData","tasksData","strategiesData","executionsData","loadGeneratorsData","Promise","all","getTestTasks","getTestStrategies","getTestExecutions","getLoadGenerators","error","loadLoadGeneratorConfigs","loadGeneratorId","configs","getConfigs","handleCreateTask","values","createTestTask","success","resetFields","handleCreateStrategy","createTestStrategy","handleCreateExecution","executionData","task_id","strategy_id","load_generator_id","load_generator_config_id","execution_name","concat","Date","toLocaleString","createTestExecution","handleStartExecution","executionId","startTestExecution","handleStopExecution","stopTestExecution","reason","handleDeleteTask","taskId","deleteTestTask","handleDeleteStrategy","strategyId","deleteTestStrategy","taskColumns","title","dataIndex","key","render","text","record","type","onClick","id","children","color","date","_","size","icon","setFieldsValue","onConfirm","danger","strategyColumns","time","executionColumns","status","colorMap","pending","running","completed","failed","cancelled","rate","toFixed","stats","totalTasks","length","totalStrategies","totalExecutions","runningExecutions","filter","e","style","padding","level","gutter","marginBottom","span","value","prefix","valueStyle","defaultActiveKey","tab","columns","dataSource","rowKey","pagination","pageSize","open","onCancel","footer","width","form","layout","onFinish","Item","name","label","rules","required","placeholder","TextArea","rows","initialValue","allowClear","htmlType","disabled","map","task","strategy","strategy_type","onChange","lg","host","config","config_name"],"sources":["/Users/fengzhao/PycharmProjects/pfp/frontend/src/pages/TestTaskManagement.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport {\n  Card,\n  Table,\n  Button,\n  Space,\n  Tag,\n  Modal,\n  Form,\n  Input,\n  Select,\n  message,\n  Popconfirm,\n  Tabs,\n  Row,\n  Col,\n  Statistic,\n  Typography,\n  Divider\n} from 'antd';\nimport {\n  PlusOutlined,\n  EditOutlined,\n  DeleteOutlined,\n  PlayCircleOutlined,\n  StopOutlined,\n  EyeOutlined,\n  SettingOutlined,\n  FileTextOutlined,\n  ThunderboltOutlined\n} from '@ant-design/icons';\nimport { useNavigate } from 'react-router-dom';\nimport { \n  testTaskService, \n  testStrategyService, \n  testExecutionService,\n  loadGeneratorService \n} from '../services/api';\nimport { \n  TestTask, \n  TestTaskWithScenarios, \n  TestStrategy, \n  TestExecution,\n  TestExecutionCreate\n} from '../types/testTask';\nimport { LoadGenerator, LoadGeneratorConfig } from '../types/loadGenerator';\n\nconst { Title, Text } = Typography;\nconst { TabPane } = Tabs;\nconst { Option } = Select;\n\nconst TestTaskManagement: React.FC = () => {\n  const navigate = useNavigate();\n  const [loading, setLoading] = useState(false);\n  const [tasks, setTasks] = useState<TestTask[]>([]);\n  const [strategies, setStrategies] = useState<TestStrategy[]>([]);\n  const [executions, setExecutions] = useState<TestExecution[]>([]);\n  const [loadGenerators, setLoadGenerators] = useState<LoadGenerator[]>([]);\n  const [loadGeneratorConfigs, setLoadGeneratorConfigs] = useState<LoadGeneratorConfig[]>([]);\n  \n  // 模态框状态\n  const [taskModalVisible, setTaskModalVisible] = useState(false);\n  const [strategyModalVisible, setStrategyModalVisible] = useState(false);\n  const [executionModalVisible, setExecutionModalVisible] = useState(false);\n  const [selectedTask, setSelectedTask] = useState<TestTask | null>(null);\n  const [selectedStrategy, setSelectedStrategy] = useState<TestStrategy | null>(null);\n  \n  // 表单实例\n  const [taskForm] = Form.useForm();\n  const [strategyForm] = Form.useForm();\n  const [executionForm] = Form.useForm();\n\n  // 加载数据\n  useEffect(() => {\n    loadData();\n  }, []);\n\n  const loadData = async () => {\n    setLoading(true);\n    try {\n      const [tasksData, strategiesData, executionsData, loadGeneratorsData] = await Promise.all([\n        testTaskService.getTestTasks(),\n        testStrategyService.getTestStrategies(),\n        testExecutionService.getTestExecutions(),\n        loadGeneratorService.getLoadGenerators()\n      ]);\n      \n      setTasks(tasksData);\n      setStrategies(strategiesData);\n      setExecutions(executionsData);\n      setLoadGenerators(loadGeneratorsData);\n    } catch (error) {\n      message.error('Failed to load data');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // 加载压力机配置\n  const loadLoadGeneratorConfigs = async (loadGeneratorId: number) => {\n    try {\n      const configs = await loadGeneratorService.getConfigs(loadGeneratorId);\n      setLoadGeneratorConfigs(configs);\n    } catch (error) {\n      message.error('Failed to load load generator configs');\n    }\n  };\n\n  // 创建测试任务\n  const handleCreateTask = async (values: any) => {\n    try {\n      await testTaskService.createTestTask(values);\n      message.success('Test task created successfully');\n      setTaskModalVisible(false);\n      taskForm.resetFields();\n      loadData();\n    } catch (error) {\n      message.error('Failed to create test task');\n    }\n  };\n\n  // 创建测试策略\n  const handleCreateStrategy = async (values: any) => {\n    try {\n      await testStrategyService.createTestStrategy(values);\n      message.success('Test strategy created successfully');\n      setStrategyModalVisible(false);\n      strategyForm.resetFields();\n      loadData();\n    } catch (error) {\n      message.error('Failed to create test strategy');\n    }\n  };\n\n  // 创建测试执行\n  const handleCreateExecution = async (values: any) => {\n    try {\n      const executionData: TestExecutionCreate = {\n        task_id: values.task_id,\n        strategy_id: values.strategy_id,\n        load_generator_id: values.load_generator_id,\n        load_generator_config_id: values.load_generator_config_id,\n        execution_name: values.execution_name || `Execution_${new Date().toLocaleString()}`\n      };\n      \n      await testExecutionService.createTestExecution(executionData);\n      message.success('Test execution created successfully');\n      setExecutionModalVisible(false);\n      executionForm.resetFields();\n      loadData();\n    } catch (error) {\n      message.error('Failed to create test execution');\n    }\n  };\n\n  // 启动测试执行\n  const handleStartExecution = async (executionId: number) => {\n    try {\n      await testExecutionService.startTestExecution(executionId);\n      message.success('Test execution started');\n      loadData();\n    } catch (error) {\n      message.error('Failed to start test execution');\n    }\n  };\n\n  // 停止测试执行\n  const handleStopExecution = async (executionId: number) => {\n    try {\n      await testExecutionService.stopTestExecution(executionId, { reason: 'Manual stop' });\n      message.success('Test execution stopped');\n      loadData();\n    } catch (error) {\n      message.error('Failed to stop test execution');\n    }\n  };\n\n  // 删除测试任务\n  const handleDeleteTask = async (taskId: number) => {\n    try {\n      await testTaskService.deleteTestTask(taskId);\n      message.success('Test task deleted successfully');\n      loadData();\n    } catch (error) {\n      message.error('Failed to delete test task');\n    }\n  };\n\n  // 删除测试策略\n  const handleDeleteStrategy = async (strategyId: number) => {\n    try {\n      await testStrategyService.deleteTestStrategy(strategyId);\n      message.success('Test strategy deleted successfully');\n      loadData();\n    } catch (error) {\n      message.error('Failed to delete test strategy');\n    }\n  };\n\n  // 表格列定义\n  const taskColumns = [\n    {\n      title: 'Task Name',\n      dataIndex: 'name',\n      key: 'name',\n      render: (text: string, record: TestTask) => (\n        <Button type=\"link\" onClick={() => navigate(`/test-tasks/${record.id}`)}>\n          {text}\n        </Button>\n      ),\n    },\n    {\n      title: 'Scenario Type',\n      dataIndex: 'scenario_type',\n      key: 'scenario_type',\n      render: (type: string) => (\n        <Tag color={type === 'single' ? 'blue' : 'green'}>\n          {type === 'single' ? 'Single Interface' : 'Multi Interface'}\n        </Tag>\n      ),\n    },\n    {\n      title: 'Target Host',\n      dataIndex: 'target_host',\n      key: 'target_host',\n    },\n    {\n      title: 'Created At',\n      dataIndex: 'created_at',\n      key: 'created_at',\n      render: (date: string) => new Date(date).toLocaleString(),\n    },\n    {\n      title: 'Actions',\n      key: 'action',\n      render: (_: any, record: TestTask) => (\n        <Space>\n          <Button\n            type=\"primary\"\n            size=\"small\"\n            icon={<PlayCircleOutlined />}\n            onClick={() => {\n              setSelectedTask(record);\n              setExecutionModalVisible(true);\n            }}\n          >\n            Execute\n          </Button>\n          <Button\n            size=\"small\"\n            icon={<EditOutlined />}\n            onClick={() => {\n              setSelectedTask(record);\n              taskForm.setFieldsValue(record);\n              setTaskModalVisible(true);\n            }}\n          >\n            Edit\n          </Button>\n          <Popconfirm\n            title=\"Are you sure you want to delete this test task?\"\n            onConfirm={() => handleDeleteTask(record.id)}\n          >\n            <Button size=\"small\" danger icon={<DeleteOutlined />}>\n              Delete\n            </Button>\n          </Popconfirm>\n        </Space>\n      ),\n    },\n  ];\n\n  const strategyColumns = [\n    {\n      title: 'Strategy Name',\n      dataIndex: 'name',\n      key: 'name',\n    },\n    {\n      title: 'Strategy Type',\n      dataIndex: 'strategy_type',\n      key: 'strategy_type',\n      render: (type: string) => (\n        <Tag color={type === 'linear' ? 'blue' : type === 'step' ? 'green' : 'orange'}>\n          {type === 'linear' ? 'Linear' : type === 'step' ? 'Step' : 'Adaptive'}\n        </Tag>\n      ),\n    },\n    {\n      title: 'User Count',\n      dataIndex: 'user_count',\n      key: 'user_count',\n    },\n    {\n      title: 'Spawn Rate',\n      dataIndex: 'spawn_rate',\n      key: 'spawn_rate',\n    },\n    {\n      title: 'Run Time',\n      dataIndex: 'run_time',\n      key: 'run_time',\n      render: (time: number) => `${time}s`,\n    },\n    {\n      title: 'Actions',\n      key: 'action',\n      render: (_: any, record: TestStrategy) => (\n        <Space>\n          <Button\n            size=\"small\"\n            icon={<EditOutlined />}\n            onClick={() => {\n              setSelectedStrategy(record);\n              strategyForm.setFieldsValue(record);\n              setStrategyModalVisible(true);\n            }}\n          >\n            Edit\n          </Button>\n          <Popconfirm\n            title=\"Are you sure you want to delete this test strategy?\"\n            onConfirm={() => handleDeleteStrategy(record.id)}\n          >\n            <Button size=\"small\" danger icon={<DeleteOutlined />}>\n              Delete\n            </Button>\n          </Popconfirm>\n        </Space>\n      ),\n    },\n  ];\n\n  const executionColumns = [\n    {\n      title: 'Execution Name',\n      dataIndex: 'execution_name',\n      key: 'execution_name',\n    },\n    {\n      title: 'Task ID',\n      dataIndex: 'task_id',\n      key: 'task_id',\n    },\n    {\n      title: 'Status',\n      dataIndex: 'status',\n      key: 'status',\n      render: (status: string) => {\n        const colorMap: Record<string, string> = {\n          pending: 'default',\n          running: 'processing',\n          completed: 'success',\n          failed: 'error',\n          cancelled: 'warning',\n        };\n        return <Tag color={colorMap[status]}>{status}</Tag>;\n      },\n    },\n    {\n      title: 'Total Requests',\n      dataIndex: 'total_requests',\n      key: 'total_requests',\n    },\n    {\n      title: 'Error Rate',\n      dataIndex: 'error_rate',\n      key: 'error_rate',\n      render: (rate: number) => `${rate.toFixed(2)}%`,\n    },\n    {\n      title: 'Created At',\n      dataIndex: 'created_at',\n      key: 'created_at',\n      render: (date: string) => new Date(date).toLocaleString(),\n    },\n    {\n      title: 'Actions',\n      key: 'action',\n      render: (_: any, record: TestExecution) => (\n        <Space>\n          {record.status === 'pending' && (\n            <Button\n              type=\"primary\"\n              size=\"small\"\n              icon={<PlayCircleOutlined />}\n              onClick={() => handleStartExecution(record.id)}\n            >\n              Start\n            </Button>\n          )}\n          {record.status === 'running' && (\n            <Button\n              size=\"small\"\n              danger\n              icon={<StopOutlined />}\n              onClick={() => handleStopExecution(record.id)}\n            >\n              Stop\n            </Button>\n          )}\n          <Button\n            size=\"small\"\n            icon={<EyeOutlined />}\n            onClick={() => navigate(`/test-executions/${record.id}`)}\n          >\n            View\n          </Button>\n        </Space>\n      ),\n    },\n  ];\n\n  // 统计数据\n  const stats = {\n    totalTasks: tasks.length,\n    totalStrategies: strategies.length,\n    totalExecutions: executions.length,\n    runningExecutions: executions.filter(e => e.status === 'running').length,\n  };\n\n  return (\n    <div style={{ padding: '24px' }}>\n      <Title level={2}>Test Management</Title>\n      \n      {/* 统计卡片 */}\n      <Row gutter={16} style={{ marginBottom: '24px' }}>\n        <Col span={6}>\n          <Card>\n            <Statistic\n              title=\"Test Tasks\"\n              value={stats.totalTasks}\n              prefix={<FileTextOutlined />}\n              valueStyle={{ color: '#1890ff' }}\n            />\n          </Card>\n        </Col>\n        <Col span={6}>\n          <Card>\n            <Statistic\n              title=\"Test Strategies\"\n              value={stats.totalStrategies}\n              prefix={<SettingOutlined />}\n              valueStyle={{ color: '#52c41a' }}\n            />\n          </Card>\n        </Col>\n        <Col span={6}>\n          <Card>\n            <Statistic\n              title=\"Executions\"\n              value={stats.totalExecutions}\n              prefix={<ThunderboltOutlined />}\n              valueStyle={{ color: '#faad14' }}\n            />\n          </Card>\n        </Col>\n        <Col span={6}>\n          <Card>\n            <Statistic\n              title=\"Running\"\n              value={stats.runningExecutions}\n              prefix={<PlayCircleOutlined />}\n              valueStyle={{ color: '#f5222d' }}\n            />\n          </Card>\n        </Col>\n      </Row>\n\n      {/* 主要内容 */}\n      <Card>\n        <Tabs defaultActiveKey=\"tasks\">\n          <TabPane tab=\"Test Tasks\" key=\"tasks\">\n            <div style={{ marginBottom: '16px' }}>\n              <Button\n                type=\"primary\"\n                icon={<PlusOutlined />}\n                onClick={() => setTaskModalVisible(true)}\n              >\n                Create Test Task\n              </Button>\n            </div>\n            <Table\n              columns={taskColumns}\n              dataSource={tasks}\n              rowKey=\"id\"\n              loading={loading}\n              pagination={{ pageSize: 10 }}\n            />\n          </TabPane>\n          \n          <TabPane tab=\"Test Strategies\" key=\"strategies\">\n            <div style={{ marginBottom: '16px' }}>\n              <Button\n                type=\"primary\"\n                icon={<PlusOutlined />}\n                onClick={() => setStrategyModalVisible(true)}\n              >\n                Create Test Strategy\n              </Button>\n            </div>\n            <Table\n              columns={strategyColumns}\n              dataSource={strategies}\n              rowKey=\"id\"\n              loading={loading}\n              pagination={{ pageSize: 10 }}\n            />\n          </TabPane>\n          \n          <TabPane tab=\"Executions\" key=\"executions\">\n            <Table\n              columns={executionColumns}\n              dataSource={executions}\n              rowKey=\"id\"\n              loading={loading}\n              pagination={{ pageSize: 10 }}\n            />\n          </TabPane>\n        </Tabs>\n      </Card>\n\n      {/* 创建测试任务模态框 */}\n      <Modal\n        title=\"Create Test Task\"\n        open={taskModalVisible}\n        onCancel={() => {\n          setTaskModalVisible(false);\n          taskForm.resetFields();\n        }}\n        footer={null}\n        width={600}\n      >\n        <Form\n          form={taskForm}\n          layout=\"vertical\"\n          onFinish={handleCreateTask}\n        >\n          <Form.Item\n            name=\"name\"\n            label=\"Task Name\"\n            rules={[{ required: true, message: 'Please enter task name' }]}\n          >\n            <Input placeholder=\"Enter task name\" />\n          </Form.Item>\n          \n          <Form.Item\n            name=\"description\"\n            label=\"Task Description\"\n          >\n            <Input.TextArea placeholder=\"Enter task description\" rows={3} />\n          </Form.Item>\n          \n          <Form.Item\n            name=\"scenario_type\"\n            label=\"Scenario Type\"\n            rules={[{ required: true, message: 'Please select scenario type' }]}\n            initialValue=\"single\"\n          >\n            <Select>\n              <Option value=\"single\">Single Interface</Option>\n              <Option value=\"multi\">Multi Interface</Option>\n            </Select>\n          </Form.Item>\n          \n          <Form.Item\n            name=\"target_host\"\n            label=\"Target Host\"\n            rules={[{ required: true, message: 'Please enter target host' }]}\n          >\n            <Input placeholder=\"e.g. https://api.example.com\" />\n          </Form.Item>\n          \n          <Form.Item\n            name=\"script_id\"\n            label=\"Test Script\"\n          >\n            <Select placeholder=\"Select test script (optional)\" allowClear>\n              {/* 这里应该从API获取脚本列表 */}\n            </Select>\n          </Form.Item>\n          \n          <Form.Item>\n            <Space>\n              <Button type=\"primary\" htmlType=\"submit\">\n                Create\n              </Button>\n              <Button onClick={() => setTaskModalVisible(false)}>\n                Cancel\n              </Button>\n            </Space>\n          </Form.Item>\n        </Form>\n      </Modal>\n\n      {/* 创建压测策略模态框 */}\n      <Modal\n        title=\"Create Test Strategy\"\n        open={strategyModalVisible}\n        onCancel={() => {\n          setStrategyModalVisible(false);\n          strategyForm.resetFields();\n        }}\n        footer={null}\n        width={600}\n      >\n        <Form\n          form={strategyForm}\n          layout=\"vertical\"\n          onFinish={handleCreateStrategy}\n        >\n          <Form.Item\n            name=\"name\"\n            label=\"Strategy Name\"\n            rules={[{ required: true, message: 'Please enter strategy name' }]}\n          >\n            <Input placeholder=\"Enter strategy name\" />\n          </Form.Item>\n          \n          <Form.Item\n            name=\"description\"\n            label=\"Strategy Description\"\n          >\n            <Input.TextArea placeholder=\"Enter strategy description\" rows={3} />\n          </Form.Item>\n          \n          <Form.Item\n            name=\"strategy_type\"\n            label=\"Strategy Type\"\n            rules={[{ required: true, message: 'Please select strategy type' }]}\n            initialValue=\"linear\"\n          >\n            <Select>\n              <Option value=\"linear\">Linear Growth</Option>\n              <Option value=\"step\">Step Growth</Option>\n              <Option value=\"adaptive\">Adaptive</Option>\n            </Select>\n          </Form.Item>\n          \n          <Row gutter={16}>\n            <Col span={12}>\n              <Form.Item\n                name=\"user_count\"\n                label=\"User Count\"\n                rules={[{ required: true, message: 'Please enter user count' }]}\n                initialValue={10}\n              >\n                <Input type=\"number\" placeholder=\"User count\" />\n              </Form.Item>\n            </Col>\n            <Col span={12}>\n              <Form.Item\n                name=\"spawn_rate\"\n                label=\"Spawn Rate\"\n                rules={[{ required: true, message: 'Please enter spawn rate' }]}\n                initialValue={2}\n              >\n                <Input type=\"number\" placeholder=\"Users per second\" />\n              </Form.Item>\n            </Col>\n          </Row>\n          \n          <Row gutter={16}>\n            <Col span={12}>\n              <Form.Item\n                name=\"run_time\"\n                label=\"Run Time (seconds)\"\n                rules={[{ required: true, message: 'Please enter run time' }]}\n                initialValue={60}\n              >\n                <Input type=\"number\" placeholder=\"Run time\" />\n              </Form.Item>\n            </Col>\n            <Col span={12}>\n              <Form.Item\n                name=\"ramp_up_time\"\n                label=\"Ramp Up Time (seconds)\"\n                rules={[{ required: true, message: 'Please enter ramp up time' }]}\n                initialValue={10}\n              >\n                <Input type=\"number\" placeholder=\"Ramp up time\" />\n              </Form.Item>\n            </Col>\n          </Row>\n          \n          <Form.Item>\n            <Space>\n              <Button type=\"primary\" htmlType=\"submit\">\n                Create\n              </Button>\n              <Button onClick={() => setStrategyModalVisible(false)}>\n                Cancel\n              </Button>\n            </Space>\n          </Form.Item>\n        </Form>\n      </Modal>\n\n      {/* 创建测试执行模态框 */}\n      <Modal\n        title=\"Create Test Execution\"\n        open={executionModalVisible}\n        onCancel={() => {\n          setExecutionModalVisible(false);\n          executionForm.resetFields();\n        }}\n        footer={null}\n        width={600}\n      >\n        <Form\n          form={executionForm}\n          layout=\"vertical\"\n          onFinish={handleCreateExecution}\n        >\n          <Form.Item\n            name=\"task_id\"\n            label=\"Test Task\"\n            rules={[{ required: true, message: 'Please select test task' }]}\n            initialValue={selectedTask?.id}\n          >\n            <Select placeholder=\"Select test task\" disabled={!!selectedTask}>\n              {tasks.map(task => (\n                <Option key={task.id} value={task.id}>\n                  {task.name}\n                </Option>\n              ))}\n            </Select>\n          </Form.Item>\n          \n          <Form.Item\n            name=\"strategy_id\"\n            label=\"Test Strategy\"\n            rules={[{ required: true, message: 'Please select test strategy' }]}\n          >\n            <Select placeholder=\"Select test strategy\">\n              {strategies.map(strategy => (\n                <Option key={strategy.id} value={strategy.id}>\n                  {strategy.name} ({strategy.strategy_type})\n                </Option>\n              ))}\n            </Select>\n          </Form.Item>\n          \n          <Form.Item\n            name=\"load_generator_id\"\n            label=\"Load Generator\"\n            rules={[{ required: true, message: 'Please select load generator' }]}\n          >\n            <Select \n              placeholder=\"Select load generator\"\n              onChange={(value) => loadLoadGeneratorConfigs(value)}\n            >\n              {loadGenerators.map(lg => (\n                <Option key={lg.id} value={lg.id}>\n                  {lg.name} ({lg.host})\n                </Option>\n              ))}\n            </Select>\n          </Form.Item>\n          \n          <Form.Item\n            name=\"load_generator_config_id\"\n            label=\"Load Generator Config\"\n            rules={[{ required: true, message: 'Please select load generator config' }]}\n          >\n            <Select placeholder=\"Select load generator config\">\n              {loadGeneratorConfigs.map(config => (\n                <Option key={config.id} value={config.id}>\n                  {config.config_name}\n                </Option>\n              ))}\n            </Select>\n          </Form.Item>\n          \n          <Form.Item\n            name=\"execution_name\"\n            label=\"Execution Name\"\n          >\n            <Input placeholder=\"Enter execution name (optional)\" />\n          </Form.Item>\n          \n          <Form.Item>\n            <Space>\n              <Button type=\"primary\" htmlType=\"submit\">\n                Create Execution\n              </Button>\n              <Button onClick={() => setExecutionModalVisible(false)}>\n                Cancel\n              </Button>\n            </Space>\n          </Form.Item>\n        </Form>\n      </Modal>\n    </div>\n  );\n};\n\nexport default TestTaskManagement;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}