{"ast":null,"code":"import React,{useState,useEffect}from'react';import{Card,Table,Button,Space,Modal,Form,Input,Select,message,Popconfirm,Row,Col,Statistic,Typography}from'antd';import{PlusOutlined,EditOutlined,DeleteOutlined,SettingOutlined,FileTextOutlined,ThunderboltOutlined,PlayCircleOutlined}from'@ant-design/icons';import{useNavigate}from'react-router-dom';import{testTaskService,testStrategyService,testExecutionService}from'../services/api';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const{Title,Text}=Typography;const{Option}=Select;const TestTaskManagement=()=>{const navigate=useNavigate();const[loading,setLoading]=useState(false);const[tasks,setTasks]=useState([]);const[strategies,setStrategies]=useState([]);const[executions,setExecutions]=useState([]);// 模态框状态\nconst[taskModalVisible,setTaskModalVisible]=useState(false);const[selectedTask,setSelectedTask]=useState(null);// 表单实例\nconst[taskForm]=Form.useForm();// 加载数据\nuseEffect(()=>{loadData();},[]);const loadData=async()=>{setLoading(true);try{const[tasksData,strategiesData,executionsData]=await Promise.all([testTaskService.getTestTasks(),testStrategyService.getTestStrategies(),testExecutionService.getTestExecutions()]);setTasks(tasksData);setStrategies(strategiesData);setExecutions(executionsData);}catch(error){message.error('Failed to load data');}finally{setLoading(false);}};// 创建/更新测试任务\nconst handleCreateTask=async values=>{try{if(selectedTask){// 更新任务\nawait testTaskService.updateTestTask(selectedTask.id,values);message.success('Test task updated successfully');}else{// 创建任务\nawait testTaskService.createTestTask(values);message.success('Test task created successfully');}setTaskModalVisible(false);taskForm.resetFields();setSelectedTask(null);loadData();}catch(error){message.error(selectedTask?'Failed to update test task':'Failed to create test task');}};// 删除测试任务\nconst handleDeleteTask=async taskId=>{try{await testTaskService.deleteTestTask(taskId);message.success('Test task deleted successfully');loadData();}catch(error){message.error('Failed to delete test task');}};// 表格列定义\nconst taskColumns=[{title:'Task Name',dataIndex:'name',key:'name',render:(text,record)=>/*#__PURE__*/_jsx(Button,{type:\"link\",onClick:()=>navigate(\"/test-tasks/\".concat(record.id)),children:text})},{title:'Description',dataIndex:'description',key:'description',render:text=>text||'-'},{title:'Created At',dataIndex:'created_at',key:'created_at',render:date=>new Date(date).toLocaleString()},{title:'Actions',key:'action',render:(_,record)=>/*#__PURE__*/_jsxs(Space,{children:[/*#__PURE__*/_jsx(Button,{size:\"small\",icon:/*#__PURE__*/_jsx(EditOutlined,{}),onClick:()=>{setSelectedTask(record);taskForm.setFieldsValue(record);setTaskModalVisible(true);},children:\"Edit\"}),/*#__PURE__*/_jsx(Popconfirm,{title:\"Are you sure you want to delete this test task?\",onConfirm:()=>handleDeleteTask(record.id),children:/*#__PURE__*/_jsx(Button,{size:\"small\",danger:true,icon:/*#__PURE__*/_jsx(DeleteOutlined,{}),children:\"Delete\"})})]})}];// 统计数据\nconst stats={totalTasks:tasks.length,totalStrategies:strategies.length,totalExecutions:executions.length,runningExecutions:executions.filter(e=>e.status==='running').length};return/*#__PURE__*/_jsxs(\"div\",{style:{padding:'24px'},children:[/*#__PURE__*/_jsx(Title,{level:2,children:\"Test Management\"}),/*#__PURE__*/_jsxs(Row,{gutter:16,style:{marginBottom:'24px'},children:[/*#__PURE__*/_jsx(Col,{span:6,children:/*#__PURE__*/_jsx(Card,{children:/*#__PURE__*/_jsx(Statistic,{title:\"Test Tasks\",value:stats.totalTasks,prefix:/*#__PURE__*/_jsx(FileTextOutlined,{}),valueStyle:{color:'#1890ff'}})})}),/*#__PURE__*/_jsx(Col,{span:6,children:/*#__PURE__*/_jsx(Card,{children:/*#__PURE__*/_jsx(Statistic,{title:\"Test Strategies\",value:stats.totalStrategies,prefix:/*#__PURE__*/_jsx(SettingOutlined,{}),valueStyle:{color:'#52c41a'}})})}),/*#__PURE__*/_jsx(Col,{span:6,children:/*#__PURE__*/_jsx(Card,{children:/*#__PURE__*/_jsx(Statistic,{title:\"Executions\",value:stats.totalExecutions,prefix:/*#__PURE__*/_jsx(ThunderboltOutlined,{}),valueStyle:{color:'#faad14'}})})}),/*#__PURE__*/_jsx(Col,{span:6,children:/*#__PURE__*/_jsx(Card,{children:/*#__PURE__*/_jsx(Statistic,{title:\"Running\",value:stats.runningExecutions,prefix:/*#__PURE__*/_jsx(PlayCircleOutlined,{}),valueStyle:{color:'#f5222d'}})})})]}),/*#__PURE__*/_jsxs(Card,{children:[/*#__PURE__*/_jsx(\"div\",{style:{marginBottom:'16px'},children:/*#__PURE__*/_jsx(Button,{type:\"primary\",icon:/*#__PURE__*/_jsx(PlusOutlined,{}),onClick:()=>setTaskModalVisible(true),children:\"Create Test Task\"})}),/*#__PURE__*/_jsx(Table,{columns:taskColumns,dataSource:tasks,rowKey:\"id\",loading:loading,pagination:{pageSize:10}})]}),/*#__PURE__*/_jsx(Modal,{title:selectedTask?\"Edit Test Task\":\"Create Test Task\",open:taskModalVisible,onCancel:()=>{setTaskModalVisible(false);taskForm.resetFields();setSelectedTask(null);},footer:null,width:500,children:/*#__PURE__*/_jsxs(Form,{form:taskForm,layout:\"vertical\",onFinish:handleCreateTask,children:[/*#__PURE__*/_jsx(Form.Item,{name:\"name\",label:\"Task Name\",rules:[{required:true,message:'Please enter task name'}],children:/*#__PURE__*/_jsx(Input,{placeholder:\"Enter task name\"})}),/*#__PURE__*/_jsx(Form.Item,{name:\"description\",label:\"Task Description\",children:/*#__PURE__*/_jsx(Input.TextArea,{placeholder:\"Enter task description\",rows:4})}),/*#__PURE__*/_jsx(Form.Item,{children:/*#__PURE__*/_jsxs(Space,{children:[/*#__PURE__*/_jsx(Button,{type:\"primary\",htmlType:\"submit\",children:selectedTask?\"Update\":\"Create\"}),/*#__PURE__*/_jsx(Button,{onClick:()=>{setTaskModalVisible(false);taskForm.resetFields();setSelectedTask(null);},children:\"Cancel\"})]})})]})})]});};export default TestTaskManagement;","map":{"version":3,"names":["React","useState","useEffect","Card","Table","Button","Space","Modal","Form","Input","Select","message","Popconfirm","Row","Col","Statistic","Typography","PlusOutlined","EditOutlined","DeleteOutlined","SettingOutlined","FileTextOutlined","ThunderboltOutlined","PlayCircleOutlined","useNavigate","testTaskService","testStrategyService","testExecutionService","jsx","_jsx","jsxs","_jsxs","Title","Text","Option","TestTaskManagement","navigate","loading","setLoading","tasks","setTasks","strategies","setStrategies","executions","setExecutions","taskModalVisible","setTaskModalVisible","selectedTask","setSelectedTask","taskForm","useForm","loadData","tasksData","strategiesData","executionsData","Promise","all","getTestTasks","getTestStrategies","getTestExecutions","error","handleCreateTask","values","updateTestTask","id","success","createTestTask","resetFields","handleDeleteTask","taskId","deleteTestTask","taskColumns","title","dataIndex","key","render","text","record","type","onClick","concat","children","date","Date","toLocaleString","_","size","icon","setFieldsValue","onConfirm","danger","stats","totalTasks","length","totalStrategies","totalExecutions","runningExecutions","filter","e","status","style","padding","level","gutter","marginBottom","span","value","prefix","valueStyle","color","columns","dataSource","rowKey","pagination","pageSize","open","onCancel","footer","width","form","layout","onFinish","Item","name","label","rules","required","placeholder","TextArea","rows","htmlType"],"sources":["/Users/fengzhao/PycharmProjects/pfp/frontend/src/pages/TestTaskManagement.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport {\n  Card,\n  Table,\n  Button,\n  Space,\n  Tag,\n  Modal,\n  Form,\n  Input,\n  Select,\n  message,\n  Popconfirm,\n  Row,\n  Col,\n  Statistic,\n  Typography\n} from 'antd';\nimport {\n  PlusOutlined,\n  EditOutlined,\n  DeleteOutlined,\n  SettingOutlined,\n  FileTextOutlined,\n  ThunderboltOutlined,\n  PlayCircleOutlined\n} from '@ant-design/icons';\nimport { useNavigate } from 'react-router-dom';\nimport { \n  testTaskService, \n  testStrategyService, \n  testExecutionService\n} from '../services/api';\nimport { \n  TestTask, \n  TestStrategy, \n  TestExecution\n} from '../types/testTask';\n\nconst { Title, Text } = Typography;\nconst { Option } = Select;\n\nconst TestTaskManagement: React.FC = () => {\n  const navigate = useNavigate();\n  const [loading, setLoading] = useState(false);\n  const [tasks, setTasks] = useState<TestTask[]>([]);\n  const [strategies, setStrategies] = useState<TestStrategy[]>([]);\n  const [executions, setExecutions] = useState<TestExecution[]>([]);\n  \n  // 模态框状态\n  const [taskModalVisible, setTaskModalVisible] = useState(false);\n  const [selectedTask, setSelectedTask] = useState<TestTask | null>(null);\n  \n  // 表单实例\n  const [taskForm] = Form.useForm();\n\n  // 加载数据\n  useEffect(() => {\n    loadData();\n  }, []);\n\n  const loadData = async () => {\n    setLoading(true);\n    try {\n      const [tasksData, strategiesData, executionsData] = await Promise.all([\n        testTaskService.getTestTasks(),\n        testStrategyService.getTestStrategies(),\n        testExecutionService.getTestExecutions()\n      ]);\n      \n      setTasks(tasksData);\n      setStrategies(strategiesData);\n      setExecutions(executionsData);\n    } catch (error) {\n      message.error('Failed to load data');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // 创建/更新测试任务\n  const handleCreateTask = async (values: any) => {\n    try {\n      if (selectedTask) {\n        // 更新任务\n        await testTaskService.updateTestTask(selectedTask.id, values);\n        message.success('Test task updated successfully');\n      } else {\n        // 创建任务\n        await testTaskService.createTestTask(values);\n        message.success('Test task created successfully');\n      }\n      setTaskModalVisible(false);\n      taskForm.resetFields();\n      setSelectedTask(null);\n      loadData();\n    } catch (error) {\n      message.error(selectedTask ? 'Failed to update test task' : 'Failed to create test task');\n    }\n  };\n\n  // 删除测试任务\n  const handleDeleteTask = async (taskId: number) => {\n    try {\n      await testTaskService.deleteTestTask(taskId);\n      message.success('Test task deleted successfully');\n      loadData();\n    } catch (error) {\n      message.error('Failed to delete test task');\n    }\n  };\n\n  // 表格列定义\n  const taskColumns = [\n    {\n      title: 'Task Name',\n      dataIndex: 'name',\n      key: 'name',\n      render: (text: string, record: TestTask) => (\n        <Button type=\"link\" onClick={() => navigate(`/test-tasks/${record.id}`)}>\n          {text}\n        </Button>\n      ),\n    },\n    {\n      title: 'Description',\n      dataIndex: 'description',\n      key: 'description',\n      render: (text: string) => text || '-',\n    },\n    {\n      title: 'Created At',\n      dataIndex: 'created_at',\n      key: 'created_at',\n      render: (date: string) => new Date(date).toLocaleString(),\n    },\n    {\n      title: 'Actions',\n      key: 'action',\n      render: (_: any, record: TestTask) => (\n        <Space>\n          <Button\n            size=\"small\"\n            icon={<EditOutlined />}\n            onClick={() => {\n              setSelectedTask(record);\n              taskForm.setFieldsValue(record);\n              setTaskModalVisible(true);\n            }}\n          >\n            Edit\n          </Button>\n          <Popconfirm\n            title=\"Are you sure you want to delete this test task?\"\n            onConfirm={() => handleDeleteTask(record.id)}\n          >\n            <Button size=\"small\" danger icon={<DeleteOutlined />}>\n              Delete\n            </Button>\n          </Popconfirm>\n        </Space>\n      ),\n    },\n  ];\n\n\n  // 统计数据\n  const stats = {\n    totalTasks: tasks.length,\n    totalStrategies: strategies.length,\n    totalExecutions: executions.length,\n    runningExecutions: executions.filter(e => e.status === 'running').length,\n  };\n\n  return (\n    <div style={{ padding: '24px' }}>\n      <Title level={2}>Test Management</Title>\n      \n      {/* 统计卡片 */}\n      <Row gutter={16} style={{ marginBottom: '24px' }}>\n        <Col span={6}>\n          <Card>\n            <Statistic\n              title=\"Test Tasks\"\n              value={stats.totalTasks}\n              prefix={<FileTextOutlined />}\n              valueStyle={{ color: '#1890ff' }}\n            />\n          </Card>\n        </Col>\n        <Col span={6}>\n          <Card>\n            <Statistic\n              title=\"Test Strategies\"\n              value={stats.totalStrategies}\n              prefix={<SettingOutlined />}\n              valueStyle={{ color: '#52c41a' }}\n            />\n          </Card>\n        </Col>\n        <Col span={6}>\n          <Card>\n            <Statistic\n              title=\"Executions\"\n              value={stats.totalExecutions}\n              prefix={<ThunderboltOutlined />}\n              valueStyle={{ color: '#faad14' }}\n            />\n          </Card>\n        </Col>\n        <Col span={6}>\n          <Card>\n            <Statistic\n              title=\"Running\"\n              value={stats.runningExecutions}\n              prefix={<PlayCircleOutlined />}\n              valueStyle={{ color: '#f5222d' }}\n            />\n          </Card>\n        </Col>\n      </Row>\n\n      {/* 主要内容 */}\n      <Card>\n        <div style={{ marginBottom: '16px' }}>\n          <Button\n            type=\"primary\"\n            icon={<PlusOutlined />}\n            onClick={() => setTaskModalVisible(true)}\n          >\n            Create Test Task\n          </Button>\n        </div>\n        <Table\n          columns={taskColumns}\n          dataSource={tasks}\n          rowKey=\"id\"\n          loading={loading}\n          pagination={{ pageSize: 10 }}\n        />\n      </Card>\n\n      {/* 创建/编辑测试任务模态框 */}\n      <Modal\n        title={selectedTask ? \"Edit Test Task\" : \"Create Test Task\"}\n        open={taskModalVisible}\n        onCancel={() => {\n          setTaskModalVisible(false);\n          taskForm.resetFields();\n          setSelectedTask(null);\n        }}\n        footer={null}\n        width={500}\n      >\n        <Form\n          form={taskForm}\n          layout=\"vertical\"\n          onFinish={handleCreateTask}\n        >\n          <Form.Item\n            name=\"name\"\n            label=\"Task Name\"\n            rules={[{ required: true, message: 'Please enter task name' }]}\n          >\n            <Input placeholder=\"Enter task name\" />\n          </Form.Item>\n          \n          <Form.Item\n            name=\"description\"\n            label=\"Task Description\"\n          >\n            <Input.TextArea placeholder=\"Enter task description\" rows={4} />\n          </Form.Item>\n          \n          <Form.Item>\n            <Space>\n              <Button type=\"primary\" htmlType=\"submit\">\n                {selectedTask ? \"Update\" : \"Create\"}\n              </Button>\n              <Button onClick={() => {\n                setTaskModalVisible(false);\n                taskForm.resetFields();\n                setSelectedTask(null);\n              }}>\n                Cancel\n              </Button>\n            </Space>\n          </Form.Item>\n        </Form>\n      </Modal>\n\n    </div>\n  );\n};\n\nexport default TestTaskManagement;\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAClD,OACEC,IAAI,CACJC,KAAK,CACLC,MAAM,CACNC,KAAK,CAELC,KAAK,CACLC,IAAI,CACJC,KAAK,CACLC,MAAM,CACNC,OAAO,CACPC,UAAU,CACVC,GAAG,CACHC,GAAG,CACHC,SAAS,CACTC,UAAU,KACL,MAAM,CACb,OACEC,YAAY,CACZC,YAAY,CACZC,cAAc,CACdC,eAAe,CACfC,gBAAgB,CAChBC,mBAAmB,CACnBC,kBAAkB,KACb,mBAAmB,CAC1B,OAASC,WAAW,KAAQ,kBAAkB,CAC9C,OACEC,eAAe,CACfC,mBAAmB,CACnBC,oBAAoB,KACf,iBAAiB,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAOzB,KAAM,CAAEC,KAAK,CAAEC,IAAK,CAAC,CAAGjB,UAAU,CAClC,KAAM,CAAEkB,MAAO,CAAC,CAAGxB,MAAM,CAEzB,KAAM,CAAAyB,kBAA4B,CAAGA,CAAA,GAAM,CACzC,KAAM,CAAAC,QAAQ,CAAGZ,WAAW,CAAC,CAAC,CAC9B,KAAM,CAACa,OAAO,CAAEC,UAAU,CAAC,CAAGrC,QAAQ,CAAC,KAAK,CAAC,CAC7C,KAAM,CAACsC,KAAK,CAAEC,QAAQ,CAAC,CAAGvC,QAAQ,CAAa,EAAE,CAAC,CAClD,KAAM,CAACwC,UAAU,CAAEC,aAAa,CAAC,CAAGzC,QAAQ,CAAiB,EAAE,CAAC,CAChE,KAAM,CAAC0C,UAAU,CAAEC,aAAa,CAAC,CAAG3C,QAAQ,CAAkB,EAAE,CAAC,CAEjE;AACA,KAAM,CAAC4C,gBAAgB,CAAEC,mBAAmB,CAAC,CAAG7C,QAAQ,CAAC,KAAK,CAAC,CAC/D,KAAM,CAAC8C,YAAY,CAAEC,eAAe,CAAC,CAAG/C,QAAQ,CAAkB,IAAI,CAAC,CAEvE;AACA,KAAM,CAACgD,QAAQ,CAAC,CAAGzC,IAAI,CAAC0C,OAAO,CAAC,CAAC,CAEjC;AACAhD,SAAS,CAAC,IAAM,CACdiD,QAAQ,CAAC,CAAC,CACZ,CAAC,CAAE,EAAE,CAAC,CAEN,KAAM,CAAAA,QAAQ,CAAG,KAAAA,CAAA,GAAY,CAC3Bb,UAAU,CAAC,IAAI,CAAC,CAChB,GAAI,CACF,KAAM,CAACc,SAAS,CAAEC,cAAc,CAAEC,cAAc,CAAC,CAAG,KAAM,CAAAC,OAAO,CAACC,GAAG,CAAC,CACpE/B,eAAe,CAACgC,YAAY,CAAC,CAAC,CAC9B/B,mBAAmB,CAACgC,iBAAiB,CAAC,CAAC,CACvC/B,oBAAoB,CAACgC,iBAAiB,CAAC,CAAC,CACzC,CAAC,CAEFnB,QAAQ,CAACY,SAAS,CAAC,CACnBV,aAAa,CAACW,cAAc,CAAC,CAC7BT,aAAa,CAACU,cAAc,CAAC,CAC/B,CAAE,MAAOM,KAAK,CAAE,CACdjD,OAAO,CAACiD,KAAK,CAAC,qBAAqB,CAAC,CACtC,CAAC,OAAS,CACRtB,UAAU,CAAC,KAAK,CAAC,CACnB,CACF,CAAC,CAED;AACA,KAAM,CAAAuB,gBAAgB,CAAG,KAAO,CAAAC,MAAW,EAAK,CAC9C,GAAI,CACF,GAAIf,YAAY,CAAE,CAChB;AACA,KAAM,CAAAtB,eAAe,CAACsC,cAAc,CAAChB,YAAY,CAACiB,EAAE,CAAEF,MAAM,CAAC,CAC7DnD,OAAO,CAACsD,OAAO,CAAC,gCAAgC,CAAC,CACnD,CAAC,IAAM,CACL;AACA,KAAM,CAAAxC,eAAe,CAACyC,cAAc,CAACJ,MAAM,CAAC,CAC5CnD,OAAO,CAACsD,OAAO,CAAC,gCAAgC,CAAC,CACnD,CACAnB,mBAAmB,CAAC,KAAK,CAAC,CAC1BG,QAAQ,CAACkB,WAAW,CAAC,CAAC,CACtBnB,eAAe,CAAC,IAAI,CAAC,CACrBG,QAAQ,CAAC,CAAC,CACZ,CAAE,MAAOS,KAAK,CAAE,CACdjD,OAAO,CAACiD,KAAK,CAACb,YAAY,CAAG,4BAA4B,CAAG,4BAA4B,CAAC,CAC3F,CACF,CAAC,CAED;AACA,KAAM,CAAAqB,gBAAgB,CAAG,KAAO,CAAAC,MAAc,EAAK,CACjD,GAAI,CACF,KAAM,CAAA5C,eAAe,CAAC6C,cAAc,CAACD,MAAM,CAAC,CAC5C1D,OAAO,CAACsD,OAAO,CAAC,gCAAgC,CAAC,CACjDd,QAAQ,CAAC,CAAC,CACZ,CAAE,MAAOS,KAAK,CAAE,CACdjD,OAAO,CAACiD,KAAK,CAAC,4BAA4B,CAAC,CAC7C,CACF,CAAC,CAED;AACA,KAAM,CAAAW,WAAW,CAAG,CAClB,CACEC,KAAK,CAAE,WAAW,CAClBC,SAAS,CAAE,MAAM,CACjBC,GAAG,CAAE,MAAM,CACXC,MAAM,CAAEA,CAACC,IAAY,CAAEC,MAAgB,gBACrChD,IAAA,CAACxB,MAAM,EAACyE,IAAI,CAAC,MAAM,CAACC,OAAO,CAAEA,CAAA,GAAM3C,QAAQ,gBAAA4C,MAAA,CAAgBH,MAAM,CAACb,EAAE,CAAE,CAAE,CAAAiB,QAAA,CACrEL,IAAI,CACC,CAEZ,CAAC,CACD,CACEJ,KAAK,CAAE,aAAa,CACpBC,SAAS,CAAE,aAAa,CACxBC,GAAG,CAAE,aAAa,CAClBC,MAAM,CAAGC,IAAY,EAAKA,IAAI,EAAI,GACpC,CAAC,CACD,CACEJ,KAAK,CAAE,YAAY,CACnBC,SAAS,CAAE,YAAY,CACvBC,GAAG,CAAE,YAAY,CACjBC,MAAM,CAAGO,IAAY,EAAK,GAAI,CAAAC,IAAI,CAACD,IAAI,CAAC,CAACE,cAAc,CAAC,CAC1D,CAAC,CACD,CACEZ,KAAK,CAAE,SAAS,CAChBE,GAAG,CAAE,QAAQ,CACbC,MAAM,CAAEA,CAACU,CAAM,CAAER,MAAgB,gBAC/B9C,KAAA,CAACzB,KAAK,EAAA2E,QAAA,eACJpD,IAAA,CAACxB,MAAM,EACLiF,IAAI,CAAC,OAAO,CACZC,IAAI,cAAE1D,IAAA,CAACX,YAAY,GAAE,CAAE,CACvB6D,OAAO,CAAEA,CAAA,GAAM,CACb/B,eAAe,CAAC6B,MAAM,CAAC,CACvB5B,QAAQ,CAACuC,cAAc,CAACX,MAAM,CAAC,CAC/B/B,mBAAmB,CAAC,IAAI,CAAC,CAC3B,CAAE,CAAAmC,QAAA,CACH,MAED,CAAQ,CAAC,cACTpD,IAAA,CAACjB,UAAU,EACT4D,KAAK,CAAC,iDAAiD,CACvDiB,SAAS,CAAEA,CAAA,GAAMrB,gBAAgB,CAACS,MAAM,CAACb,EAAE,CAAE,CAAAiB,QAAA,cAE7CpD,IAAA,CAACxB,MAAM,EAACiF,IAAI,CAAC,OAAO,CAACI,MAAM,MAACH,IAAI,cAAE1D,IAAA,CAACV,cAAc,GAAE,CAAE,CAAA8D,QAAA,CAAC,QAEtD,CAAQ,CAAC,CACC,CAAC,EACR,CAEX,CAAC,CACF,CAGD;AACA,KAAM,CAAAU,KAAK,CAAG,CACZC,UAAU,CAAErD,KAAK,CAACsD,MAAM,CACxBC,eAAe,CAAErD,UAAU,CAACoD,MAAM,CAClCE,eAAe,CAAEpD,UAAU,CAACkD,MAAM,CAClCG,iBAAiB,CAAErD,UAAU,CAACsD,MAAM,CAACC,CAAC,EAAIA,CAAC,CAACC,MAAM,GAAK,SAAS,CAAC,CAACN,MACpE,CAAC,CAED,mBACE9D,KAAA,QAAKqE,KAAK,CAAE,CAAEC,OAAO,CAAE,MAAO,CAAE,CAAApB,QAAA,eAC9BpD,IAAA,CAACG,KAAK,EAACsE,KAAK,CAAE,CAAE,CAAArB,QAAA,CAAC,iBAAe,CAAO,CAAC,cAGxClD,KAAA,CAAClB,GAAG,EAAC0F,MAAM,CAAE,EAAG,CAACH,KAAK,CAAE,CAAEI,YAAY,CAAE,MAAO,CAAE,CAAAvB,QAAA,eAC/CpD,IAAA,CAACf,GAAG,EAAC2F,IAAI,CAAE,CAAE,CAAAxB,QAAA,cACXpD,IAAA,CAAC1B,IAAI,EAAA8E,QAAA,cACHpD,IAAA,CAACd,SAAS,EACRyD,KAAK,CAAC,YAAY,CAClBkC,KAAK,CAAEf,KAAK,CAACC,UAAW,CACxBe,MAAM,cAAE9E,IAAA,CAACR,gBAAgB,GAAE,CAAE,CAC7BuF,UAAU,CAAE,CAAEC,KAAK,CAAE,SAAU,CAAE,CAClC,CAAC,CACE,CAAC,CACJ,CAAC,cACNhF,IAAA,CAACf,GAAG,EAAC2F,IAAI,CAAE,CAAE,CAAAxB,QAAA,cACXpD,IAAA,CAAC1B,IAAI,EAAA8E,QAAA,cACHpD,IAAA,CAACd,SAAS,EACRyD,KAAK,CAAC,iBAAiB,CACvBkC,KAAK,CAAEf,KAAK,CAACG,eAAgB,CAC7Ba,MAAM,cAAE9E,IAAA,CAACT,eAAe,GAAE,CAAE,CAC5BwF,UAAU,CAAE,CAAEC,KAAK,CAAE,SAAU,CAAE,CAClC,CAAC,CACE,CAAC,CACJ,CAAC,cACNhF,IAAA,CAACf,GAAG,EAAC2F,IAAI,CAAE,CAAE,CAAAxB,QAAA,cACXpD,IAAA,CAAC1B,IAAI,EAAA8E,QAAA,cACHpD,IAAA,CAACd,SAAS,EACRyD,KAAK,CAAC,YAAY,CAClBkC,KAAK,CAAEf,KAAK,CAACI,eAAgB,CAC7BY,MAAM,cAAE9E,IAAA,CAACP,mBAAmB,GAAE,CAAE,CAChCsF,UAAU,CAAE,CAAEC,KAAK,CAAE,SAAU,CAAE,CAClC,CAAC,CACE,CAAC,CACJ,CAAC,cACNhF,IAAA,CAACf,GAAG,EAAC2F,IAAI,CAAE,CAAE,CAAAxB,QAAA,cACXpD,IAAA,CAAC1B,IAAI,EAAA8E,QAAA,cACHpD,IAAA,CAACd,SAAS,EACRyD,KAAK,CAAC,SAAS,CACfkC,KAAK,CAAEf,KAAK,CAACK,iBAAkB,CAC/BW,MAAM,cAAE9E,IAAA,CAACN,kBAAkB,GAAE,CAAE,CAC/BqF,UAAU,CAAE,CAAEC,KAAK,CAAE,SAAU,CAAE,CAClC,CAAC,CACE,CAAC,CACJ,CAAC,EACH,CAAC,cAGN9E,KAAA,CAAC5B,IAAI,EAAA8E,QAAA,eACHpD,IAAA,QAAKuE,KAAK,CAAE,CAAEI,YAAY,CAAE,MAAO,CAAE,CAAAvB,QAAA,cACnCpD,IAAA,CAACxB,MAAM,EACLyE,IAAI,CAAC,SAAS,CACdS,IAAI,cAAE1D,IAAA,CAACZ,YAAY,GAAE,CAAE,CACvB8D,OAAO,CAAEA,CAAA,GAAMjC,mBAAmB,CAAC,IAAI,CAAE,CAAAmC,QAAA,CAC1C,kBAED,CAAQ,CAAC,CACN,CAAC,cACNpD,IAAA,CAACzB,KAAK,EACJ0G,OAAO,CAAEvC,WAAY,CACrBwC,UAAU,CAAExE,KAAM,CAClByE,MAAM,CAAC,IAAI,CACX3E,OAAO,CAAEA,OAAQ,CACjB4E,UAAU,CAAE,CAAEC,QAAQ,CAAE,EAAG,CAAE,CAC9B,CAAC,EACE,CAAC,cAGPrF,IAAA,CAACtB,KAAK,EACJiE,KAAK,CAAEzB,YAAY,CAAG,gBAAgB,CAAG,kBAAmB,CAC5DoE,IAAI,CAAEtE,gBAAiB,CACvBuE,QAAQ,CAAEA,CAAA,GAAM,CACdtE,mBAAmB,CAAC,KAAK,CAAC,CAC1BG,QAAQ,CAACkB,WAAW,CAAC,CAAC,CACtBnB,eAAe,CAAC,IAAI,CAAC,CACvB,CAAE,CACFqE,MAAM,CAAE,IAAK,CACbC,KAAK,CAAE,GAAI,CAAArC,QAAA,cAEXlD,KAAA,CAACvB,IAAI,EACH+G,IAAI,CAAEtE,QAAS,CACfuE,MAAM,CAAC,UAAU,CACjBC,QAAQ,CAAE5D,gBAAiB,CAAAoB,QAAA,eAE3BpD,IAAA,CAACrB,IAAI,CAACkH,IAAI,EACRC,IAAI,CAAC,MAAM,CACXC,KAAK,CAAC,WAAW,CACjBC,KAAK,CAAE,CAAC,CAAEC,QAAQ,CAAE,IAAI,CAAEnH,OAAO,CAAE,wBAAyB,CAAC,CAAE,CAAAsE,QAAA,cAE/DpD,IAAA,CAACpB,KAAK,EAACsH,WAAW,CAAC,iBAAiB,CAAE,CAAC,CAC9B,CAAC,cAEZlG,IAAA,CAACrB,IAAI,CAACkH,IAAI,EACRC,IAAI,CAAC,aAAa,CAClBC,KAAK,CAAC,kBAAkB,CAAA3C,QAAA,cAExBpD,IAAA,CAACpB,KAAK,CAACuH,QAAQ,EAACD,WAAW,CAAC,wBAAwB,CAACE,IAAI,CAAE,CAAE,CAAE,CAAC,CACvD,CAAC,cAEZpG,IAAA,CAACrB,IAAI,CAACkH,IAAI,EAAAzC,QAAA,cACRlD,KAAA,CAACzB,KAAK,EAAA2E,QAAA,eACJpD,IAAA,CAACxB,MAAM,EAACyE,IAAI,CAAC,SAAS,CAACoD,QAAQ,CAAC,QAAQ,CAAAjD,QAAA,CACrClC,YAAY,CAAG,QAAQ,CAAG,QAAQ,CAC7B,CAAC,cACTlB,IAAA,CAACxB,MAAM,EAAC0E,OAAO,CAAEA,CAAA,GAAM,CACrBjC,mBAAmB,CAAC,KAAK,CAAC,CAC1BG,QAAQ,CAACkB,WAAW,CAAC,CAAC,CACtBnB,eAAe,CAAC,IAAI,CAAC,CACvB,CAAE,CAAAiC,QAAA,CAAC,QAEH,CAAQ,CAAC,EACJ,CAAC,CACC,CAAC,EACR,CAAC,CACF,CAAC,EAEL,CAAC,CAEV,CAAC,CAED,cAAe,CAAA9C,kBAAkB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}